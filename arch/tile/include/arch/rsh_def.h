/*
 * Copyright 2013 Tilera Corporation. All Rights Reserved.
 *
 *   This program is free software; you can redistribute it and/or
 *   modify it under the terms of the GNU General Public License
 *   as published by the Free Software Foundation, version 2.
 *
 *   This program is distributed in the hope that it will be useful, but
 *   WITHOUT ANY WARRANTY; without even the implied warranty of
 *   MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, GOOD TITLE or
 *   NON INFRINGEMENT.  See the GNU General Public License for
 *   more details.
 */

#ifndef __ARCH_RSH_DEF_H__
#define __ARCH_RSH_DEF_H__

#ifdef __ASSEMBLER__
#define _64bit(x) x
#else /* __ASSEMBLER__ */
#ifdef __tile__
#define _64bit(x) x ## UL
#else /* __tile__ */
#define _64bit(x) x ## ULL
#endif /* __tile__ */
#endif /* __ASSEMBLER */





/*
 * MMIO Address Space.
 * The MMIO physical address space for the rshim is described below.  This is
 * a general description of the MMIO space as opposed to a register
 * description
 */
#define RSH_MMIO_ADDRESS_SPACE__FIRST_WORD 0x0000
#define RSH_MMIO_ADDRESS_SPACE__LAST_WORD 0xfffffffff8

#define RSH_MMIO_ADDRESS_SPACE__OFFSET_SHIFT 0
#define RSH_MMIO_ADDRESS_SPACE__OFFSET_WIDTH 16
#define RSH_MMIO_ADDRESS_SPACE__OFFSET_RESET_VAL 0
#define RSH_MMIO_ADDRESS_SPACE__OFFSET_RMASK 0xffff
#define RSH_MMIO_ADDRESS_SPACE__OFFSET_MASK  0xffff
#define RSH_MMIO_ADDRESS_SPACE__OFFSET_FIELD 0,15

#define RSH_MMIO_ADDRESS_SPACE__PROT_SHIFT 16
#define RSH_MMIO_ADDRESS_SPACE__PROT_WIDTH 2
#define RSH_MMIO_ADDRESS_SPACE__PROT_RESET_VAL 0
#define RSH_MMIO_ADDRESS_SPACE__PROT_RMASK 0x3
#define RSH_MMIO_ADDRESS_SPACE__PROT_MASK  0x30000
#define RSH_MMIO_ADDRESS_SPACE__PROT_FIELD 16,17

#define RSH_MMIO_ADDRESS_SPACE__CHANNEL_SHIFT 36
#define RSH_MMIO_ADDRESS_SPACE__CHANNEL_WIDTH 4
#define RSH_MMIO_ADDRESS_SPACE__CHANNEL_RESET_VAL 0
#define RSH_MMIO_ADDRESS_SPACE__CHANNEL_RMASK 0xf
#define RSH_MMIO_ADDRESS_SPACE__CHANNEL_MASK  _64bit(0xf000000000)
#define RSH_MMIO_ADDRESS_SPACE__CHANNEL_FIELD 36,39
#define RSH_MMIO_ADDRESS_SPACE__CHANNEL_VAL_RSHIM 0x0
#define RSH_MMIO_ADDRESS_SPACE__CHANNEL_VAL_UART0 0x1
#define RSH_MMIO_ADDRESS_SPACE__CHANNEL_VAL_UART1 0x2
#define RSH_MMIO_ADDRESS_SPACE__CHANNEL_VAL_I2CM0 0x3
#define RSH_MMIO_ADDRESS_SPACE__CHANNEL_VAL_I2CM1 0x4
#define RSH_MMIO_ADDRESS_SPACE__CHANNEL_VAL_I2CM2 0x5
#define RSH_MMIO_ADDRESS_SPACE__CHANNEL_VAL_I2CS 0x6
#define RSH_MMIO_ADDRESS_SPACE__CHANNEL_VAL_SPI 0x7
#define RSH_MMIO_ADDRESS_SPACE__CHANNEL_VAL_RSVD8 0x8
#define RSH_MMIO_ADDRESS_SPACE__CHANNEL_VAL_RSVD9 0x9
#define RSH_MMIO_ADDRESS_SPACE__CHANNEL_VAL_RSVD10 0xa
#define RSH_MMIO_ADDRESS_SPACE__CHANNEL_VAL_RSVD11 0xb
#define RSH_MMIO_ADDRESS_SPACE__CHANNEL_VAL_RSVD12 0xc
#define RSH_MMIO_ADDRESS_SPACE__CHANNEL_VAL_RSVD13 0xd
#define RSH_MMIO_ADDRESS_SPACE__CHANNEL_VAL_RSVD14 0xe
#define RSH_MMIO_ADDRESS_SPACE__CHANNEL_VAL_RSVD15 0xf


/* Boot Control. */
#define RSH_BOOT_CONTROL 0x0528

#define RSH_BOOT_CONTROL__BOOT_MODE_SHIFT 0
#define RSH_BOOT_CONTROL__BOOT_MODE_WIDTH 2
#define RSH_BOOT_CONTROL__BOOT_MODE_RESET_VAL 0
#define RSH_BOOT_CONTROL__BOOT_MODE_RMASK 0x3
#define RSH_BOOT_CONTROL__BOOT_MODE_MASK  0x3
#define RSH_BOOT_CONTROL__BOOT_MODE_FIELD 0,1
#define RSH_BOOT_CONTROL__BOOT_MODE_VAL_NONE 0x0
#define RSH_BOOT_CONTROL__BOOT_MODE_VAL_SPI 0x1
#define RSH_BOOT_CONTROL__BOOT_MODE_VAL_I2CM 0x2


/*
 * Breadcrumb0.
 * Scratchpad register that resets only on hard_rst_l (power on reset).
 * Typically used by software to leave information for the reboot software on
 * software reset.
 */
#define RSH_BREADCRUMB0 0x0510

#define RSH_BREADCRUMB0__BREADCRUMB0_SHIFT 0
#define RSH_BREADCRUMB0__BREADCRUMB0_WIDTH 64
#define RSH_BREADCRUMB0__BREADCRUMB0_RESET_VAL 0
#define RSH_BREADCRUMB0__BREADCRUMB0_RMASK _64bit(0xffffffffffffffff)
#define RSH_BREADCRUMB0__BREADCRUMB0_MASK  _64bit(0xffffffffffffffff)
#define RSH_BREADCRUMB0__BREADCRUMB0_FIELD 0,63


/*
 * Breadcrumb1.
 * Scratchpad register that resets only on hard_rst_l (power on reset).
 * Typically used by software to leave information for the reboot software on
 * software reset.
 */
#define RSH_BREADCRUMB1 0x0518

#define RSH_BREADCRUMB1__BREADCRUMB1_SHIFT 0
#define RSH_BREADCRUMB1__BREADCRUMB1_WIDTH 64
#define RSH_BREADCRUMB1__BREADCRUMB1_RESET_VAL 0
#define RSH_BREADCRUMB1__BREADCRUMB1_RMASK _64bit(0xffffffffffffffff)
#define RSH_BREADCRUMB1__BREADCRUMB1_MASK  _64bit(0xffffffffffffffff)
#define RSH_BREADCRUMB1__BREADCRUMB1_FIELD 0,63


/*
 * Byte Access Register Address.
 * Register address used for read/write accesses triggered by
 * BYTE_ACC_WDAT/RDAT.  The BYTE_ACC_CTL.BYTE_PTR is used and auto
 * incremented when writing or reading this register.
 */
#define RSH_BYTE_ACC_ADDR 0x04a8

#define RSH_BYTE_ACC_ADDR__REGNUM_SHIFT 3
#define RSH_BYTE_ACC_ADDR__REGNUM_WIDTH 13
#define RSH_BYTE_ACC_ADDR__REGNUM_RESET_VAL 0
#define RSH_BYTE_ACC_ADDR__REGNUM_RMASK 0x1fff
#define RSH_BYTE_ACC_ADDR__REGNUM_MASK  0xfff8
#define RSH_BYTE_ACC_ADDR__REGNUM_FIELD 3,15

#define RSH_BYTE_ACC_ADDR__CHANNEL_SHIFT 16
#define RSH_BYTE_ACC_ADDR__CHANNEL_WIDTH 4
#define RSH_BYTE_ACC_ADDR__CHANNEL_RESET_VAL 0
#define RSH_BYTE_ACC_ADDR__CHANNEL_RMASK 0xf
#define RSH_BYTE_ACC_ADDR__CHANNEL_MASK  0xf0000
#define RSH_BYTE_ACC_ADDR__CHANNEL_FIELD 16,19


/*
 * Byte Access Control.
 * Provides 8-byte access to rshim registers using 1B, 2B, or 4B accesses.
 */
#define RSH_BYTE_ACC_CTL 0x0490

#define RSH_BYTE_ACC_CTL__BYTE_PTR_SHIFT 0
#define RSH_BYTE_ACC_CTL__BYTE_PTR_WIDTH 3
#define RSH_BYTE_ACC_CTL__BYTE_PTR_RESET_VAL 0
#define RSH_BYTE_ACC_CTL__BYTE_PTR_RMASK 0x7
#define RSH_BYTE_ACC_CTL__BYTE_PTR_MASK  0x7
#define RSH_BYTE_ACC_CTL__BYTE_PTR_FIELD 0,2

#define RSH_BYTE_ACC_CTL__SIZE_SHIFT 3
#define RSH_BYTE_ACC_CTL__SIZE_WIDTH 2
#define RSH_BYTE_ACC_CTL__SIZE_RESET_VAL 0
#define RSH_BYTE_ACC_CTL__SIZE_RMASK 0x3
#define RSH_BYTE_ACC_CTL__SIZE_MASK  0x18
#define RSH_BYTE_ACC_CTL__SIZE_FIELD 3,4
#define RSH_BYTE_ACC_CTL__SIZE_VAL_1BYTE 0x0
#define RSH_BYTE_ACC_CTL__SIZE_VAL_2BYTE 0x1
#define RSH_BYTE_ACC_CTL__SIZE_VAL_4BYTE 0x2

#define RSH_BYTE_ACC_CTL__PENDING_SHIFT 5
#define RSH_BYTE_ACC_CTL__PENDING_WIDTH 1
#define RSH_BYTE_ACC_CTL__PENDING_RESET_VAL 0
#define RSH_BYTE_ACC_CTL__PENDING_RMASK 0x1
#define RSH_BYTE_ACC_CTL__PENDING_MASK  0x20
#define RSH_BYTE_ACC_CTL__PENDING_FIELD 5,5

#define RSH_BYTE_ACC_CTL__READ_TRIG_SHIFT 6
#define RSH_BYTE_ACC_CTL__READ_TRIG_WIDTH 1
#define RSH_BYTE_ACC_CTL__READ_TRIG_RESET_VAL 0
#define RSH_BYTE_ACC_CTL__READ_TRIG_RMASK 0x1
#define RSH_BYTE_ACC_CTL__READ_TRIG_MASK  0x40
#define RSH_BYTE_ACC_CTL__READ_TRIG_FIELD 6,6


/*
 * Byte Access Read Data.
 * 8 bytes of read data captured when READ_TRIGGER is written with a 1.
 */
#define RSH_BYTE_ACC_RDAT 0x04a0

#define RSH_BYTE_ACC_RDAT__DAT_SHIFT 0
#define RSH_BYTE_ACC_RDAT__DAT_WIDTH 64
#define RSH_BYTE_ACC_RDAT__DAT_RESET_VAL 0
#define RSH_BYTE_ACC_RDAT__DAT_RMASK _64bit(0xffffffffffffffff)
#define RSH_BYTE_ACC_RDAT__DAT_MASK  _64bit(0xffffffffffffffff)
#define RSH_BYTE_ACC_RDAT__DAT_FIELD 0,63


/*
 * Byte Access Write Data.
 * 8 bytes of write data written when BYTE_ACC_CTL.BYTE_PTR wraps back to
 * zero.
 */
#define RSH_BYTE_ACC_WDAT 0x0498

#define RSH_BYTE_ACC_WDAT__DAT_SHIFT 0
#define RSH_BYTE_ACC_WDAT__DAT_WIDTH 64
#define RSH_BYTE_ACC_WDAT__DAT_RESET_VAL 0
#define RSH_BYTE_ACC_WDAT__DAT_RMASK _64bit(0xffffffffffffffff)
#define RSH_BYTE_ACC_WDAT__DAT_MASK  _64bit(0xffffffffffffffff)
#define RSH_BYTE_ACC_WDAT__DAT_FIELD 0,63


/*
 * Clock Control.
 * Provides control over the core PLL
 */
#define RSH_CLOCK_CONTROL 0x04f8

#define RSH_CLOCK_CONTROL__ENA_SHIFT 0
#define RSH_CLOCK_CONTROL__ENA_WIDTH 1
#define RSH_CLOCK_CONTROL__ENA_RESET_VAL 0
#define RSH_CLOCK_CONTROL__ENA_RMASK 0x1
#define RSH_CLOCK_CONTROL__ENA_MASK  0x1
#define RSH_CLOCK_CONTROL__ENA_FIELD 0,0

#define RSH_CLOCK_CONTROL__PLL_RANGE_SHIFT 1
#define RSH_CLOCK_CONTROL__PLL_RANGE_WIDTH 3
#define RSH_CLOCK_CONTROL__PLL_RANGE_RESET_VAL 0
#define RSH_CLOCK_CONTROL__PLL_RANGE_RMASK 0x7
#define RSH_CLOCK_CONTROL__PLL_RANGE_MASK  0xe
#define RSH_CLOCK_CONTROL__PLL_RANGE_FIELD 1,3
#define RSH_CLOCK_CONTROL__PLL_RANGE_VAL_BYP 0x0
#define RSH_CLOCK_CONTROL__PLL_RANGE_VAL_R14_16 0x1
#define RSH_CLOCK_CONTROL__PLL_RANGE_VAL_R16_26 0x2
#define RSH_CLOCK_CONTROL__PLL_RANGE_VAL_R26_42 0x3
#define RSH_CLOCK_CONTROL__PLL_RANGE_VAL_R42_65 0x4
#define RSH_CLOCK_CONTROL__PLL_RANGE_VAL_R65_104 0x5
#define RSH_CLOCK_CONTROL__PLL_RANGE_VAL_R104_166 0x6
#define RSH_CLOCK_CONTROL__PLL_RANGE_VAL_R166_200 0x7

#define RSH_CLOCK_CONTROL__PLL_Q_SHIFT 4
#define RSH_CLOCK_CONTROL__PLL_Q_WIDTH 3
#define RSH_CLOCK_CONTROL__PLL_Q_RESET_VAL 0
#define RSH_CLOCK_CONTROL__PLL_Q_RMASK 0x7
#define RSH_CLOCK_CONTROL__PLL_Q_MASK  0x70
#define RSH_CLOCK_CONTROL__PLL_Q_FIELD 4,6

#define RSH_CLOCK_CONTROL__PLL_N_SHIFT 7
#define RSH_CLOCK_CONTROL__PLL_N_WIDTH 6
#define RSH_CLOCK_CONTROL__PLL_N_RESET_VAL 0
#define RSH_CLOCK_CONTROL__PLL_N_RMASK 0x3f
#define RSH_CLOCK_CONTROL__PLL_N_MASK  0x1f80
#define RSH_CLOCK_CONTROL__PLL_N_FIELD 7,12

#define RSH_CLOCK_CONTROL__PLL_M_SHIFT 13
#define RSH_CLOCK_CONTROL__PLL_M_WIDTH 8
#define RSH_CLOCK_CONTROL__PLL_M_RESET_VAL 0
#define RSH_CLOCK_CONTROL__PLL_M_RMASK 0xff
#define RSH_CLOCK_CONTROL__PLL_M_MASK  0x1fe000
#define RSH_CLOCK_CONTROL__PLL_M_FIELD 13,20

#define RSH_CLOCK_CONTROL__CLOCK_READY_SHIFT 31
#define RSH_CLOCK_CONTROL__CLOCK_READY_WIDTH 1
#define RSH_CLOCK_CONTROL__CLOCK_READY_RESET_VAL 0
#define RSH_CLOCK_CONTROL__CLOCK_READY_RMASK 0x1
#define RSH_CLOCK_CONTROL__CLOCK_READY_MASK  0x80000000
#define RSH_CLOCK_CONTROL__CLOCK_READY_FIELD 31,31


/* Clock Count. */
#define RSH_CLOCK_COUNT 0x0038

#define RSH_CLOCK_COUNT__RUN_SHIFT 0
#define RSH_CLOCK_COUNT__RUN_WIDTH 1
#define RSH_CLOCK_COUNT__RUN_RESET_VAL 0
#define RSH_CLOCK_COUNT__RUN_RMASK 0x1
#define RSH_CLOCK_COUNT__RUN_MASK  0x1
#define RSH_CLOCK_COUNT__RUN_FIELD 0,0

#define RSH_CLOCK_COUNT__COUNT_SHIFT 1
#define RSH_CLOCK_COUNT__COUNT_WIDTH 15
#define RSH_CLOCK_COUNT__COUNT_RESET_VAL 0
#define RSH_CLOCK_COUNT__COUNT_RMASK 0x7fff
#define RSH_CLOCK_COUNT__COUNT_MASK  0xfffe
#define RSH_CLOCK_COUNT__COUNT_FIELD 1,15


/*
 * Device Protection.
 * Controls device access to rshim services.  When a bit is one, the
 * associated device will be disabled.  Reads and writes from the device will
 * acknowledged but ignored.
 */
#define RSH_DEVICE_PROTECTION 0x0538

#define RSH_DEVICE_PROTECTION__DISABLE_DEVICE_SHIFT 0
#define RSH_DEVICE_PROTECTION__DISABLE_DEVICE_WIDTH 7
#define RSH_DEVICE_PROTECTION__DISABLE_DEVICE_RESET_VAL 0
#define RSH_DEVICE_PROTECTION__DISABLE_DEVICE_RMASK 0x7f
#define RSH_DEVICE_PROTECTION__DISABLE_DEVICE_MASK  0x7f
#define RSH_DEVICE_PROTECTION__DISABLE_DEVICE_FIELD 0,6

#define RSH_DEVICE_PROTECTION__DISABLE_RCI_SHIFT 32
#define RSH_DEVICE_PROTECTION__DISABLE_RCI_WIDTH 8
#define RSH_DEVICE_PROTECTION__DISABLE_RCI_RESET_VAL 0
#define RSH_DEVICE_PROTECTION__DISABLE_RCI_RMASK 0xff
#define RSH_DEVICE_PROTECTION__DISABLE_RCI_MASK  _64bit(0xff00000000)
#define RSH_DEVICE_PROTECTION__DISABLE_RCI_FIELD 32,39


/*
 * Device Control.
 * This register provides general device control.
 */
#define RSH_DEV_CTL 0x0008

#define RSH_DEV_CTL__RDN_ROUTE_ORDER_SHIFT 2
#define RSH_DEV_CTL__RDN_ROUTE_ORDER_WIDTH 1
#define RSH_DEV_CTL__RDN_ROUTE_ORDER_RESET_VAL 1
#define RSH_DEV_CTL__RDN_ROUTE_ORDER_RMASK 0x1
#define RSH_DEV_CTL__RDN_ROUTE_ORDER_MASK  0x4
#define RSH_DEV_CTL__RDN_ROUTE_ORDER_FIELD 2,2

#define RSH_DEV_CTL__SDN_ROUTE_ORDER_SHIFT 3
#define RSH_DEV_CTL__SDN_ROUTE_ORDER_WIDTH 1
#define RSH_DEV_CTL__SDN_ROUTE_ORDER_RESET_VAL 0
#define RSH_DEV_CTL__SDN_ROUTE_ORDER_RMASK 0x1
#define RSH_DEV_CTL__SDN_ROUTE_ORDER_MASK  0x8
#define RSH_DEV_CTL__SDN_ROUTE_ORDER_FIELD 3,3


/*
 * Device Info.
 * This register provides general information about the device attached to
 * this port and channel.
 */
#define RSH_DEV_INFO 0x0000

#define RSH_DEV_INFO__TYPE_SHIFT 0
#define RSH_DEV_INFO__TYPE_WIDTH 12
#define RSH_DEV_INFO__TYPE_RESET_VAL 33
#define RSH_DEV_INFO__TYPE_RMASK 0xfff
#define RSH_DEV_INFO__TYPE_MASK  0xfff
#define RSH_DEV_INFO__TYPE_FIELD 0,11
#define RSH_DEV_INFO__TYPE_VAL_PCIE 0x1
#define RSH_DEV_INFO__TYPE_VAL_GBE 0x10
#define RSH_DEV_INFO__TYPE_VAL_XGBE 0x11
#define RSH_DEV_INFO__TYPE_VAL_MPIPE 0x13
#define RSH_DEV_INFO__TYPE_VAL_TRIO 0x14
#define RSH_DEV_INFO__TYPE_VAL_CRYPTO 0x16
#define RSH_DEV_INFO__TYPE_VAL_COMPRESSION 0x18
#define RSH_DEV_INFO__TYPE_VAL_GPIO 0x20
#define RSH_DEV_INFO__TYPE_VAL_RSHIM 0x21
#define RSH_DEV_INFO__TYPE_VAL_SROM 0x22
#define RSH_DEV_INFO__TYPE_VAL_I2CM 0x25
#define RSH_DEV_INFO__TYPE_VAL_I2CS 0x26
#define RSH_DEV_INFO__TYPE_VAL_UART 0x28
#define RSH_DEV_INFO__TYPE_VAL_USBH 0x29
#define RSH_DEV_INFO__TYPE_VAL_USBS 0x2a
#define RSH_DEV_INFO__TYPE_VAL_USBHS 0x2b
#define RSH_DEV_INFO__TYPE_VAL_DDR2 0x40
#define RSH_DEV_INFO__TYPE_VAL_DDR3 0x42
#define RSH_DEV_INFO__TYPE_VAL_DIAG_SNP 0x80
#define RSH_DEV_INFO__TYPE_VAL_IPIC 0x81

#define RSH_DEV_INFO__DEVICE_REV_SHIFT 16
#define RSH_DEV_INFO__DEVICE_REV_WIDTH 8
#define RSH_DEV_INFO__DEVICE_REV_RMASK 0xff
#define RSH_DEV_INFO__DEVICE_REV_MASK  0xff0000
#define RSH_DEV_INFO__DEVICE_REV_FIELD 16,23

#define RSH_DEV_INFO__REGISTER_REV_SHIFT 24
#define RSH_DEV_INFO__REGISTER_REV_WIDTH 4
#define RSH_DEV_INFO__REGISTER_REV_RESET_VAL 0
#define RSH_DEV_INFO__REGISTER_REV_RMASK 0xf
#define RSH_DEV_INFO__REGISTER_REV_MASK  0xf000000
#define RSH_DEV_INFO__REGISTER_REV_FIELD 24,27

#define RSH_DEV_INFO__INSTANCE_SHIFT 32
#define RSH_DEV_INFO__INSTANCE_WIDTH 4
#define RSH_DEV_INFO__INSTANCE_RMASK 0xf
#define RSH_DEV_INFO__INSTANCE_MASK  _64bit(0xf00000000)
#define RSH_DEV_INFO__INSTANCE_FIELD 32,35


/* Diag Broadcast. */
#define RSH_DIAG_BROADCAST 0x0a18

#define RSH_DIAG_BROADCAST__DIAG_BCST_IN_SHIFT 0
#define RSH_DIAG_BROADCAST__DIAG_BCST_IN_WIDTH 4
#define RSH_DIAG_BROADCAST__DIAG_BCST_IN_RESET_VAL 0
#define RSH_DIAG_BROADCAST__DIAG_BCST_IN_RMASK 0xf
#define RSH_DIAG_BROADCAST__DIAG_BCST_IN_MASK  0xf
#define RSH_DIAG_BROADCAST__DIAG_BCST_IN_FIELD 0,3

#define RSH_DIAG_BROADCAST__DIAG_BCST_OUT_SHIFT 4
#define RSH_DIAG_BROADCAST__DIAG_BCST_OUT_WIDTH 4
#define RSH_DIAG_BROADCAST__DIAG_BCST_OUT_RESET_VAL 0
#define RSH_DIAG_BROADCAST__DIAG_BCST_OUT_RMASK 0xf
#define RSH_DIAG_BROADCAST__DIAG_BCST_OUT_MASK  0xf0
#define RSH_DIAG_BROADCAST__DIAG_BCST_OUT_FIELD 4,7

#define RSH_DIAG_BROADCAST__DIAG_DCNT_DRV_ENA_SHIFT 8
#define RSH_DIAG_BROADCAST__DIAG_DCNT_DRV_ENA_WIDTH 3
#define RSH_DIAG_BROADCAST__DIAG_DCNT_DRV_ENA_RESET_VAL 0
#define RSH_DIAG_BROADCAST__DIAG_DCNT_DRV_ENA_RMASK 0x7
#define RSH_DIAG_BROADCAST__DIAG_DCNT_DRV_ENA_MASK  0x700
#define RSH_DIAG_BROADCAST__DIAG_DCNT_DRV_ENA_FIELD 8,10

#define RSH_DIAG_BROADCAST__DIAG_DCNT_DRV_LVL_SHIFT 11
#define RSH_DIAG_BROADCAST__DIAG_DCNT_DRV_LVL_WIDTH 1
#define RSH_DIAG_BROADCAST__DIAG_DCNT_DRV_LVL_RESET_VAL 0
#define RSH_DIAG_BROADCAST__DIAG_DCNT_DRV_LVL_RMASK 0x1
#define RSH_DIAG_BROADCAST__DIAG_DCNT_DRV_LVL_MASK  0x800
#define RSH_DIAG_BROADCAST__DIAG_DCNT_DRV_LVL_FIELD 11,11

#define RSH_DIAG_BROADCAST__DIAG_BCST_OUT_LVL_SHIFT 12
#define RSH_DIAG_BROADCAST__DIAG_BCST_OUT_LVL_WIDTH 4
#define RSH_DIAG_BROADCAST__DIAG_BCST_OUT_LVL_RESET_VAL 0
#define RSH_DIAG_BROADCAST__DIAG_BCST_OUT_LVL_RMASK 0xf
#define RSH_DIAG_BROADCAST__DIAG_BCST_OUT_LVL_MASK  0xf000
#define RSH_DIAG_BROADCAST__DIAG_BCST_OUT_LVL_FIELD 12,15


/* Down Count Control. */
#define RSH_DOWN_COUNT_CONTROL__FIRST_WORD 0x0710
#define RSH_DOWN_COUNT_CONTROL__LAST_WORD 0x0740

#define RSH_DOWN_COUNT_CONTROL__ENA_SHIFT 0
#define RSH_DOWN_COUNT_CONTROL__ENA_WIDTH 1
#define RSH_DOWN_COUNT_CONTROL__ENA_RESET_VAL 0
#define RSH_DOWN_COUNT_CONTROL__ENA_RMASK 0x1
#define RSH_DOWN_COUNT_CONTROL__ENA_MASK  0x1
#define RSH_DOWN_COUNT_CONTROL__ENA_FIELD 0,0

#define RSH_DOWN_COUNT_CONTROL__MODE_SHIFT 1
#define RSH_DOWN_COUNT_CONTROL__MODE_WIDTH 2
#define RSH_DOWN_COUNT_CONTROL__MODE_RESET_VAL 0
#define RSH_DOWN_COUNT_CONTROL__MODE_RMASK 0x3
#define RSH_DOWN_COUNT_CONTROL__MODE_MASK  0x6
#define RSH_DOWN_COUNT_CONTROL__MODE_FIELD 1,2
#define RSH_DOWN_COUNT_CONTROL__MODE_VAL_CORE_REFCLK 0x0
#define RSH_DOWN_COUNT_CONTROL__MODE_VAL_POS_EXTCLK 0x1
#define RSH_DOWN_COUNT_CONTROL__MODE_VAL_NEG_EXTCLK 0x2
#define RSH_DOWN_COUNT_CONTROL__MODE_VAL_DDR_EXTCLK 0x3

#define RSH_DOWN_COUNT_CONTROL__PINSEL_SHIFT 3
#define RSH_DOWN_COUNT_CONTROL__PINSEL_WIDTH 2
#define RSH_DOWN_COUNT_CONTROL__PINSEL_RESET_VAL 0
#define RSH_DOWN_COUNT_CONTROL__PINSEL_RMASK 0x3
#define RSH_DOWN_COUNT_CONTROL__PINSEL_MASK  0x18
#define RSH_DOWN_COUNT_CONTROL__PINSEL_FIELD 3,4
#define RSH_DOWN_COUNT_CONTROL__PINSEL_VAL_TBD0 0x0
#define RSH_DOWN_COUNT_CONTROL__PINSEL_VAL_TBD1 0x1
#define RSH_DOWN_COUNT_CONTROL__PINSEL_VAL_TBD2 0x2

#define RSH_DOWN_COUNT_CONTROL__DIV_SHIFT 12
#define RSH_DOWN_COUNT_CONTROL__DIV_WIDTH 20
#define RSH_DOWN_COUNT_CONTROL__DIV_RESET_VAL 0
#define RSH_DOWN_COUNT_CONTROL__DIV_RMASK 0xfffff
#define RSH_DOWN_COUNT_CONTROL__DIV_MASK  0xfffff000
#define RSH_DOWN_COUNT_CONTROL__DIV_FIELD 12,31


/* Down Count Control. */
#define RSH_DOWN_COUNT_CONTROL_1__FIRST_WORD 0x0728
#define RSH_DOWN_COUNT_CONTROL_1__LAST_WORD 0x0758

#define RSH_DOWN_COUNT_CONTROL_1__ENA_SHIFT 0
#define RSH_DOWN_COUNT_CONTROL_1__ENA_WIDTH 1
#define RSH_DOWN_COUNT_CONTROL_1__ENA_RESET_VAL 0
#define RSH_DOWN_COUNT_CONTROL_1__ENA_RMASK 0x1
#define RSH_DOWN_COUNT_CONTROL_1__ENA_MASK  0x1
#define RSH_DOWN_COUNT_CONTROL_1__ENA_FIELD 0,0

#define RSH_DOWN_COUNT_CONTROL_1__MODE_SHIFT 1
#define RSH_DOWN_COUNT_CONTROL_1__MODE_WIDTH 2
#define RSH_DOWN_COUNT_CONTROL_1__MODE_RESET_VAL 0
#define RSH_DOWN_COUNT_CONTROL_1__MODE_RMASK 0x3
#define RSH_DOWN_COUNT_CONTROL_1__MODE_MASK  0x6
#define RSH_DOWN_COUNT_CONTROL_1__MODE_FIELD 1,2
#define RSH_DOWN_COUNT_CONTROL_1__MODE_VAL_CORE_REFCLK 0x0
#define RSH_DOWN_COUNT_CONTROL_1__MODE_VAL_POS_EXTCLK 0x1
#define RSH_DOWN_COUNT_CONTROL_1__MODE_VAL_NEG_EXTCLK 0x2
#define RSH_DOWN_COUNT_CONTROL_1__MODE_VAL_DDR_EXTCLK 0x3

#define RSH_DOWN_COUNT_CONTROL_1__PINSEL_SHIFT 3
#define RSH_DOWN_COUNT_CONTROL_1__PINSEL_WIDTH 2
#define RSH_DOWN_COUNT_CONTROL_1__PINSEL_RESET_VAL 0
#define RSH_DOWN_COUNT_CONTROL_1__PINSEL_RMASK 0x3
#define RSH_DOWN_COUNT_CONTROL_1__PINSEL_MASK  0x18
#define RSH_DOWN_COUNT_CONTROL_1__PINSEL_FIELD 3,4
#define RSH_DOWN_COUNT_CONTROL_1__PINSEL_VAL_TBD0 0x0
#define RSH_DOWN_COUNT_CONTROL_1__PINSEL_VAL_TBD1 0x1
#define RSH_DOWN_COUNT_CONTROL_1__PINSEL_VAL_TBD2 0x2

#define RSH_DOWN_COUNT_CONTROL_1__DIV_SHIFT 12
#define RSH_DOWN_COUNT_CONTROL_1__DIV_WIDTH 20
#define RSH_DOWN_COUNT_CONTROL_1__DIV_RESET_VAL 0
#define RSH_DOWN_COUNT_CONTROL_1__DIV_RMASK 0xfffff
#define RSH_DOWN_COUNT_CONTROL_1__DIV_MASK  0xfffff000
#define RSH_DOWN_COUNT_CONTROL_1__DIV_FIELD 12,31


/* Down Count Control. */
#define RSH_DOWN_COUNT_CONTROL_2__FIRST_WORD 0x0740
#define RSH_DOWN_COUNT_CONTROL_2__LAST_WORD 0x0770

#define RSH_DOWN_COUNT_CONTROL_2__ENA_SHIFT 0
#define RSH_DOWN_COUNT_CONTROL_2__ENA_WIDTH 1
#define RSH_DOWN_COUNT_CONTROL_2__ENA_RESET_VAL 0
#define RSH_DOWN_COUNT_CONTROL_2__ENA_RMASK 0x1
#define RSH_DOWN_COUNT_CONTROL_2__ENA_MASK  0x1
#define RSH_DOWN_COUNT_CONTROL_2__ENA_FIELD 0,0

#define RSH_DOWN_COUNT_CONTROL_2__MODE_SHIFT 1
#define RSH_DOWN_COUNT_CONTROL_2__MODE_WIDTH 2
#define RSH_DOWN_COUNT_CONTROL_2__MODE_RESET_VAL 0
#define RSH_DOWN_COUNT_CONTROL_2__MODE_RMASK 0x3
#define RSH_DOWN_COUNT_CONTROL_2__MODE_MASK  0x6
#define RSH_DOWN_COUNT_CONTROL_2__MODE_FIELD 1,2
#define RSH_DOWN_COUNT_CONTROL_2__MODE_VAL_CORE_REFCLK 0x0
#define RSH_DOWN_COUNT_CONTROL_2__MODE_VAL_POS_EXTCLK 0x1
#define RSH_DOWN_COUNT_CONTROL_2__MODE_VAL_NEG_EXTCLK 0x2
#define RSH_DOWN_COUNT_CONTROL_2__MODE_VAL_DDR_EXTCLK 0x3

#define RSH_DOWN_COUNT_CONTROL_2__PINSEL_SHIFT 3
#define RSH_DOWN_COUNT_CONTROL_2__PINSEL_WIDTH 2
#define RSH_DOWN_COUNT_CONTROL_2__PINSEL_RESET_VAL 0
#define RSH_DOWN_COUNT_CONTROL_2__PINSEL_RMASK 0x3
#define RSH_DOWN_COUNT_CONTROL_2__PINSEL_MASK  0x18
#define RSH_DOWN_COUNT_CONTROL_2__PINSEL_FIELD 3,4
#define RSH_DOWN_COUNT_CONTROL_2__PINSEL_VAL_TBD0 0x0
#define RSH_DOWN_COUNT_CONTROL_2__PINSEL_VAL_TBD1 0x1
#define RSH_DOWN_COUNT_CONTROL_2__PINSEL_VAL_TBD2 0x2

#define RSH_DOWN_COUNT_CONTROL_2__DIV_SHIFT 12
#define RSH_DOWN_COUNT_CONTROL_2__DIV_WIDTH 20
#define RSH_DOWN_COUNT_CONTROL_2__DIV_RESET_VAL 0
#define RSH_DOWN_COUNT_CONTROL_2__DIV_RMASK 0xfffff
#define RSH_DOWN_COUNT_CONTROL_2__DIV_MASK  0xfffff000
#define RSH_DOWN_COUNT_CONTROL_2__DIV_FIELD 12,31


/* Down Count Refresh Value. */
#define RSH_DOWN_COUNT_REFRESH_VALUE__FIRST_WORD 0x0708
#define RSH_DOWN_COUNT_REFRESH_VALUE__LAST_WORD 0x0738

#define RSH_DOWN_COUNT_REFRESH_VALUE__REFRESH_SHIFT 0
#define RSH_DOWN_COUNT_REFRESH_VALUE__REFRESH_WIDTH 48
#define RSH_DOWN_COUNT_REFRESH_VALUE__REFRESH_RESET_VAL 0
#define RSH_DOWN_COUNT_REFRESH_VALUE__REFRESH_RMASK _64bit(0xffffffffffff)
#define RSH_DOWN_COUNT_REFRESH_VALUE__REFRESH_MASK  _64bit(0xffffffffffff)
#define RSH_DOWN_COUNT_REFRESH_VALUE__REFRESH_FIELD 0,47


/* Down Count Refresh Value. */
#define RSH_DOWN_COUNT_REFRESH_VALUE_1__FIRST_WORD 0x0720
#define RSH_DOWN_COUNT_REFRESH_VALUE_1__LAST_WORD 0x0750

#define RSH_DOWN_COUNT_REFRESH_VALUE_1__REFRESH_SHIFT 0
#define RSH_DOWN_COUNT_REFRESH_VALUE_1__REFRESH_WIDTH 48
#define RSH_DOWN_COUNT_REFRESH_VALUE_1__REFRESH_RESET_VAL 0
#define RSH_DOWN_COUNT_REFRESH_VALUE_1__REFRESH_RMASK _64bit(0xffffffffffff)
#define RSH_DOWN_COUNT_REFRESH_VALUE_1__REFRESH_MASK  _64bit(0xffffffffffff)
#define RSH_DOWN_COUNT_REFRESH_VALUE_1__REFRESH_FIELD 0,47


/* Down Count Refresh Value. */
#define RSH_DOWN_COUNT_REFRESH_VALUE_2__FIRST_WORD 0x0738
#define RSH_DOWN_COUNT_REFRESH_VALUE_2__LAST_WORD 0x0768

#define RSH_DOWN_COUNT_REFRESH_VALUE_2__REFRESH_SHIFT 0
#define RSH_DOWN_COUNT_REFRESH_VALUE_2__REFRESH_WIDTH 48
#define RSH_DOWN_COUNT_REFRESH_VALUE_2__REFRESH_RESET_VAL 0
#define RSH_DOWN_COUNT_REFRESH_VALUE_2__REFRESH_RMASK _64bit(0xffffffffffff)
#define RSH_DOWN_COUNT_REFRESH_VALUE_2__REFRESH_MASK  _64bit(0xffffffffffff)
#define RSH_DOWN_COUNT_REFRESH_VALUE_2__REFRESH_FIELD 0,47


/* Down Count Current Value. */
#define RSH_DOWN_COUNT_VALUE__FIRST_WORD 0x0700
#define RSH_DOWN_COUNT_VALUE__LAST_WORD 0x0730

#define RSH_DOWN_COUNT_VALUE__COUNT_SHIFT 0
#define RSH_DOWN_COUNT_VALUE__COUNT_WIDTH 48
#define RSH_DOWN_COUNT_VALUE__COUNT_RESET_VAL 0
#define RSH_DOWN_COUNT_VALUE__COUNT_RMASK _64bit(0xffffffffffff)
#define RSH_DOWN_COUNT_VALUE__COUNT_MASK  _64bit(0xffffffffffff)
#define RSH_DOWN_COUNT_VALUE__COUNT_FIELD 0,47


/* Down Count Current Value. */
#define RSH_DOWN_COUNT_VALUE_1__FIRST_WORD 0x0718
#define RSH_DOWN_COUNT_VALUE_1__LAST_WORD 0x0748

#define RSH_DOWN_COUNT_VALUE_1__COUNT_SHIFT 0
#define RSH_DOWN_COUNT_VALUE_1__COUNT_WIDTH 48
#define RSH_DOWN_COUNT_VALUE_1__COUNT_RESET_VAL 0
#define RSH_DOWN_COUNT_VALUE_1__COUNT_RMASK _64bit(0xffffffffffff)
#define RSH_DOWN_COUNT_VALUE_1__COUNT_MASK  _64bit(0xffffffffffff)
#define RSH_DOWN_COUNT_VALUE_1__COUNT_FIELD 0,47


/* Down Count Current Value. */
#define RSH_DOWN_COUNT_VALUE_2__FIRST_WORD 0x0730
#define RSH_DOWN_COUNT_VALUE_2__LAST_WORD 0x0760

#define RSH_DOWN_COUNT_VALUE_2__COUNT_SHIFT 0
#define RSH_DOWN_COUNT_VALUE_2__COUNT_WIDTH 48
#define RSH_DOWN_COUNT_VALUE_2__COUNT_RESET_VAL 0
#define RSH_DOWN_COUNT_VALUE_2__COUNT_RMASK _64bit(0xffffffffffff)
#define RSH_DOWN_COUNT_VALUE_2__COUNT_MASK  _64bit(0xffffffffffff)
#define RSH_DOWN_COUNT_VALUE_2__COUNT_FIELD 0,47


/*
 * EFUSE Control.
 * Provides access to the on-chip eFuse structure
 */
#define RSH_EFUSE_CTL 0x0800

#define RSH_EFUSE_CTL__INDEX_SHIFT 0
#define RSH_EFUSE_CTL__INDEX_WIDTH 5
#define RSH_EFUSE_CTL__INDEX_RESET_VAL 0
#define RSH_EFUSE_CTL__INDEX_RMASK 0x1f
#define RSH_EFUSE_CTL__INDEX_MASK  0x1f
#define RSH_EFUSE_CTL__INDEX_FIELD 0,4

#define RSH_EFUSE_CTL__READ_PEND_SHIFT 8
#define RSH_EFUSE_CTL__READ_PEND_WIDTH 1
#define RSH_EFUSE_CTL__READ_PEND_RESET_VAL 0
#define RSH_EFUSE_CTL__READ_PEND_RMASK 0x1
#define RSH_EFUSE_CTL__READ_PEND_MASK  0x100
#define RSH_EFUSE_CTL__READ_PEND_FIELD 8,8


/*
 * EFUSE Control Data word0.
 * EFUSE_DATA contents when EFUSE_CTL.INDEX is set to the first efuse control
 * (after IO_DISABLE words).
 */
#define RSH_EFUSE_CTL_DATA_0 0x0808

#define RSH_EFUSE_CTL_DATA_0__COL0_DIS_SHIFT 0
#define RSH_EFUSE_CTL_DATA_0__COL0_DIS_WIDTH 10
#define RSH_EFUSE_CTL_DATA_0__COL0_DIS_RESET_VAL 0
#define RSH_EFUSE_CTL_DATA_0__COL0_DIS_RMASK 0x3ff
#define RSH_EFUSE_CTL_DATA_0__COL0_DIS_MASK  0x3ff
#define RSH_EFUSE_CTL_DATA_0__COL0_DIS_FIELD 0,9

#define RSH_EFUSE_CTL_DATA_0__COL1_DIS_SHIFT 10
#define RSH_EFUSE_CTL_DATA_0__COL1_DIS_WIDTH 10
#define RSH_EFUSE_CTL_DATA_0__COL1_DIS_RESET_VAL 0
#define RSH_EFUSE_CTL_DATA_0__COL1_DIS_RMASK 0x3ff
#define RSH_EFUSE_CTL_DATA_0__COL1_DIS_MASK  0xffc00
#define RSH_EFUSE_CTL_DATA_0__COL1_DIS_FIELD 10,19

#define RSH_EFUSE_CTL_DATA_0__COL2_DIS_SHIFT 20
#define RSH_EFUSE_CTL_DATA_0__COL2_DIS_WIDTH 10
#define RSH_EFUSE_CTL_DATA_0__COL2_DIS_RESET_VAL 0
#define RSH_EFUSE_CTL_DATA_0__COL2_DIS_RMASK 0x3ff
#define RSH_EFUSE_CTL_DATA_0__COL2_DIS_MASK  0x3ff00000
#define RSH_EFUSE_CTL_DATA_0__COL2_DIS_FIELD 20,29

#define RSH_EFUSE_CTL_DATA_0__COL3_DIS_SHIFT 30
#define RSH_EFUSE_CTL_DATA_0__COL3_DIS_WIDTH 10
#define RSH_EFUSE_CTL_DATA_0__COL3_DIS_RESET_VAL 0
#define RSH_EFUSE_CTL_DATA_0__COL3_DIS_RMASK 0x3ff
#define RSH_EFUSE_CTL_DATA_0__COL3_DIS_MASK  _64bit(0xffc0000000)
#define RSH_EFUSE_CTL_DATA_0__COL3_DIS_FIELD 30,39

#define RSH_EFUSE_CTL_DATA_0__COL4_DIS_SHIFT 40
#define RSH_EFUSE_CTL_DATA_0__COL4_DIS_WIDTH 10
#define RSH_EFUSE_CTL_DATA_0__COL4_DIS_RESET_VAL 0
#define RSH_EFUSE_CTL_DATA_0__COL4_DIS_RMASK 0x3ff
#define RSH_EFUSE_CTL_DATA_0__COL4_DIS_MASK  _64bit(0x3ff0000000000)
#define RSH_EFUSE_CTL_DATA_0__COL4_DIS_FIELD 40,49

#define RSH_EFUSE_CTL_DATA_0__COL5_DIS_SHIFT 50
#define RSH_EFUSE_CTL_DATA_0__COL5_DIS_WIDTH 10
#define RSH_EFUSE_CTL_DATA_0__COL5_DIS_RESET_VAL 0
#define RSH_EFUSE_CTL_DATA_0__COL5_DIS_RMASK 0x3ff
#define RSH_EFUSE_CTL_DATA_0__COL5_DIS_MASK  _64bit(0xffc000000000000)
#define RSH_EFUSE_CTL_DATA_0__COL5_DIS_FIELD 50,59


/*
 * EFUSE Control Data word1.
 * EFUSE_DATA contents when EFUSE_CTL.INDEX is set to the second efuse
 * control (after IO_DISABLE words).
 */
#define RSH_EFUSE_CTL_DATA_1 0x0808

#define RSH_EFUSE_CTL_DATA_1__COL6_DIS_SHIFT 0
#define RSH_EFUSE_CTL_DATA_1__COL6_DIS_WIDTH 10
#define RSH_EFUSE_CTL_DATA_1__COL6_DIS_RESET_VAL 0
#define RSH_EFUSE_CTL_DATA_1__COL6_DIS_RMASK 0x3ff
#define RSH_EFUSE_CTL_DATA_1__COL6_DIS_MASK  0x3ff
#define RSH_EFUSE_CTL_DATA_1__COL6_DIS_FIELD 0,9

#define RSH_EFUSE_CTL_DATA_1__COL7_DIS_SHIFT 10
#define RSH_EFUSE_CTL_DATA_1__COL7_DIS_WIDTH 10
#define RSH_EFUSE_CTL_DATA_1__COL7_DIS_RESET_VAL 0
#define RSH_EFUSE_CTL_DATA_1__COL7_DIS_RMASK 0x3ff
#define RSH_EFUSE_CTL_DATA_1__COL7_DIS_MASK  0xffc00
#define RSH_EFUSE_CTL_DATA_1__COL7_DIS_FIELD 10,19

#define RSH_EFUSE_CTL_DATA_1__COL8_DIS_SHIFT 20
#define RSH_EFUSE_CTL_DATA_1__COL8_DIS_WIDTH 10
#define RSH_EFUSE_CTL_DATA_1__COL8_DIS_RESET_VAL 0
#define RSH_EFUSE_CTL_DATA_1__COL8_DIS_RMASK 0x3ff
#define RSH_EFUSE_CTL_DATA_1__COL8_DIS_MASK  0x3ff00000
#define RSH_EFUSE_CTL_DATA_1__COL8_DIS_FIELD 20,29

#define RSH_EFUSE_CTL_DATA_1__COL9_DIS_SHIFT 30
#define RSH_EFUSE_CTL_DATA_1__COL9_DIS_WIDTH 10
#define RSH_EFUSE_CTL_DATA_1__COL9_DIS_RESET_VAL 0
#define RSH_EFUSE_CTL_DATA_1__COL9_DIS_RMASK 0x3ff
#define RSH_EFUSE_CTL_DATA_1__COL9_DIS_MASK  _64bit(0xffc0000000)
#define RSH_EFUSE_CTL_DATA_1__COL9_DIS_FIELD 30,39

#define RSH_EFUSE_CTL_DATA_1__RESET_ADJ_SHIFT 40
#define RSH_EFUSE_CTL_DATA_1__RESET_ADJ_WIDTH 16
#define RSH_EFUSE_CTL_DATA_1__RESET_ADJ_RESET_VAL 0
#define RSH_EFUSE_CTL_DATA_1__RESET_ADJ_RMASK 0xffff
#define RSH_EFUSE_CTL_DATA_1__RESET_ADJ_MASK  _64bit(0xffff0000000000)
#define RSH_EFUSE_CTL_DATA_1__RESET_ADJ_FIELD 40,55

#define RSH_EFUSE_CTL_DATA_1__CACHE_SKU_SHIFT 56
#define RSH_EFUSE_CTL_DATA_1__CACHE_SKU_WIDTH 4
#define RSH_EFUSE_CTL_DATA_1__CACHE_SKU_RESET_VAL 0
#define RSH_EFUSE_CTL_DATA_1__CACHE_SKU_RMASK 0xf
#define RSH_EFUSE_CTL_DATA_1__CACHE_SKU_MASK  _64bit(0xf00000000000000)
#define RSH_EFUSE_CTL_DATA_1__CACHE_SKU_FIELD 56,59

#define RSH_EFUSE_CTL_DATA_1__CACHE_SKU_DISABLE_SHIFT 60
#define RSH_EFUSE_CTL_DATA_1__CACHE_SKU_DISABLE_WIDTH 1
#define RSH_EFUSE_CTL_DATA_1__CACHE_SKU_DISABLE_RESET_VAL 0
#define RSH_EFUSE_CTL_DATA_1__CACHE_SKU_DISABLE_RMASK 0x1
#define RSH_EFUSE_CTL_DATA_1__CACHE_SKU_DISABLE_MASK  _64bit(0x1000000000000000)
#define RSH_EFUSE_CTL_DATA_1__CACHE_SKU_DISABLE_FIELD 60,60

#define RSH_EFUSE_CTL_DATA_1__INFO_VLD_SHIFT 61
#define RSH_EFUSE_CTL_DATA_1__INFO_VLD_WIDTH 2
#define RSH_EFUSE_CTL_DATA_1__INFO_VLD_RESET_VAL 0
#define RSH_EFUSE_CTL_DATA_1__INFO_VLD_RMASK 0x3
#define RSH_EFUSE_CTL_DATA_1__INFO_VLD_MASK  _64bit(0x6000000000000000)
#define RSH_EFUSE_CTL_DATA_1__INFO_VLD_FIELD 61,62

#define RSH_EFUSE_CTL_DATA_1__FUSE_PROTECT_SHIFT 63
#define RSH_EFUSE_CTL_DATA_1__FUSE_PROTECT_WIDTH 1
#define RSH_EFUSE_CTL_DATA_1__FUSE_PROTECT_RESET_VAL 0
#define RSH_EFUSE_CTL_DATA_1__FUSE_PROTECT_RMASK 0x1
#define RSH_EFUSE_CTL_DATA_1__FUSE_PROTECT_MASK  _64bit(0x8000000000000000)
#define RSH_EFUSE_CTL_DATA_1__FUSE_PROTECT_FIELD 63,63


/*
 * EFUSE Data.
 * Data corresponding to EFUSE_CTL.INDEX.  Valid only when
 * EFUSE_CTL.READ_PEND is zero.
 */
#define RSH_EFUSE_DATA 0x0808

#define RSH_EFUSE_DATA__EFUSE_DATA_SHIFT 0
#define RSH_EFUSE_DATA__EFUSE_DATA_WIDTH 64
#define RSH_EFUSE_DATA__EFUSE_DATA_RESET_VAL 0
#define RSH_EFUSE_DATA__EFUSE_DATA_RMASK _64bit(0xffffffffffffffff)
#define RSH_EFUSE_DATA__EFUSE_DATA_MASK  _64bit(0xffffffffffffffff)
#define RSH_EFUSE_DATA__EFUSE_DATA_FIELD 0,63


/*
 * Error Status.
 * Indicators for various fatal and non-fatal RSH error conditions
 */
#define RSH_ERROR_STATUS 0x0208

#define RSH_ERROR_STATUS__MMIO_ILL_OPC_SHIFT 0
#define RSH_ERROR_STATUS__MMIO_ILL_OPC_WIDTH 1
#define RSH_ERROR_STATUS__MMIO_ILL_OPC_RESET_VAL 0
#define RSH_ERROR_STATUS__MMIO_ILL_OPC_RMASK 0x1
#define RSH_ERROR_STATUS__MMIO_ILL_OPC_MASK  0x1
#define RSH_ERROR_STATUS__MMIO_ILL_OPC_FIELD 0,0


/*
 * Fabric Connections.
 * Indicates devices connected at the edges of the Tile fabric.  A set bit
 * indicates that an IO device will respond to MMIO accesses at the
 * associated location.
 */
#define RSH_FABRIC_CONN 0x0108

#define RSH_FABRIC_CONN__NORTH_SHIFT 0
#define RSH_FABRIC_CONN__NORTH_WIDTH 16
#define RSH_FABRIC_CONN__NORTH_RMASK 0xffff
#define RSH_FABRIC_CONN__NORTH_MASK  0xffff
#define RSH_FABRIC_CONN__NORTH_FIELD 0,15

#define RSH_FABRIC_CONN__EAST_SHIFT 16
#define RSH_FABRIC_CONN__EAST_WIDTH 16
#define RSH_FABRIC_CONN__EAST_RMASK 0xffff
#define RSH_FABRIC_CONN__EAST_MASK  0xffff0000
#define RSH_FABRIC_CONN__EAST_FIELD 16,31

#define RSH_FABRIC_CONN__SOUTH_SHIFT 32
#define RSH_FABRIC_CONN__SOUTH_WIDTH 16
#define RSH_FABRIC_CONN__SOUTH_RMASK 0xffff
#define RSH_FABRIC_CONN__SOUTH_MASK  _64bit(0xffff00000000)
#define RSH_FABRIC_CONN__SOUTH_FIELD 32,47

#define RSH_FABRIC_CONN__WEST_SHIFT 48
#define RSH_FABRIC_CONN__WEST_WIDTH 16
#define RSH_FABRIC_CONN__WEST_RMASK 0xffff
#define RSH_FABRIC_CONN__WEST_MASK  _64bit(0xffff000000000000)
#define RSH_FABRIC_CONN__WEST_FIELD 48,63


/*
 * Fabric Dimensions.
 * Indicates the size of the Tile Fabric and the location of the rshim.
 */
#define RSH_FABRIC_DIM 0x0110

#define RSH_FABRIC_DIM__DIM_Y_SHIFT 0
#define RSH_FABRIC_DIM__DIM_Y_WIDTH 4
#define RSH_FABRIC_DIM__DIM_Y_RMASK 0xf
#define RSH_FABRIC_DIM__DIM_Y_MASK  0xf
#define RSH_FABRIC_DIM__DIM_Y_FIELD 0,3

#define RSH_FABRIC_DIM__DIM_X_SHIFT 4
#define RSH_FABRIC_DIM__DIM_X_WIDTH 4
#define RSH_FABRIC_DIM__DIM_X_RMASK 0xf
#define RSH_FABRIC_DIM__DIM_X_MASK  0xf0
#define RSH_FABRIC_DIM__DIM_X_FIELD 4,7

#define RSH_FABRIC_DIM__RSHIM_LOC_SHIFT 8
#define RSH_FABRIC_DIM__RSHIM_LOC_WIDTH 8
#define RSH_FABRIC_DIM__RSHIM_LOC_RMASK 0xff
#define RSH_FABRIC_DIM__RSHIM_LOC_MASK  0xff00
#define RSH_FABRIC_DIM__RSHIM_LOC_FIELD 8,15


/*
 * IO Disable-0.
 * Device specific feature disable bits.  These may be set (hardcoded) in
 * hardware or set by software.
 */
#define RSH_GX36_IO_DISABLE0 0x0b50

#define RSH_GX36_IO_DISABLE0__MPIPE_SGMII_3_0_DISABLE_SHIFT 0
#define RSH_GX36_IO_DISABLE0__MPIPE_SGMII_3_0_DISABLE_WIDTH 4
#define RSH_GX36_IO_DISABLE0__MPIPE_SGMII_3_0_DISABLE_RMASK 0xf
#define RSH_GX36_IO_DISABLE0__MPIPE_SGMII_3_0_DISABLE_MASK  0xf
#define RSH_GX36_IO_DISABLE0__MPIPE_SGMII_3_0_DISABLE_FIELD 0,3

#define RSH_GX36_IO_DISABLE0__MPIPE_XAUI0_DISABLE_SHIFT 4
#define RSH_GX36_IO_DISABLE0__MPIPE_XAUI0_DISABLE_WIDTH 1
#define RSH_GX36_IO_DISABLE0__MPIPE_XAUI0_DISABLE_RMASK 0x1
#define RSH_GX36_IO_DISABLE0__MPIPE_XAUI0_DISABLE_MASK  0x10
#define RSH_GX36_IO_DISABLE0__MPIPE_XAUI0_DISABLE_FIELD 4,4

#define RSH_GX36_IO_DISABLE0__MPIPE_SGMII_7_4_DISABLE_SHIFT 5
#define RSH_GX36_IO_DISABLE0__MPIPE_SGMII_7_4_DISABLE_WIDTH 4
#define RSH_GX36_IO_DISABLE0__MPIPE_SGMII_7_4_DISABLE_RMASK 0xf
#define RSH_GX36_IO_DISABLE0__MPIPE_SGMII_7_4_DISABLE_MASK  0x1e0
#define RSH_GX36_IO_DISABLE0__MPIPE_SGMII_7_4_DISABLE_FIELD 5,8

#define RSH_GX36_IO_DISABLE0__MPIPE_XAUI1_DISABLE_SHIFT 9
#define RSH_GX36_IO_DISABLE0__MPIPE_XAUI1_DISABLE_WIDTH 1
#define RSH_GX36_IO_DISABLE0__MPIPE_XAUI1_DISABLE_RMASK 0x1
#define RSH_GX36_IO_DISABLE0__MPIPE_XAUI1_DISABLE_MASK  0x200
#define RSH_GX36_IO_DISABLE0__MPIPE_XAUI1_DISABLE_FIELD 9,9

#define RSH_GX36_IO_DISABLE0__MPIPE_SGMII_11_8_DISABLE_SHIFT 10
#define RSH_GX36_IO_DISABLE0__MPIPE_SGMII_11_8_DISABLE_WIDTH 4
#define RSH_GX36_IO_DISABLE0__MPIPE_SGMII_11_8_DISABLE_RMASK 0xf
#define RSH_GX36_IO_DISABLE0__MPIPE_SGMII_11_8_DISABLE_MASK  0x3c00
#define RSH_GX36_IO_DISABLE0__MPIPE_SGMII_11_8_DISABLE_FIELD 10,13

#define RSH_GX36_IO_DISABLE0__MPIPE_XAUI2_DISABLE_SHIFT 14
#define RSH_GX36_IO_DISABLE0__MPIPE_XAUI2_DISABLE_WIDTH 1
#define RSH_GX36_IO_DISABLE0__MPIPE_XAUI2_DISABLE_RMASK 0x1
#define RSH_GX36_IO_DISABLE0__MPIPE_XAUI2_DISABLE_MASK  0x4000
#define RSH_GX36_IO_DISABLE0__MPIPE_XAUI2_DISABLE_FIELD 14,14

#define RSH_GX36_IO_DISABLE0__MPIPE_SGMII_15_12_DISABLE_SHIFT 15
#define RSH_GX36_IO_DISABLE0__MPIPE_SGMII_15_12_DISABLE_WIDTH 4
#define RSH_GX36_IO_DISABLE0__MPIPE_SGMII_15_12_DISABLE_RMASK 0xf
#define RSH_GX36_IO_DISABLE0__MPIPE_SGMII_15_12_DISABLE_MASK  0x78000
#define RSH_GX36_IO_DISABLE0__MPIPE_SGMII_15_12_DISABLE_FIELD 15,18

#define RSH_GX36_IO_DISABLE0__MPIPE_XAUI3_DISABLE_SHIFT 19
#define RSH_GX36_IO_DISABLE0__MPIPE_XAUI3_DISABLE_WIDTH 1
#define RSH_GX36_IO_DISABLE0__MPIPE_XAUI3_DISABLE_RMASK 0x1
#define RSH_GX36_IO_DISABLE0__MPIPE_XAUI3_DISABLE_MASK  0x80000
#define RSH_GX36_IO_DISABLE0__MPIPE_XAUI3_DISABLE_FIELD 19,19

#define RSH_GX36_IO_DISABLE0__MPIPE_CLS_DISABLE_SHIFT 20
#define RSH_GX36_IO_DISABLE0__MPIPE_CLS_DISABLE_WIDTH 10
#define RSH_GX36_IO_DISABLE0__MPIPE_CLS_DISABLE_RMASK 0x3ff
#define RSH_GX36_IO_DISABLE0__MPIPE_CLS_DISABLE_MASK  0x3ff00000
#define RSH_GX36_IO_DISABLE0__MPIPE_CLS_DISABLE_FIELD 20,29

#define RSH_GX36_IO_DISABLE0__MPIPE_DEVICE_DISABLE_SHIFT 30
#define RSH_GX36_IO_DISABLE0__MPIPE_DEVICE_DISABLE_WIDTH 1
#define RSH_GX36_IO_DISABLE0__MPIPE_DEVICE_DISABLE_RMASK 0x1
#define RSH_GX36_IO_DISABLE0__MPIPE_DEVICE_DISABLE_MASK  0x40000000
#define RSH_GX36_IO_DISABLE0__MPIPE_DEVICE_DISABLE_FIELD 30,30

#define RSH_GX36_IO_DISABLE0__TRIO_PCIE_PORT0_CONFIG_SHIFT 31
#define RSH_GX36_IO_DISABLE0__TRIO_PCIE_PORT0_CONFIG_WIDTH 2
#define RSH_GX36_IO_DISABLE0__TRIO_PCIE_PORT0_CONFIG_RMASK 0x3
#define RSH_GX36_IO_DISABLE0__TRIO_PCIE_PORT0_CONFIG_MASK  _64bit(0x180000000)
#define RSH_GX36_IO_DISABLE0__TRIO_PCIE_PORT0_CONFIG_FIELD 31,32
#define RSH_GX36_IO_DISABLE0__TRIO_PCIE_PORT0_CONFIG_VAL_X8 0x0
#define RSH_GX36_IO_DISABLE0__TRIO_PCIE_PORT0_CONFIG_VAL_X4 0x1
#define RSH_GX36_IO_DISABLE0__TRIO_PCIE_PORT0_CONFIG_VAL_X2 0x2
#define RSH_GX36_IO_DISABLE0__TRIO_PCIE_PORT0_CONFIG_VAL_DISABLED 0x3

#define RSH_GX36_IO_DISABLE0__TRIO_PCIE_PORT1_CONFIG_SHIFT 33
#define RSH_GX36_IO_DISABLE0__TRIO_PCIE_PORT1_CONFIG_WIDTH 2
#define RSH_GX36_IO_DISABLE0__TRIO_PCIE_PORT1_CONFIG_RMASK 0x3
#define RSH_GX36_IO_DISABLE0__TRIO_PCIE_PORT1_CONFIG_MASK  _64bit(0x600000000)
#define RSH_GX36_IO_DISABLE0__TRIO_PCIE_PORT1_CONFIG_FIELD 33,34
#define RSH_GX36_IO_DISABLE0__TRIO_PCIE_PORT1_CONFIG_VAL_X4 0x0
#define RSH_GX36_IO_DISABLE0__TRIO_PCIE_PORT1_CONFIG_VAL_X2 0x2
#define RSH_GX36_IO_DISABLE0__TRIO_PCIE_PORT1_CONFIG_VAL_DISABLED 0x3

#define RSH_GX36_IO_DISABLE0__TRIO_PCIE_PORT2_CONFIG_SHIFT 35
#define RSH_GX36_IO_DISABLE0__TRIO_PCIE_PORT2_CONFIG_WIDTH 2
#define RSH_GX36_IO_DISABLE0__TRIO_PCIE_PORT2_CONFIG_RMASK 0x3
#define RSH_GX36_IO_DISABLE0__TRIO_PCIE_PORT2_CONFIG_MASK  _64bit(0x1800000000)
#define RSH_GX36_IO_DISABLE0__TRIO_PCIE_PORT2_CONFIG_FIELD 35,36
#define RSH_GX36_IO_DISABLE0__TRIO_PCIE_PORT2_CONFIG_VAL_X4 0x0
#define RSH_GX36_IO_DISABLE0__TRIO_PCIE_PORT2_CONFIG_VAL_X2 0x2
#define RSH_GX36_IO_DISABLE0__TRIO_PCIE_PORT2_CONFIG_VAL_DISABLED 0x3

#define RSH_GX36_IO_DISABLE0__TRIO_STREAM_DISABLE_SHIFT 37
#define RSH_GX36_IO_DISABLE0__TRIO_STREAM_DISABLE_WIDTH 3
#define RSH_GX36_IO_DISABLE0__TRIO_STREAM_DISABLE_RMASK 0x7
#define RSH_GX36_IO_DISABLE0__TRIO_STREAM_DISABLE_MASK  _64bit(0xe000000000)
#define RSH_GX36_IO_DISABLE0__TRIO_STREAM_DISABLE_FIELD 37,39

#define RSH_GX36_IO_DISABLE0__TRIO_DEVICE_DISABLE_SHIFT 40
#define RSH_GX36_IO_DISABLE0__TRIO_DEVICE_DISABLE_WIDTH 1
#define RSH_GX36_IO_DISABLE0__TRIO_DEVICE_DISABLE_RMASK 0x1
#define RSH_GX36_IO_DISABLE0__TRIO_DEVICE_DISABLE_MASK  _64bit(0x10000000000)
#define RSH_GX36_IO_DISABLE0__TRIO_DEVICE_DISABLE_FIELD 40,40

#define RSH_GX36_IO_DISABLE0__DDR3_DISABLE_SHIFT 41
#define RSH_GX36_IO_DISABLE0__DDR3_DISABLE_WIDTH 2
#define RSH_GX36_IO_DISABLE0__DDR3_DISABLE_RMASK 0x3
#define RSH_GX36_IO_DISABLE0__DDR3_DISABLE_MASK  _64bit(0x60000000000)
#define RSH_GX36_IO_DISABLE0__DDR3_DISABLE_FIELD 41,42

#define RSH_GX36_IO_DISABLE0__USB_HOST0_DISABLE_SHIFT 43
#define RSH_GX36_IO_DISABLE0__USB_HOST0_DISABLE_WIDTH 1
#define RSH_GX36_IO_DISABLE0__USB_HOST0_DISABLE_RMASK 0x1
#define RSH_GX36_IO_DISABLE0__USB_HOST0_DISABLE_MASK  _64bit(0x80000000000)
#define RSH_GX36_IO_DISABLE0__USB_HOST0_DISABLE_FIELD 43,43

#define RSH_GX36_IO_DISABLE0__USB_HOST1_DISABLE_SHIFT 44
#define RSH_GX36_IO_DISABLE0__USB_HOST1_DISABLE_WIDTH 1
#define RSH_GX36_IO_DISABLE0__USB_HOST1_DISABLE_RMASK 0x1
#define RSH_GX36_IO_DISABLE0__USB_HOST1_DISABLE_MASK  _64bit(0x100000000000)
#define RSH_GX36_IO_DISABLE0__USB_HOST1_DISABLE_FIELD 44,44

#define RSH_GX36_IO_DISABLE0__USB_EP_DISABLE_SHIFT 45
#define RSH_GX36_IO_DISABLE0__USB_EP_DISABLE_WIDTH 1
#define RSH_GX36_IO_DISABLE0__USB_EP_DISABLE_RMASK 0x1
#define RSH_GX36_IO_DISABLE0__USB_EP_DISABLE_MASK  _64bit(0x200000000000)
#define RSH_GX36_IO_DISABLE0__USB_EP_DISABLE_FIELD 45,45

#define RSH_GX36_IO_DISABLE0__USB_INTERFACE_DISABLE_SHIFT 46
#define RSH_GX36_IO_DISABLE0__USB_INTERFACE_DISABLE_WIDTH 1
#define RSH_GX36_IO_DISABLE0__USB_INTERFACE_DISABLE_RMASK 0x1
#define RSH_GX36_IO_DISABLE0__USB_INTERFACE_DISABLE_MASK  _64bit(0x400000000000)
#define RSH_GX36_IO_DISABLE0__USB_INTERFACE_DISABLE_FIELD 46,46

#define RSH_GX36_IO_DISABLE0__CRYPTO0_MEM_CPY_DISABLE_SHIFT 47
#define RSH_GX36_IO_DISABLE0__CRYPTO0_MEM_CPY_DISABLE_WIDTH 1
#define RSH_GX36_IO_DISABLE0__CRYPTO0_MEM_CPY_DISABLE_RMASK 0x1
#define RSH_GX36_IO_DISABLE0__CRYPTO0_MEM_CPY_DISABLE_MASK  _64bit(0x800000000000)
#define RSH_GX36_IO_DISABLE0__CRYPTO0_MEM_CPY_DISABLE_FIELD 47,47

#define RSH_GX36_IO_DISABLE0__CRYPTO0_WIRELESS_DISABLE_SHIFT 48
#define RSH_GX36_IO_DISABLE0__CRYPTO0_WIRELESS_DISABLE_WIDTH 1
#define RSH_GX36_IO_DISABLE0__CRYPTO0_WIRELESS_DISABLE_RMASK 0x1
#define RSH_GX36_IO_DISABLE0__CRYPTO0_WIRELESS_DISABLE_MASK  _64bit(0x1000000000000)
#define RSH_GX36_IO_DISABLE0__CRYPTO0_WIRELESS_DISABLE_FIELD 48,48

#define RSH_GX36_IO_DISABLE0__CRYPTO0_PKT_DISABLE_SHIFT 49
#define RSH_GX36_IO_DISABLE0__CRYPTO0_PKT_DISABLE_WIDTH 2
#define RSH_GX36_IO_DISABLE0__CRYPTO0_PKT_DISABLE_RMASK 0x3
#define RSH_GX36_IO_DISABLE0__CRYPTO0_PKT_DISABLE_MASK  _64bit(0x6000000000000)
#define RSH_GX36_IO_DISABLE0__CRYPTO0_PKT_DISABLE_FIELD 49,50

#define RSH_GX36_IO_DISABLE0__CRYPTO0_PUBKEY_DISABLE_SHIFT 51
#define RSH_GX36_IO_DISABLE0__CRYPTO0_PUBKEY_DISABLE_WIDTH 1
#define RSH_GX36_IO_DISABLE0__CRYPTO0_PUBKEY_DISABLE_RMASK 0x1
#define RSH_GX36_IO_DISABLE0__CRYPTO0_PUBKEY_DISABLE_MASK  _64bit(0x8000000000000)
#define RSH_GX36_IO_DISABLE0__CRYPTO0_PUBKEY_DISABLE_FIELD 51,51

#define RSH_GX36_IO_DISABLE0__CRYPTO0_INTERFACE_DISABLE_SHIFT 52
#define RSH_GX36_IO_DISABLE0__CRYPTO0_INTERFACE_DISABLE_WIDTH 1
#define RSH_GX36_IO_DISABLE0__CRYPTO0_INTERFACE_DISABLE_RMASK 0x1
#define RSH_GX36_IO_DISABLE0__CRYPTO0_INTERFACE_DISABLE_MASK  _64bit(0x10000000000000)
#define RSH_GX36_IO_DISABLE0__CRYPTO0_INTERFACE_DISABLE_FIELD 52,52

#define RSH_GX36_IO_DISABLE0__CRYPTO1_MEM_CPY_DISABLE_SHIFT 53
#define RSH_GX36_IO_DISABLE0__CRYPTO1_MEM_CPY_DISABLE_WIDTH 1
#define RSH_GX36_IO_DISABLE0__CRYPTO1_MEM_CPY_DISABLE_RMASK 0x1
#define RSH_GX36_IO_DISABLE0__CRYPTO1_MEM_CPY_DISABLE_MASK  _64bit(0x20000000000000)
#define RSH_GX36_IO_DISABLE0__CRYPTO1_MEM_CPY_DISABLE_FIELD 53,53

#define RSH_GX36_IO_DISABLE0__CRYPTO1_WIRELESS_DISABLE_SHIFT 54
#define RSH_GX36_IO_DISABLE0__CRYPTO1_WIRELESS_DISABLE_WIDTH 1
#define RSH_GX36_IO_DISABLE0__CRYPTO1_WIRELESS_DISABLE_RMASK 0x1
#define RSH_GX36_IO_DISABLE0__CRYPTO1_WIRELESS_DISABLE_MASK  _64bit(0x40000000000000)
#define RSH_GX36_IO_DISABLE0__CRYPTO1_WIRELESS_DISABLE_FIELD 54,54

#define RSH_GX36_IO_DISABLE0__CRYPTO1_PKT_DISABLE_SHIFT 55
#define RSH_GX36_IO_DISABLE0__CRYPTO1_PKT_DISABLE_WIDTH 2
#define RSH_GX36_IO_DISABLE0__CRYPTO1_PKT_DISABLE_RMASK 0x3
#define RSH_GX36_IO_DISABLE0__CRYPTO1_PKT_DISABLE_MASK  _64bit(0x180000000000000)
#define RSH_GX36_IO_DISABLE0__CRYPTO1_PKT_DISABLE_FIELD 55,56

#define RSH_GX36_IO_DISABLE0__CRYPTO1_PUBKEY_DISABLE_SHIFT 57
#define RSH_GX36_IO_DISABLE0__CRYPTO1_PUBKEY_DISABLE_WIDTH 1
#define RSH_GX36_IO_DISABLE0__CRYPTO1_PUBKEY_DISABLE_RMASK 0x1
#define RSH_GX36_IO_DISABLE0__CRYPTO1_PUBKEY_DISABLE_MASK  _64bit(0x200000000000000)
#define RSH_GX36_IO_DISABLE0__CRYPTO1_PUBKEY_DISABLE_FIELD 57,57

#define RSH_GX36_IO_DISABLE0__CRYPTO1_INTERFACE_DISABLE_SHIFT 58
#define RSH_GX36_IO_DISABLE0__CRYPTO1_INTERFACE_DISABLE_WIDTH 1
#define RSH_GX36_IO_DISABLE0__CRYPTO1_INTERFACE_DISABLE_RMASK 0x1
#define RSH_GX36_IO_DISABLE0__CRYPTO1_INTERFACE_DISABLE_MASK  _64bit(0x400000000000000)
#define RSH_GX36_IO_DISABLE0__CRYPTO1_INTERFACE_DISABLE_FIELD 58,58

#define RSH_GX36_IO_DISABLE0__RESERVED_IO_SHIFT 59
#define RSH_GX36_IO_DISABLE0__RESERVED_IO_WIDTH 5
#define RSH_GX36_IO_DISABLE0__RESERVED_IO_RMASK 0x1f
#define RSH_GX36_IO_DISABLE0__RESERVED_IO_MASK  _64bit(0xf800000000000000)
#define RSH_GX36_IO_DISABLE0__RESERVED_IO_FIELD 59,63


/*
 * IO Disable-1.
 * Device specific feature disable bits.  These may be set (hardcoded) in
 * hardware or set by software.
 */
#define RSH_GX36_IO_DISABLE1 0x0b58

#define RSH_GX36_IO_DISABLE1__COMP0_DISABLE_SHIFT 0
#define RSH_GX36_IO_DISABLE1__COMP0_DISABLE_WIDTH 1
#define RSH_GX36_IO_DISABLE1__COMP0_DISABLE_RMASK 0x1
#define RSH_GX36_IO_DISABLE1__COMP0_DISABLE_MASK  0x1
#define RSH_GX36_IO_DISABLE1__COMP0_DISABLE_FIELD 0,0

#define RSH_GX36_IO_DISABLE1__DECOMP0_DISABLE_SHIFT 1
#define RSH_GX36_IO_DISABLE1__DECOMP0_DISABLE_WIDTH 1
#define RSH_GX36_IO_DISABLE1__DECOMP0_DISABLE_RMASK 0x1
#define RSH_GX36_IO_DISABLE1__DECOMP0_DISABLE_MASK  0x2
#define RSH_GX36_IO_DISABLE1__DECOMP0_DISABLE_FIELD 1,1

#define RSH_GX36_IO_DISABLE1__MEM_CPY0_DISABLE_SHIFT 2
#define RSH_GX36_IO_DISABLE1__MEM_CPY0_DISABLE_WIDTH 1
#define RSH_GX36_IO_DISABLE1__MEM_CPY0_DISABLE_RMASK 0x1
#define RSH_GX36_IO_DISABLE1__MEM_CPY0_DISABLE_MASK  0x4
#define RSH_GX36_IO_DISABLE1__MEM_CPY0_DISABLE_FIELD 2,2

#define RSH_GX36_IO_DISABLE1__COMP_INTERFACE0_DISABLE_SHIFT 3
#define RSH_GX36_IO_DISABLE1__COMP_INTERFACE0_DISABLE_WIDTH 1
#define RSH_GX36_IO_DISABLE1__COMP_INTERFACE0_DISABLE_RMASK 0x1
#define RSH_GX36_IO_DISABLE1__COMP_INTERFACE0_DISABLE_MASK  0x8
#define RSH_GX36_IO_DISABLE1__COMP_INTERFACE0_DISABLE_FIELD 3,3

#define RSH_GX36_IO_DISABLE1__COMP1_DISABLE_SHIFT 4
#define RSH_GX36_IO_DISABLE1__COMP1_DISABLE_WIDTH 1
#define RSH_GX36_IO_DISABLE1__COMP1_DISABLE_RMASK 0x1
#define RSH_GX36_IO_DISABLE1__COMP1_DISABLE_MASK  0x10
#define RSH_GX36_IO_DISABLE1__COMP1_DISABLE_FIELD 4,4

#define RSH_GX36_IO_DISABLE1__DECOMP1_DISABLE_SHIFT 5
#define RSH_GX36_IO_DISABLE1__DECOMP1_DISABLE_WIDTH 1
#define RSH_GX36_IO_DISABLE1__DECOMP1_DISABLE_RMASK 0x1
#define RSH_GX36_IO_DISABLE1__DECOMP1_DISABLE_MASK  0x20
#define RSH_GX36_IO_DISABLE1__DECOMP1_DISABLE_FIELD 5,5

#define RSH_GX36_IO_DISABLE1__MEM_CPY1_DISABLE_SHIFT 6
#define RSH_GX36_IO_DISABLE1__MEM_CPY1_DISABLE_WIDTH 1
#define RSH_GX36_IO_DISABLE1__MEM_CPY1_DISABLE_RMASK 0x1
#define RSH_GX36_IO_DISABLE1__MEM_CPY1_DISABLE_MASK  0x40
#define RSH_GX36_IO_DISABLE1__MEM_CPY1_DISABLE_FIELD 6,6

#define RSH_GX36_IO_DISABLE1__COMP_INTERFACE1_DISABLE_SHIFT 7
#define RSH_GX36_IO_DISABLE1__COMP_INTERFACE1_DISABLE_WIDTH 1
#define RSH_GX36_IO_DISABLE1__COMP_INTERFACE1_DISABLE_RMASK 0x1
#define RSH_GX36_IO_DISABLE1__COMP_INTERFACE1_DISABLE_MASK  0x80
#define RSH_GX36_IO_DISABLE1__COMP_INTERFACE1_DISABLE_FIELD 7,7

#define RSH_GX36_IO_DISABLE1__RESERVED_IO_SHIFT 8
#define RSH_GX36_IO_DISABLE1__RESERVED_IO_WIDTH 28
#define RSH_GX36_IO_DISABLE1__RESERVED_IO_RMASK 0xfffffff
#define RSH_GX36_IO_DISABLE1__RESERVED_IO_MASK  _64bit(0xfffffff00)
#define RSH_GX36_IO_DISABLE1__RESERVED_IO_FIELD 8,35


/*
 * IO Reset.
 * Each bit corresponds to a device or function within a device.  When
 * written with a 1, the associated device or function will be reset.
 * Software is responsible for any quiesce procedures required for the
 * associated device prior to reset.
 */
#define RSH_GX36_IO_RESET 0x0520

#define RSH_GX36_IO_RESET__MPIPE_PCLK_SHIFT 0
#define RSH_GX36_IO_RESET__MPIPE_PCLK_WIDTH 1
#define RSH_GX36_IO_RESET__MPIPE_PCLK_RESET_VAL 0
#define RSH_GX36_IO_RESET__MPIPE_PCLK_RMASK 0x1
#define RSH_GX36_IO_RESET__MPIPE_PCLK_MASK  0x1
#define RSH_GX36_IO_RESET__MPIPE_PCLK_FIELD 0,0

#define RSH_GX36_IO_RESET__MPIPE_KCLK_SHIFT 1
#define RSH_GX36_IO_RESET__MPIPE_KCLK_WIDTH 1
#define RSH_GX36_IO_RESET__MPIPE_KCLK_RESET_VAL 0
#define RSH_GX36_IO_RESET__MPIPE_KCLK_RMASK 0x1
#define RSH_GX36_IO_RESET__MPIPE_KCLK_MASK  0x2
#define RSH_GX36_IO_RESET__MPIPE_KCLK_FIELD 1,1

#define RSH_GX36_IO_RESET__MPIPE_QUAD0_SHIFT 2
#define RSH_GX36_IO_RESET__MPIPE_QUAD0_WIDTH 1
#define RSH_GX36_IO_RESET__MPIPE_QUAD0_RESET_VAL 0
#define RSH_GX36_IO_RESET__MPIPE_QUAD0_RMASK 0x1
#define RSH_GX36_IO_RESET__MPIPE_QUAD0_MASK  0x4
#define RSH_GX36_IO_RESET__MPIPE_QUAD0_FIELD 2,2

#define RSH_GX36_IO_RESET__MPIPE_QUAD1_SHIFT 3
#define RSH_GX36_IO_RESET__MPIPE_QUAD1_WIDTH 1
#define RSH_GX36_IO_RESET__MPIPE_QUAD1_RESET_VAL 0
#define RSH_GX36_IO_RESET__MPIPE_QUAD1_RMASK 0x1
#define RSH_GX36_IO_RESET__MPIPE_QUAD1_MASK  0x8
#define RSH_GX36_IO_RESET__MPIPE_QUAD1_FIELD 3,3

#define RSH_GX36_IO_RESET__MPIPE_QUAD2_SHIFT 4
#define RSH_GX36_IO_RESET__MPIPE_QUAD2_WIDTH 1
#define RSH_GX36_IO_RESET__MPIPE_QUAD2_RESET_VAL 0
#define RSH_GX36_IO_RESET__MPIPE_QUAD2_RMASK 0x1
#define RSH_GX36_IO_RESET__MPIPE_QUAD2_MASK  0x10
#define RSH_GX36_IO_RESET__MPIPE_QUAD2_FIELD 4,4

#define RSH_GX36_IO_RESET__MPIPE_QUAD3_SHIFT 5
#define RSH_GX36_IO_RESET__MPIPE_QUAD3_WIDTH 1
#define RSH_GX36_IO_RESET__MPIPE_QUAD3_RESET_VAL 0
#define RSH_GX36_IO_RESET__MPIPE_QUAD3_RMASK 0x1
#define RSH_GX36_IO_RESET__MPIPE_QUAD3_MASK  0x20
#define RSH_GX36_IO_RESET__MPIPE_QUAD3_FIELD 5,5

#define RSH_GX36_IO_RESET__TRIO_SHIFT 6
#define RSH_GX36_IO_RESET__TRIO_WIDTH 1
#define RSH_GX36_IO_RESET__TRIO_RESET_VAL 0
#define RSH_GX36_IO_RESET__TRIO_RMASK 0x1
#define RSH_GX36_IO_RESET__TRIO_MASK  0x40
#define RSH_GX36_IO_RESET__TRIO_FIELD 6,6

#define RSH_GX36_IO_RESET__PCIE0_SHIFT 7
#define RSH_GX36_IO_RESET__PCIE0_WIDTH 1
#define RSH_GX36_IO_RESET__PCIE0_RESET_VAL 0
#define RSH_GX36_IO_RESET__PCIE0_RMASK 0x1
#define RSH_GX36_IO_RESET__PCIE0_MASK  0x80
#define RSH_GX36_IO_RESET__PCIE0_FIELD 7,7

#define RSH_GX36_IO_RESET__PCIE1_SHIFT 8
#define RSH_GX36_IO_RESET__PCIE1_WIDTH 1
#define RSH_GX36_IO_RESET__PCIE1_RESET_VAL 0
#define RSH_GX36_IO_RESET__PCIE1_RMASK 0x1
#define RSH_GX36_IO_RESET__PCIE1_MASK  0x100
#define RSH_GX36_IO_RESET__PCIE1_FIELD 8,8

#define RSH_GX36_IO_RESET__PCIE2_SHIFT 9
#define RSH_GX36_IO_RESET__PCIE2_WIDTH 1
#define RSH_GX36_IO_RESET__PCIE2_RESET_VAL 0
#define RSH_GX36_IO_RESET__PCIE2_RMASK 0x1
#define RSH_GX36_IO_RESET__PCIE2_MASK  0x200
#define RSH_GX36_IO_RESET__PCIE2_FIELD 9,9

#define RSH_GX36_IO_RESET__USB_SHIFT 10
#define RSH_GX36_IO_RESET__USB_WIDTH 1
#define RSH_GX36_IO_RESET__USB_RESET_VAL 0
#define RSH_GX36_IO_RESET__USB_RMASK 0x1
#define RSH_GX36_IO_RESET__USB_MASK  0x400
#define RSH_GX36_IO_RESET__USB_FIELD 10,10

#define RSH_GX36_IO_RESET__MSH0_SHIFT 11
#define RSH_GX36_IO_RESET__MSH0_WIDTH 1
#define RSH_GX36_IO_RESET__MSH0_RESET_VAL 0
#define RSH_GX36_IO_RESET__MSH0_RMASK 0x1
#define RSH_GX36_IO_RESET__MSH0_MASK  0x800
#define RSH_GX36_IO_RESET__MSH0_FIELD 11,11

#define RSH_GX36_IO_RESET__MSH1_SHIFT 12
#define RSH_GX36_IO_RESET__MSH1_WIDTH 1
#define RSH_GX36_IO_RESET__MSH1_RESET_VAL 0
#define RSH_GX36_IO_RESET__MSH1_RMASK 0x1
#define RSH_GX36_IO_RESET__MSH1_MASK  0x1000
#define RSH_GX36_IO_RESET__MSH1_FIELD 12,12

#define RSH_GX36_IO_RESET__GPIO_SHIFT 13
#define RSH_GX36_IO_RESET__GPIO_WIDTH 1
#define RSH_GX36_IO_RESET__GPIO_RESET_VAL 0
#define RSH_GX36_IO_RESET__GPIO_RMASK 0x1
#define RSH_GX36_IO_RESET__GPIO_MASK  0x2000
#define RSH_GX36_IO_RESET__GPIO_FIELD 13,13

#define RSH_GX36_IO_RESET__COMPRESSION_SHIFT 14
#define RSH_GX36_IO_RESET__COMPRESSION_WIDTH 1
#define RSH_GX36_IO_RESET__COMPRESSION_RESET_VAL 0
#define RSH_GX36_IO_RESET__COMPRESSION_RMASK 0x1
#define RSH_GX36_IO_RESET__COMPRESSION_MASK  0x4000
#define RSH_GX36_IO_RESET__COMPRESSION_FIELD 14,14

#define RSH_GX36_IO_RESET__CRYPTO_SHIFT 15
#define RSH_GX36_IO_RESET__CRYPTO_WIDTH 1
#define RSH_GX36_IO_RESET__CRYPTO_RESET_VAL 0
#define RSH_GX36_IO_RESET__CRYPTO_RMASK 0x1
#define RSH_GX36_IO_RESET__CRYPTO_MASK  0x8000
#define RSH_GX36_IO_RESET__CRYPTO_FIELD 15,15

#define RSH_GX36_IO_RESET__MSH2_SHIFT 16
#define RSH_GX36_IO_RESET__MSH2_WIDTH 1
#define RSH_GX36_IO_RESET__MSH2_RESET_VAL 0
#define RSH_GX36_IO_RESET__MSH2_RMASK 0x1
#define RSH_GX36_IO_RESET__MSH2_MASK  0x10000
#define RSH_GX36_IO_RESET__MSH2_FIELD 16,16

#define RSH_GX36_IO_RESET__MSH3_SHIFT 17
#define RSH_GX36_IO_RESET__MSH3_WIDTH 1
#define RSH_GX36_IO_RESET__MSH3_RESET_VAL 0
#define RSH_GX36_IO_RESET__MSH3_RMASK 0x1
#define RSH_GX36_IO_RESET__MSH3_MASK  0x20000
#define RSH_GX36_IO_RESET__MSH3_FIELD 17,17


/*
 * GPIO Mode Control.
 * Device specific mode control for GPIO pins.  The bit location in this
 * register corresponds to the GPIO pin being used for the associated
 * function.
 */
#define RSH_GX72_GPIO_MODE 0x0b70

#define RSH_GX72_GPIO_MODE__MPIPE0_XAUI0_LED_ENA_SHIFT 17
#define RSH_GX72_GPIO_MODE__MPIPE0_XAUI0_LED_ENA_WIDTH 2
#define RSH_GX72_GPIO_MODE__MPIPE0_XAUI0_LED_ENA_RESET_VAL 0
#define RSH_GX72_GPIO_MODE__MPIPE0_XAUI0_LED_ENA_RMASK 0x3
#define RSH_GX72_GPIO_MODE__MPIPE0_XAUI0_LED_ENA_MASK  0x60000
#define RSH_GX72_GPIO_MODE__MPIPE0_XAUI0_LED_ENA_FIELD 17,18

#define RSH_GX72_GPIO_MODE__MPIPE0_XAUI1_LED_ENA_SHIFT 21
#define RSH_GX72_GPIO_MODE__MPIPE0_XAUI1_LED_ENA_WIDTH 2
#define RSH_GX72_GPIO_MODE__MPIPE0_XAUI1_LED_ENA_RESET_VAL 0
#define RSH_GX72_GPIO_MODE__MPIPE0_XAUI1_LED_ENA_RMASK 0x3
#define RSH_GX72_GPIO_MODE__MPIPE0_XAUI1_LED_ENA_MASK  0x600000
#define RSH_GX72_GPIO_MODE__MPIPE0_XAUI1_LED_ENA_FIELD 21,22

#define RSH_GX72_GPIO_MODE__MPIPE0_XAUI2_LED_ENA_SHIFT 25
#define RSH_GX72_GPIO_MODE__MPIPE0_XAUI2_LED_ENA_WIDTH 2
#define RSH_GX72_GPIO_MODE__MPIPE0_XAUI2_LED_ENA_RESET_VAL 0
#define RSH_GX72_GPIO_MODE__MPIPE0_XAUI2_LED_ENA_RMASK 0x3
#define RSH_GX72_GPIO_MODE__MPIPE0_XAUI2_LED_ENA_MASK  0x6000000
#define RSH_GX72_GPIO_MODE__MPIPE0_XAUI2_LED_ENA_FIELD 25,26

#define RSH_GX72_GPIO_MODE__MPIPE0_XAUI3_LED_ENA_SHIFT 29
#define RSH_GX72_GPIO_MODE__MPIPE0_XAUI3_LED_ENA_WIDTH 2
#define RSH_GX72_GPIO_MODE__MPIPE0_XAUI3_LED_ENA_RESET_VAL 0
#define RSH_GX72_GPIO_MODE__MPIPE0_XAUI3_LED_ENA_RMASK 0x3
#define RSH_GX72_GPIO_MODE__MPIPE0_XAUI3_LED_ENA_MASK  0x60000000
#define RSH_GX72_GPIO_MODE__MPIPE0_XAUI3_LED_ENA_FIELD 29,30

#define RSH_GX72_GPIO_MODE__MPIPE1_XAUI0_LED_ENA_SHIFT 33
#define RSH_GX72_GPIO_MODE__MPIPE1_XAUI0_LED_ENA_WIDTH 2
#define RSH_GX72_GPIO_MODE__MPIPE1_XAUI0_LED_ENA_RESET_VAL 0
#define RSH_GX72_GPIO_MODE__MPIPE1_XAUI0_LED_ENA_RMASK 0x3
#define RSH_GX72_GPIO_MODE__MPIPE1_XAUI0_LED_ENA_MASK  _64bit(0x600000000)
#define RSH_GX72_GPIO_MODE__MPIPE1_XAUI0_LED_ENA_FIELD 33,34

#define RSH_GX72_GPIO_MODE__MPIPE1_XAUI1_LED_ENA_SHIFT 37
#define RSH_GX72_GPIO_MODE__MPIPE1_XAUI1_LED_ENA_WIDTH 2
#define RSH_GX72_GPIO_MODE__MPIPE1_XAUI1_LED_ENA_RESET_VAL 0
#define RSH_GX72_GPIO_MODE__MPIPE1_XAUI1_LED_ENA_RMASK 0x3
#define RSH_GX72_GPIO_MODE__MPIPE1_XAUI1_LED_ENA_MASK  _64bit(0x6000000000)
#define RSH_GX72_GPIO_MODE__MPIPE1_XAUI1_LED_ENA_FIELD 37,38

#define RSH_GX72_GPIO_MODE__MPIPE1_XAUI2_LED_ENA_SHIFT 41
#define RSH_GX72_GPIO_MODE__MPIPE1_XAUI2_LED_ENA_WIDTH 2
#define RSH_GX72_GPIO_MODE__MPIPE1_XAUI2_LED_ENA_RESET_VAL 0
#define RSH_GX72_GPIO_MODE__MPIPE1_XAUI2_LED_ENA_RMASK 0x3
#define RSH_GX72_GPIO_MODE__MPIPE1_XAUI2_LED_ENA_MASK  _64bit(0x60000000000)
#define RSH_GX72_GPIO_MODE__MPIPE1_XAUI2_LED_ENA_FIELD 41,42

#define RSH_GX72_GPIO_MODE__MPIPE1_XAUI3_LED_ENA_SHIFT 45
#define RSH_GX72_GPIO_MODE__MPIPE1_XAUI3_LED_ENA_WIDTH 2
#define RSH_GX72_GPIO_MODE__MPIPE1_XAUI3_LED_ENA_RESET_VAL 0
#define RSH_GX72_GPIO_MODE__MPIPE1_XAUI3_LED_ENA_RMASK 0x3
#define RSH_GX72_GPIO_MODE__MPIPE1_XAUI3_LED_ENA_MASK  _64bit(0x600000000000)
#define RSH_GX72_GPIO_MODE__MPIPE1_XAUI3_LED_ENA_FIELD 45,46


/*
 * IO Disable-0.
 * Device specific feature disable bits.  These may be set (hardcoded) in
 * hardware or set by software.
 */
#define RSH_GX72_IO_DISABLE0 0x0b50

#define RSH_GX72_IO_DISABLE0__MPIPE0_SGMII_3_0_DISABLE_SHIFT 0
#define RSH_GX72_IO_DISABLE0__MPIPE0_SGMII_3_0_DISABLE_WIDTH 4
#define RSH_GX72_IO_DISABLE0__MPIPE0_SGMII_3_0_DISABLE_RMASK 0xf
#define RSH_GX72_IO_DISABLE0__MPIPE0_SGMII_3_0_DISABLE_MASK  0xf
#define RSH_GX72_IO_DISABLE0__MPIPE0_SGMII_3_0_DISABLE_FIELD 0,3

#define RSH_GX72_IO_DISABLE0__MPIPE0_XAUI0_DISABLE_SHIFT 4
#define RSH_GX72_IO_DISABLE0__MPIPE0_XAUI0_DISABLE_WIDTH 1
#define RSH_GX72_IO_DISABLE0__MPIPE0_XAUI0_DISABLE_RMASK 0x1
#define RSH_GX72_IO_DISABLE0__MPIPE0_XAUI0_DISABLE_MASK  0x10
#define RSH_GX72_IO_DISABLE0__MPIPE0_XAUI0_DISABLE_FIELD 4,4

#define RSH_GX72_IO_DISABLE0__MPIPE0_SGMII_7_4_DISABLE_SHIFT 5
#define RSH_GX72_IO_DISABLE0__MPIPE0_SGMII_7_4_DISABLE_WIDTH 4
#define RSH_GX72_IO_DISABLE0__MPIPE0_SGMII_7_4_DISABLE_RMASK 0xf
#define RSH_GX72_IO_DISABLE0__MPIPE0_SGMII_7_4_DISABLE_MASK  0x1e0
#define RSH_GX72_IO_DISABLE0__MPIPE0_SGMII_7_4_DISABLE_FIELD 5,8

#define RSH_GX72_IO_DISABLE0__MPIPE0_XAUI1_DISABLE_SHIFT 9
#define RSH_GX72_IO_DISABLE0__MPIPE0_XAUI1_DISABLE_WIDTH 1
#define RSH_GX72_IO_DISABLE0__MPIPE0_XAUI1_DISABLE_RMASK 0x1
#define RSH_GX72_IO_DISABLE0__MPIPE0_XAUI1_DISABLE_MASK  0x200
#define RSH_GX72_IO_DISABLE0__MPIPE0_XAUI1_DISABLE_FIELD 9,9

#define RSH_GX72_IO_DISABLE0__MPIPE0_SGMII_11_8_DISABLE_SHIFT 10
#define RSH_GX72_IO_DISABLE0__MPIPE0_SGMII_11_8_DISABLE_WIDTH 4
#define RSH_GX72_IO_DISABLE0__MPIPE0_SGMII_11_8_DISABLE_RMASK 0xf
#define RSH_GX72_IO_DISABLE0__MPIPE0_SGMII_11_8_DISABLE_MASK  0x3c00
#define RSH_GX72_IO_DISABLE0__MPIPE0_SGMII_11_8_DISABLE_FIELD 10,13

#define RSH_GX72_IO_DISABLE0__MPIPE0_XAUI2_DISABLE_SHIFT 14
#define RSH_GX72_IO_DISABLE0__MPIPE0_XAUI2_DISABLE_WIDTH 1
#define RSH_GX72_IO_DISABLE0__MPIPE0_XAUI2_DISABLE_RMASK 0x1
#define RSH_GX72_IO_DISABLE0__MPIPE0_XAUI2_DISABLE_MASK  0x4000
#define RSH_GX72_IO_DISABLE0__MPIPE0_XAUI2_DISABLE_FIELD 14,14

#define RSH_GX72_IO_DISABLE0__MPIPE0_SGMII_15_12_DISABLE_SHIFT 15
#define RSH_GX72_IO_DISABLE0__MPIPE0_SGMII_15_12_DISABLE_WIDTH 4
#define RSH_GX72_IO_DISABLE0__MPIPE0_SGMII_15_12_DISABLE_RMASK 0xf
#define RSH_GX72_IO_DISABLE0__MPIPE0_SGMII_15_12_DISABLE_MASK  0x78000
#define RSH_GX72_IO_DISABLE0__MPIPE0_SGMII_15_12_DISABLE_FIELD 15,18

#define RSH_GX72_IO_DISABLE0__MPIPE0_XAUI3_DISABLE_SHIFT 19
#define RSH_GX72_IO_DISABLE0__MPIPE0_XAUI3_DISABLE_WIDTH 1
#define RSH_GX72_IO_DISABLE0__MPIPE0_XAUI3_DISABLE_RMASK 0x1
#define RSH_GX72_IO_DISABLE0__MPIPE0_XAUI3_DISABLE_MASK  0x80000
#define RSH_GX72_IO_DISABLE0__MPIPE0_XAUI3_DISABLE_FIELD 19,19

#define RSH_GX72_IO_DISABLE0__MPIPE0_CLS_DISABLE_SHIFT 20
#define RSH_GX72_IO_DISABLE0__MPIPE0_CLS_DISABLE_WIDTH 10
#define RSH_GX72_IO_DISABLE0__MPIPE0_CLS_DISABLE_RMASK 0x3ff
#define RSH_GX72_IO_DISABLE0__MPIPE0_CLS_DISABLE_MASK  0x3ff00000
#define RSH_GX72_IO_DISABLE0__MPIPE0_CLS_DISABLE_FIELD 20,29

#define RSH_GX72_IO_DISABLE0__MPIPE0_DEVICE_DISABLE_SHIFT 30
#define RSH_GX72_IO_DISABLE0__MPIPE0_DEVICE_DISABLE_WIDTH 1
#define RSH_GX72_IO_DISABLE0__MPIPE0_DEVICE_DISABLE_RMASK 0x1
#define RSH_GX72_IO_DISABLE0__MPIPE0_DEVICE_DISABLE_MASK  0x40000000
#define RSH_GX72_IO_DISABLE0__MPIPE0_DEVICE_DISABLE_FIELD 30,30

#define RSH_GX72_IO_DISABLE0__TRIO0_PCIE_PORT0_CONFIG_SHIFT 31
#define RSH_GX72_IO_DISABLE0__TRIO0_PCIE_PORT0_CONFIG_WIDTH 2
#define RSH_GX72_IO_DISABLE0__TRIO0_PCIE_PORT0_CONFIG_RMASK 0x3
#define RSH_GX72_IO_DISABLE0__TRIO0_PCIE_PORT0_CONFIG_MASK  _64bit(0x180000000)
#define RSH_GX72_IO_DISABLE0__TRIO0_PCIE_PORT0_CONFIG_FIELD 31,32
#define RSH_GX72_IO_DISABLE0__TRIO0_PCIE_PORT0_CONFIG_VAL_X8 0x0
#define RSH_GX72_IO_DISABLE0__TRIO0_PCIE_PORT0_CONFIG_VAL_X4 0x1
#define RSH_GX72_IO_DISABLE0__TRIO0_PCIE_PORT0_CONFIG_VAL_X2 0x2
#define RSH_GX72_IO_DISABLE0__TRIO0_PCIE_PORT0_CONFIG_VAL_DISABLED 0x3

#define RSH_GX72_IO_DISABLE0__TRIO0_PCIE_PORT1_CONFIG_SHIFT 33
#define RSH_GX72_IO_DISABLE0__TRIO0_PCIE_PORT1_CONFIG_WIDTH 2
#define RSH_GX72_IO_DISABLE0__TRIO0_PCIE_PORT1_CONFIG_RMASK 0x3
#define RSH_GX72_IO_DISABLE0__TRIO0_PCIE_PORT1_CONFIG_MASK  _64bit(0x600000000)
#define RSH_GX72_IO_DISABLE0__TRIO0_PCIE_PORT1_CONFIG_FIELD 33,34
#define RSH_GX72_IO_DISABLE0__TRIO0_PCIE_PORT1_CONFIG_VAL_X4 0x0
#define RSH_GX72_IO_DISABLE0__TRIO0_PCIE_PORT1_CONFIG_VAL_X2 0x2
#define RSH_GX72_IO_DISABLE0__TRIO0_PCIE_PORT1_CONFIG_VAL_DISABLED 0x3

#define RSH_GX72_IO_DISABLE0__TRIO0_PCIE_PORT2_CONFIG_SHIFT 35
#define RSH_GX72_IO_DISABLE0__TRIO0_PCIE_PORT2_CONFIG_WIDTH 2
#define RSH_GX72_IO_DISABLE0__TRIO0_PCIE_PORT2_CONFIG_RMASK 0x3
#define RSH_GX72_IO_DISABLE0__TRIO0_PCIE_PORT2_CONFIG_MASK  _64bit(0x1800000000)
#define RSH_GX72_IO_DISABLE0__TRIO0_PCIE_PORT2_CONFIG_FIELD 35,36
#define RSH_GX72_IO_DISABLE0__TRIO0_PCIE_PORT2_CONFIG_VAL_X4 0x0
#define RSH_GX72_IO_DISABLE0__TRIO0_PCIE_PORT2_CONFIG_VAL_X2 0x2
#define RSH_GX72_IO_DISABLE0__TRIO0_PCIE_PORT2_CONFIG_VAL_DISABLED 0x3

#define RSH_GX72_IO_DISABLE0__TRIO0_STREAM_DISABLE_SHIFT 37
#define RSH_GX72_IO_DISABLE0__TRIO0_STREAM_DISABLE_WIDTH 3
#define RSH_GX72_IO_DISABLE0__TRIO0_STREAM_DISABLE_RMASK 0x7
#define RSH_GX72_IO_DISABLE0__TRIO0_STREAM_DISABLE_MASK  _64bit(0xe000000000)
#define RSH_GX72_IO_DISABLE0__TRIO0_STREAM_DISABLE_FIELD 37,39

#define RSH_GX72_IO_DISABLE0__TRIO0_DEVICE_DISABLE_SHIFT 40
#define RSH_GX72_IO_DISABLE0__TRIO0_DEVICE_DISABLE_WIDTH 1
#define RSH_GX72_IO_DISABLE0__TRIO0_DEVICE_DISABLE_RMASK 0x1
#define RSH_GX72_IO_DISABLE0__TRIO0_DEVICE_DISABLE_MASK  _64bit(0x10000000000)
#define RSH_GX72_IO_DISABLE0__TRIO0_DEVICE_DISABLE_FIELD 40,40

#define RSH_GX72_IO_DISABLE0__DDR3_DISABLE_SHIFT 41
#define RSH_GX72_IO_DISABLE0__DDR3_DISABLE_WIDTH 4
#define RSH_GX72_IO_DISABLE0__DDR3_DISABLE_RMASK 0xf
#define RSH_GX72_IO_DISABLE0__DDR3_DISABLE_MASK  _64bit(0x1e0000000000)
#define RSH_GX72_IO_DISABLE0__DDR3_DISABLE_FIELD 41,44

#define RSH_GX72_IO_DISABLE0__USB_HOST0_DISABLE_SHIFT 45
#define RSH_GX72_IO_DISABLE0__USB_HOST0_DISABLE_WIDTH 1
#define RSH_GX72_IO_DISABLE0__USB_HOST0_DISABLE_RMASK 0x1
#define RSH_GX72_IO_DISABLE0__USB_HOST0_DISABLE_MASK  _64bit(0x200000000000)
#define RSH_GX72_IO_DISABLE0__USB_HOST0_DISABLE_FIELD 45,45

#define RSH_GX72_IO_DISABLE0__USB_HOST1_DISABLE_SHIFT 46
#define RSH_GX72_IO_DISABLE0__USB_HOST1_DISABLE_WIDTH 1
#define RSH_GX72_IO_DISABLE0__USB_HOST1_DISABLE_RMASK 0x1
#define RSH_GX72_IO_DISABLE0__USB_HOST1_DISABLE_MASK  _64bit(0x400000000000)
#define RSH_GX72_IO_DISABLE0__USB_HOST1_DISABLE_FIELD 46,46

#define RSH_GX72_IO_DISABLE0__USB_EP_DISABLE_SHIFT 47
#define RSH_GX72_IO_DISABLE0__USB_EP_DISABLE_WIDTH 1
#define RSH_GX72_IO_DISABLE0__USB_EP_DISABLE_RMASK 0x1
#define RSH_GX72_IO_DISABLE0__USB_EP_DISABLE_MASK  _64bit(0x800000000000)
#define RSH_GX72_IO_DISABLE0__USB_EP_DISABLE_FIELD 47,47

#define RSH_GX72_IO_DISABLE0__USB_INTERFACE_DISABLE_SHIFT 48
#define RSH_GX72_IO_DISABLE0__USB_INTERFACE_DISABLE_WIDTH 1
#define RSH_GX72_IO_DISABLE0__USB_INTERFACE_DISABLE_RMASK 0x1
#define RSH_GX72_IO_DISABLE0__USB_INTERFACE_DISABLE_MASK  _64bit(0x1000000000000)
#define RSH_GX72_IO_DISABLE0__USB_INTERFACE_DISABLE_FIELD 48,48

#define RSH_GX72_IO_DISABLE0__CRYPTO0_MEM_CPY_DISABLE_SHIFT 49
#define RSH_GX72_IO_DISABLE0__CRYPTO0_MEM_CPY_DISABLE_WIDTH 1
#define RSH_GX72_IO_DISABLE0__CRYPTO0_MEM_CPY_DISABLE_RMASK 0x1
#define RSH_GX72_IO_DISABLE0__CRYPTO0_MEM_CPY_DISABLE_MASK  _64bit(0x2000000000000)
#define RSH_GX72_IO_DISABLE0__CRYPTO0_MEM_CPY_DISABLE_FIELD 49,49

#define RSH_GX72_IO_DISABLE0__CRYPTO0_WIRELESS_DISABLE_SHIFT 50
#define RSH_GX72_IO_DISABLE0__CRYPTO0_WIRELESS_DISABLE_WIDTH 1
#define RSH_GX72_IO_DISABLE0__CRYPTO0_WIRELESS_DISABLE_RMASK 0x1
#define RSH_GX72_IO_DISABLE0__CRYPTO0_WIRELESS_DISABLE_MASK  _64bit(0x4000000000000)
#define RSH_GX72_IO_DISABLE0__CRYPTO0_WIRELESS_DISABLE_FIELD 50,50

#define RSH_GX72_IO_DISABLE0__CRYPTO0_PKT_DISABLE_SHIFT 51
#define RSH_GX72_IO_DISABLE0__CRYPTO0_PKT_DISABLE_WIDTH 2
#define RSH_GX72_IO_DISABLE0__CRYPTO0_PKT_DISABLE_RMASK 0x3
#define RSH_GX72_IO_DISABLE0__CRYPTO0_PKT_DISABLE_MASK  _64bit(0x18000000000000)
#define RSH_GX72_IO_DISABLE0__CRYPTO0_PKT_DISABLE_FIELD 51,52

#define RSH_GX72_IO_DISABLE0__CRYPTO0_PUBKEY_DISABLE_SHIFT 53
#define RSH_GX72_IO_DISABLE0__CRYPTO0_PUBKEY_DISABLE_WIDTH 1
#define RSH_GX72_IO_DISABLE0__CRYPTO0_PUBKEY_DISABLE_RMASK 0x1
#define RSH_GX72_IO_DISABLE0__CRYPTO0_PUBKEY_DISABLE_MASK  _64bit(0x20000000000000)
#define RSH_GX72_IO_DISABLE0__CRYPTO0_PUBKEY_DISABLE_FIELD 53,53

#define RSH_GX72_IO_DISABLE0__CRYPTO0_INTERFACE_DISABLE_SHIFT 54
#define RSH_GX72_IO_DISABLE0__CRYPTO0_INTERFACE_DISABLE_WIDTH 1
#define RSH_GX72_IO_DISABLE0__CRYPTO0_INTERFACE_DISABLE_RMASK 0x1
#define RSH_GX72_IO_DISABLE0__CRYPTO0_INTERFACE_DISABLE_MASK  _64bit(0x40000000000000)
#define RSH_GX72_IO_DISABLE0__CRYPTO0_INTERFACE_DISABLE_FIELD 54,54

#define RSH_GX72_IO_DISABLE0__CRYPTO1_MEM_CPY_DISABLE_SHIFT 55
#define RSH_GX72_IO_DISABLE0__CRYPTO1_MEM_CPY_DISABLE_WIDTH 1
#define RSH_GX72_IO_DISABLE0__CRYPTO1_MEM_CPY_DISABLE_RMASK 0x1
#define RSH_GX72_IO_DISABLE0__CRYPTO1_MEM_CPY_DISABLE_MASK  _64bit(0x80000000000000)
#define RSH_GX72_IO_DISABLE0__CRYPTO1_MEM_CPY_DISABLE_FIELD 55,55

#define RSH_GX72_IO_DISABLE0__CRYPTO1_WIRELESS_DISABLE_SHIFT 56
#define RSH_GX72_IO_DISABLE0__CRYPTO1_WIRELESS_DISABLE_WIDTH 1
#define RSH_GX72_IO_DISABLE0__CRYPTO1_WIRELESS_DISABLE_RMASK 0x1
#define RSH_GX72_IO_DISABLE0__CRYPTO1_WIRELESS_DISABLE_MASK  _64bit(0x100000000000000)
#define RSH_GX72_IO_DISABLE0__CRYPTO1_WIRELESS_DISABLE_FIELD 56,56

#define RSH_GX72_IO_DISABLE0__CRYPTO1_PKT_DISABLE_SHIFT 57
#define RSH_GX72_IO_DISABLE0__CRYPTO1_PKT_DISABLE_WIDTH 2
#define RSH_GX72_IO_DISABLE0__CRYPTO1_PKT_DISABLE_RMASK 0x3
#define RSH_GX72_IO_DISABLE0__CRYPTO1_PKT_DISABLE_MASK  _64bit(0x600000000000000)
#define RSH_GX72_IO_DISABLE0__CRYPTO1_PKT_DISABLE_FIELD 57,58

#define RSH_GX72_IO_DISABLE0__CRYPTO1_PUBKEY_DISABLE_SHIFT 59
#define RSH_GX72_IO_DISABLE0__CRYPTO1_PUBKEY_DISABLE_WIDTH 1
#define RSH_GX72_IO_DISABLE0__CRYPTO1_PUBKEY_DISABLE_RMASK 0x1
#define RSH_GX72_IO_DISABLE0__CRYPTO1_PUBKEY_DISABLE_MASK  _64bit(0x800000000000000)
#define RSH_GX72_IO_DISABLE0__CRYPTO1_PUBKEY_DISABLE_FIELD 59,59

#define RSH_GX72_IO_DISABLE0__CRYPTO1_INTERFACE_DISABLE_SHIFT 60
#define RSH_GX72_IO_DISABLE0__CRYPTO1_INTERFACE_DISABLE_WIDTH 1
#define RSH_GX72_IO_DISABLE0__CRYPTO1_INTERFACE_DISABLE_RMASK 0x1
#define RSH_GX72_IO_DISABLE0__CRYPTO1_INTERFACE_DISABLE_MASK  _64bit(0x1000000000000000)
#define RSH_GX72_IO_DISABLE0__CRYPTO1_INTERFACE_DISABLE_FIELD 60,60


/*
 * IO Disable-1.
 * Device specific feature disable bits.  These may be set (hardcoded) in
 * hardware or set by software.
 */
#define RSH_GX72_IO_DISABLE1 0x0b58

#define RSH_GX72_IO_DISABLE1__TRIO1_PCIE_PORT0_CONFIG_SHIFT 8
#define RSH_GX72_IO_DISABLE1__TRIO1_PCIE_PORT0_CONFIG_WIDTH 2
#define RSH_GX72_IO_DISABLE1__TRIO1_PCIE_PORT0_CONFIG_RMASK 0x3
#define RSH_GX72_IO_DISABLE1__TRIO1_PCIE_PORT0_CONFIG_MASK  0x300
#define RSH_GX72_IO_DISABLE1__TRIO1_PCIE_PORT0_CONFIG_FIELD 8,9
#define RSH_GX72_IO_DISABLE1__TRIO1_PCIE_PORT0_CONFIG_VAL_X8 0x0
#define RSH_GX72_IO_DISABLE1__TRIO1_PCIE_PORT0_CONFIG_VAL_X4 0x1
#define RSH_GX72_IO_DISABLE1__TRIO1_PCIE_PORT0_CONFIG_VAL_X2 0x2
#define RSH_GX72_IO_DISABLE1__TRIO1_PCIE_PORT0_CONFIG_VAL_DISABLED 0x3

#define RSH_GX72_IO_DISABLE1__TRIO1_PCIE_PORT1_CONFIG_SHIFT 10
#define RSH_GX72_IO_DISABLE1__TRIO1_PCIE_PORT1_CONFIG_WIDTH 2
#define RSH_GX72_IO_DISABLE1__TRIO1_PCIE_PORT1_CONFIG_RMASK 0x3
#define RSH_GX72_IO_DISABLE1__TRIO1_PCIE_PORT1_CONFIG_MASK  0xc00
#define RSH_GX72_IO_DISABLE1__TRIO1_PCIE_PORT1_CONFIG_FIELD 10,11
#define RSH_GX72_IO_DISABLE1__TRIO1_PCIE_PORT1_CONFIG_VAL_X4 0x0
#define RSH_GX72_IO_DISABLE1__TRIO1_PCIE_PORT1_CONFIG_VAL_X2 0x2
#define RSH_GX72_IO_DISABLE1__TRIO1_PCIE_PORT1_CONFIG_VAL_DISABLED 0x3

#define RSH_GX72_IO_DISABLE1__TRIO1_PCIE_PORT2_CONFIG_SHIFT 12
#define RSH_GX72_IO_DISABLE1__TRIO1_PCIE_PORT2_CONFIG_WIDTH 2
#define RSH_GX72_IO_DISABLE1__TRIO1_PCIE_PORT2_CONFIG_RMASK 0x3
#define RSH_GX72_IO_DISABLE1__TRIO1_PCIE_PORT2_CONFIG_MASK  0x3000
#define RSH_GX72_IO_DISABLE1__TRIO1_PCIE_PORT2_CONFIG_FIELD 12,13
#define RSH_GX72_IO_DISABLE1__TRIO1_PCIE_PORT2_CONFIG_VAL_X4 0x0
#define RSH_GX72_IO_DISABLE1__TRIO1_PCIE_PORT2_CONFIG_VAL_X2 0x2
#define RSH_GX72_IO_DISABLE1__TRIO1_PCIE_PORT2_CONFIG_VAL_DISABLED 0x3

#define RSH_GX72_IO_DISABLE1__TRIO1_STREAM_DISABLE_SHIFT 14
#define RSH_GX72_IO_DISABLE1__TRIO1_STREAM_DISABLE_WIDTH 3
#define RSH_GX72_IO_DISABLE1__TRIO1_STREAM_DISABLE_RMASK 0x7
#define RSH_GX72_IO_DISABLE1__TRIO1_STREAM_DISABLE_MASK  0x1c000
#define RSH_GX72_IO_DISABLE1__TRIO1_STREAM_DISABLE_FIELD 14,16

#define RSH_GX72_IO_DISABLE1__TRIO1_DEVICE_DISABLE_SHIFT 17
#define RSH_GX72_IO_DISABLE1__TRIO1_DEVICE_DISABLE_WIDTH 1
#define RSH_GX72_IO_DISABLE1__TRIO1_DEVICE_DISABLE_RMASK 0x1
#define RSH_GX72_IO_DISABLE1__TRIO1_DEVICE_DISABLE_MASK  0x20000
#define RSH_GX72_IO_DISABLE1__TRIO1_DEVICE_DISABLE_FIELD 17,17


/*
 * IO Disable-2.
 * Device specific feature disable bits.  These may be set (hardcoded) in
 * hardware or set by software.
 */
#define RSH_GX72_IO_DISABLE2 0x0b60

#define RSH_GX72_IO_DISABLE2__MPIPE1_SGMII_3_0_DISABLE_SHIFT 0
#define RSH_GX72_IO_DISABLE2__MPIPE1_SGMII_3_0_DISABLE_WIDTH 4
#define RSH_GX72_IO_DISABLE2__MPIPE1_SGMII_3_0_DISABLE_RMASK 0xf
#define RSH_GX72_IO_DISABLE2__MPIPE1_SGMII_3_0_DISABLE_MASK  0xf
#define RSH_GX72_IO_DISABLE2__MPIPE1_SGMII_3_0_DISABLE_FIELD 0,3

#define RSH_GX72_IO_DISABLE2__MPIPE1_XAUI0_DISABLE_SHIFT 4
#define RSH_GX72_IO_DISABLE2__MPIPE1_XAUI0_DISABLE_WIDTH 1
#define RSH_GX72_IO_DISABLE2__MPIPE1_XAUI0_DISABLE_RMASK 0x1
#define RSH_GX72_IO_DISABLE2__MPIPE1_XAUI0_DISABLE_MASK  0x10
#define RSH_GX72_IO_DISABLE2__MPIPE1_XAUI0_DISABLE_FIELD 4,4

#define RSH_GX72_IO_DISABLE2__MPIPE1_SGMII_7_4_DISABLE_SHIFT 5
#define RSH_GX72_IO_DISABLE2__MPIPE1_SGMII_7_4_DISABLE_WIDTH 4
#define RSH_GX72_IO_DISABLE2__MPIPE1_SGMII_7_4_DISABLE_RMASK 0xf
#define RSH_GX72_IO_DISABLE2__MPIPE1_SGMII_7_4_DISABLE_MASK  0x1e0
#define RSH_GX72_IO_DISABLE2__MPIPE1_SGMII_7_4_DISABLE_FIELD 5,8

#define RSH_GX72_IO_DISABLE2__MPIPE1_XAUI1_DISABLE_SHIFT 9
#define RSH_GX72_IO_DISABLE2__MPIPE1_XAUI1_DISABLE_WIDTH 1
#define RSH_GX72_IO_DISABLE2__MPIPE1_XAUI1_DISABLE_RMASK 0x1
#define RSH_GX72_IO_DISABLE2__MPIPE1_XAUI1_DISABLE_MASK  0x200
#define RSH_GX72_IO_DISABLE2__MPIPE1_XAUI1_DISABLE_FIELD 9,9

#define RSH_GX72_IO_DISABLE2__MPIPE1_SGMII_11_8_DISABLE_SHIFT 10
#define RSH_GX72_IO_DISABLE2__MPIPE1_SGMII_11_8_DISABLE_WIDTH 4
#define RSH_GX72_IO_DISABLE2__MPIPE1_SGMII_11_8_DISABLE_RMASK 0xf
#define RSH_GX72_IO_DISABLE2__MPIPE1_SGMII_11_8_DISABLE_MASK  0x3c00
#define RSH_GX72_IO_DISABLE2__MPIPE1_SGMII_11_8_DISABLE_FIELD 10,13

#define RSH_GX72_IO_DISABLE2__MPIPE1_XAUI2_DISABLE_SHIFT 14
#define RSH_GX72_IO_DISABLE2__MPIPE1_XAUI2_DISABLE_WIDTH 1
#define RSH_GX72_IO_DISABLE2__MPIPE1_XAUI2_DISABLE_RMASK 0x1
#define RSH_GX72_IO_DISABLE2__MPIPE1_XAUI2_DISABLE_MASK  0x4000
#define RSH_GX72_IO_DISABLE2__MPIPE1_XAUI2_DISABLE_FIELD 14,14

#define RSH_GX72_IO_DISABLE2__MPIPE1_SGMII_15_12_DISABLE_SHIFT 15
#define RSH_GX72_IO_DISABLE2__MPIPE1_SGMII_15_12_DISABLE_WIDTH 4
#define RSH_GX72_IO_DISABLE2__MPIPE1_SGMII_15_12_DISABLE_RMASK 0xf
#define RSH_GX72_IO_DISABLE2__MPIPE1_SGMII_15_12_DISABLE_MASK  0x78000
#define RSH_GX72_IO_DISABLE2__MPIPE1_SGMII_15_12_DISABLE_FIELD 15,18

#define RSH_GX72_IO_DISABLE2__MPIPE1_XAUI3_DISABLE_SHIFT 19
#define RSH_GX72_IO_DISABLE2__MPIPE1_XAUI3_DISABLE_WIDTH 1
#define RSH_GX72_IO_DISABLE2__MPIPE1_XAUI3_DISABLE_RMASK 0x1
#define RSH_GX72_IO_DISABLE2__MPIPE1_XAUI3_DISABLE_MASK  0x80000
#define RSH_GX72_IO_DISABLE2__MPIPE1_XAUI3_DISABLE_FIELD 19,19

#define RSH_GX72_IO_DISABLE2__MPIPE1_CLS_DISABLE_SHIFT 20
#define RSH_GX72_IO_DISABLE2__MPIPE1_CLS_DISABLE_WIDTH 10
#define RSH_GX72_IO_DISABLE2__MPIPE1_CLS_DISABLE_RMASK 0x3ff
#define RSH_GX72_IO_DISABLE2__MPIPE1_CLS_DISABLE_MASK  0x3ff00000
#define RSH_GX72_IO_DISABLE2__MPIPE1_CLS_DISABLE_FIELD 20,29

#define RSH_GX72_IO_DISABLE2__MPIPE1_DEVICE_DISABLE_SHIFT 30
#define RSH_GX72_IO_DISABLE2__MPIPE1_DEVICE_DISABLE_WIDTH 1
#define RSH_GX72_IO_DISABLE2__MPIPE1_DEVICE_DISABLE_RMASK 0x1
#define RSH_GX72_IO_DISABLE2__MPIPE1_DEVICE_DISABLE_MASK  0x40000000
#define RSH_GX72_IO_DISABLE2__MPIPE1_DEVICE_DISABLE_FIELD 30,30


/*
 * IO Reset.
 * Each bit corresponds to a device or function within a device.  When
 * written with a 1, the associated device or function will be reset.
 * Software is responsible for any quiesce procedures required for the
 * associated device prior to reset.
 */
#define RSH_GX72_IO_RESET 0x0520

#define RSH_GX72_IO_RESET__MPIPE0_PCLK_SHIFT 0
#define RSH_GX72_IO_RESET__MPIPE0_PCLK_WIDTH 1
#define RSH_GX72_IO_RESET__MPIPE0_PCLK_RESET_VAL 0
#define RSH_GX72_IO_RESET__MPIPE0_PCLK_RMASK 0x1
#define RSH_GX72_IO_RESET__MPIPE0_PCLK_MASK  0x1
#define RSH_GX72_IO_RESET__MPIPE0_PCLK_FIELD 0,0

#define RSH_GX72_IO_RESET__MPIPE0_KCLK_SHIFT 1
#define RSH_GX72_IO_RESET__MPIPE0_KCLK_WIDTH 1
#define RSH_GX72_IO_RESET__MPIPE0_KCLK_RESET_VAL 0
#define RSH_GX72_IO_RESET__MPIPE0_KCLK_RMASK 0x1
#define RSH_GX72_IO_RESET__MPIPE0_KCLK_MASK  0x2
#define RSH_GX72_IO_RESET__MPIPE0_KCLK_FIELD 1,1

#define RSH_GX72_IO_RESET__MPIPE0_QUAD0_SHIFT 3
#define RSH_GX72_IO_RESET__MPIPE0_QUAD0_WIDTH 1
#define RSH_GX72_IO_RESET__MPIPE0_QUAD0_RESET_VAL 0
#define RSH_GX72_IO_RESET__MPIPE0_QUAD0_RMASK 0x1
#define RSH_GX72_IO_RESET__MPIPE0_QUAD0_MASK  0x8
#define RSH_GX72_IO_RESET__MPIPE0_QUAD0_FIELD 3,3

#define RSH_GX72_IO_RESET__MPIPE0_QUAD1_SHIFT 4
#define RSH_GX72_IO_RESET__MPIPE0_QUAD1_WIDTH 1
#define RSH_GX72_IO_RESET__MPIPE0_QUAD1_RESET_VAL 0
#define RSH_GX72_IO_RESET__MPIPE0_QUAD1_RMASK 0x1
#define RSH_GX72_IO_RESET__MPIPE0_QUAD1_MASK  0x10
#define RSH_GX72_IO_RESET__MPIPE0_QUAD1_FIELD 4,4

#define RSH_GX72_IO_RESET__MPIPE0_QUAD2_SHIFT 5
#define RSH_GX72_IO_RESET__MPIPE0_QUAD2_WIDTH 1
#define RSH_GX72_IO_RESET__MPIPE0_QUAD2_RESET_VAL 0
#define RSH_GX72_IO_RESET__MPIPE0_QUAD2_RMASK 0x1
#define RSH_GX72_IO_RESET__MPIPE0_QUAD2_MASK  0x20
#define RSH_GX72_IO_RESET__MPIPE0_QUAD2_FIELD 5,5

#define RSH_GX72_IO_RESET__MPIPE0_QUAD3_SHIFT 6
#define RSH_GX72_IO_RESET__MPIPE0_QUAD3_WIDTH 1
#define RSH_GX72_IO_RESET__MPIPE0_QUAD3_RESET_VAL 0
#define RSH_GX72_IO_RESET__MPIPE0_QUAD3_RMASK 0x1
#define RSH_GX72_IO_RESET__MPIPE0_QUAD3_MASK  0x40
#define RSH_GX72_IO_RESET__MPIPE0_QUAD3_FIELD 6,6

#define RSH_GX72_IO_RESET__MPIPE1_PCLK_SHIFT 7
#define RSH_GX72_IO_RESET__MPIPE1_PCLK_WIDTH 1
#define RSH_GX72_IO_RESET__MPIPE1_PCLK_RESET_VAL 0
#define RSH_GX72_IO_RESET__MPIPE1_PCLK_RMASK 0x1
#define RSH_GX72_IO_RESET__MPIPE1_PCLK_MASK  0x80
#define RSH_GX72_IO_RESET__MPIPE1_PCLK_FIELD 7,7

#define RSH_GX72_IO_RESET__MPIPE1_KCLK_SHIFT 8
#define RSH_GX72_IO_RESET__MPIPE1_KCLK_WIDTH 1
#define RSH_GX72_IO_RESET__MPIPE1_KCLK_RESET_VAL 0
#define RSH_GX72_IO_RESET__MPIPE1_KCLK_RMASK 0x1
#define RSH_GX72_IO_RESET__MPIPE1_KCLK_MASK  0x100
#define RSH_GX72_IO_RESET__MPIPE1_KCLK_FIELD 8,8

#define RSH_GX72_IO_RESET__MPIPE1_QUAD0_SHIFT 10
#define RSH_GX72_IO_RESET__MPIPE1_QUAD0_WIDTH 1
#define RSH_GX72_IO_RESET__MPIPE1_QUAD0_RESET_VAL 0
#define RSH_GX72_IO_RESET__MPIPE1_QUAD0_RMASK 0x1
#define RSH_GX72_IO_RESET__MPIPE1_QUAD0_MASK  0x400
#define RSH_GX72_IO_RESET__MPIPE1_QUAD0_FIELD 10,10

#define RSH_GX72_IO_RESET__MPIPE1_QUAD1_SHIFT 11
#define RSH_GX72_IO_RESET__MPIPE1_QUAD1_WIDTH 1
#define RSH_GX72_IO_RESET__MPIPE1_QUAD1_RESET_VAL 0
#define RSH_GX72_IO_RESET__MPIPE1_QUAD1_RMASK 0x1
#define RSH_GX72_IO_RESET__MPIPE1_QUAD1_MASK  0x800
#define RSH_GX72_IO_RESET__MPIPE1_QUAD1_FIELD 11,11

#define RSH_GX72_IO_RESET__MPIPE1_QUAD2_SHIFT 12
#define RSH_GX72_IO_RESET__MPIPE1_QUAD2_WIDTH 1
#define RSH_GX72_IO_RESET__MPIPE1_QUAD2_RESET_VAL 0
#define RSH_GX72_IO_RESET__MPIPE1_QUAD2_RMASK 0x1
#define RSH_GX72_IO_RESET__MPIPE1_QUAD2_MASK  0x1000
#define RSH_GX72_IO_RESET__MPIPE1_QUAD2_FIELD 12,12

#define RSH_GX72_IO_RESET__MPIPE1_QUAD3_SHIFT 13
#define RSH_GX72_IO_RESET__MPIPE1_QUAD3_WIDTH 1
#define RSH_GX72_IO_RESET__MPIPE1_QUAD3_RESET_VAL 0
#define RSH_GX72_IO_RESET__MPIPE1_QUAD3_RMASK 0x1
#define RSH_GX72_IO_RESET__MPIPE1_QUAD3_MASK  0x2000
#define RSH_GX72_IO_RESET__MPIPE1_QUAD3_FIELD 13,13

#define RSH_GX72_IO_RESET__TRIO0_SHIFT 14
#define RSH_GX72_IO_RESET__TRIO0_WIDTH 1
#define RSH_GX72_IO_RESET__TRIO0_RESET_VAL 0
#define RSH_GX72_IO_RESET__TRIO0_RMASK 0x1
#define RSH_GX72_IO_RESET__TRIO0_MASK  0x4000
#define RSH_GX72_IO_RESET__TRIO0_FIELD 14,14

#define RSH_GX72_IO_RESET__PCIE0_0_SHIFT 15
#define RSH_GX72_IO_RESET__PCIE0_0_WIDTH 1
#define RSH_GX72_IO_RESET__PCIE0_0_RESET_VAL 0
#define RSH_GX72_IO_RESET__PCIE0_0_RMASK 0x1
#define RSH_GX72_IO_RESET__PCIE0_0_MASK  0x8000
#define RSH_GX72_IO_RESET__PCIE0_0_FIELD 15,15

#define RSH_GX72_IO_RESET__PCIE0_1_SHIFT 16
#define RSH_GX72_IO_RESET__PCIE0_1_WIDTH 1
#define RSH_GX72_IO_RESET__PCIE0_1_RESET_VAL 0
#define RSH_GX72_IO_RESET__PCIE0_1_RMASK 0x1
#define RSH_GX72_IO_RESET__PCIE0_1_MASK  0x10000
#define RSH_GX72_IO_RESET__PCIE0_1_FIELD 16,16

#define RSH_GX72_IO_RESET__PCIE0_2_SHIFT 17
#define RSH_GX72_IO_RESET__PCIE0_2_WIDTH 1
#define RSH_GX72_IO_RESET__PCIE0_2_RESET_VAL 0
#define RSH_GX72_IO_RESET__PCIE0_2_RMASK 0x1
#define RSH_GX72_IO_RESET__PCIE0_2_MASK  0x20000
#define RSH_GX72_IO_RESET__PCIE0_2_FIELD 17,17

#define RSH_GX72_IO_RESET__TRIO1_SHIFT 18
#define RSH_GX72_IO_RESET__TRIO1_WIDTH 1
#define RSH_GX72_IO_RESET__TRIO1_RESET_VAL 0
#define RSH_GX72_IO_RESET__TRIO1_RMASK 0x1
#define RSH_GX72_IO_RESET__TRIO1_MASK  0x40000
#define RSH_GX72_IO_RESET__TRIO1_FIELD 18,18

#define RSH_GX72_IO_RESET__PCIE1_0_SHIFT 19
#define RSH_GX72_IO_RESET__PCIE1_0_WIDTH 1
#define RSH_GX72_IO_RESET__PCIE1_0_RESET_VAL 0
#define RSH_GX72_IO_RESET__PCIE1_0_RMASK 0x1
#define RSH_GX72_IO_RESET__PCIE1_0_MASK  0x80000
#define RSH_GX72_IO_RESET__PCIE1_0_FIELD 19,19

#define RSH_GX72_IO_RESET__PCIE1_1_SHIFT 20
#define RSH_GX72_IO_RESET__PCIE1_1_WIDTH 1
#define RSH_GX72_IO_RESET__PCIE1_1_RESET_VAL 0
#define RSH_GX72_IO_RESET__PCIE1_1_RMASK 0x1
#define RSH_GX72_IO_RESET__PCIE1_1_MASK  0x100000
#define RSH_GX72_IO_RESET__PCIE1_1_FIELD 20,20

#define RSH_GX72_IO_RESET__PCIE1_2_SHIFT 21
#define RSH_GX72_IO_RESET__PCIE1_2_WIDTH 1
#define RSH_GX72_IO_RESET__PCIE1_2_RESET_VAL 0
#define RSH_GX72_IO_RESET__PCIE1_2_RMASK 0x1
#define RSH_GX72_IO_RESET__PCIE1_2_MASK  0x200000
#define RSH_GX72_IO_RESET__PCIE1_2_FIELD 21,21

#define RSH_GX72_IO_RESET__USB_SHIFT 22
#define RSH_GX72_IO_RESET__USB_WIDTH 1
#define RSH_GX72_IO_RESET__USB_RESET_VAL 0
#define RSH_GX72_IO_RESET__USB_RMASK 0x1
#define RSH_GX72_IO_RESET__USB_MASK  0x400000
#define RSH_GX72_IO_RESET__USB_FIELD 22,22

#define RSH_GX72_IO_RESET__MSH0_SHIFT 23
#define RSH_GX72_IO_RESET__MSH0_WIDTH 1
#define RSH_GX72_IO_RESET__MSH0_RESET_VAL 0
#define RSH_GX72_IO_RESET__MSH0_RMASK 0x1
#define RSH_GX72_IO_RESET__MSH0_MASK  0x800000
#define RSH_GX72_IO_RESET__MSH0_FIELD 23,23

#define RSH_GX72_IO_RESET__MSH1_SHIFT 24
#define RSH_GX72_IO_RESET__MSH1_WIDTH 1
#define RSH_GX72_IO_RESET__MSH1_RESET_VAL 0
#define RSH_GX72_IO_RESET__MSH1_RMASK 0x1
#define RSH_GX72_IO_RESET__MSH1_MASK  0x1000000
#define RSH_GX72_IO_RESET__MSH1_FIELD 24,24

#define RSH_GX72_IO_RESET__MSH2_SHIFT 25
#define RSH_GX72_IO_RESET__MSH2_WIDTH 1
#define RSH_GX72_IO_RESET__MSH2_RESET_VAL 0
#define RSH_GX72_IO_RESET__MSH2_RMASK 0x1
#define RSH_GX72_IO_RESET__MSH2_MASK  0x2000000
#define RSH_GX72_IO_RESET__MSH2_FIELD 25,25

#define RSH_GX72_IO_RESET__MSH3_SHIFT 26
#define RSH_GX72_IO_RESET__MSH3_WIDTH 1
#define RSH_GX72_IO_RESET__MSH3_RESET_VAL 0
#define RSH_GX72_IO_RESET__MSH3_RMASK 0x1
#define RSH_GX72_IO_RESET__MSH3_MASK  0x4000000
#define RSH_GX72_IO_RESET__MSH3_FIELD 26,26

#define RSH_GX72_IO_RESET__GPIO_SHIFT 27
#define RSH_GX72_IO_RESET__GPIO_WIDTH 1
#define RSH_GX72_IO_RESET__GPIO_RESET_VAL 0
#define RSH_GX72_IO_RESET__GPIO_RMASK 0x1
#define RSH_GX72_IO_RESET__GPIO_MASK  0x8000000
#define RSH_GX72_IO_RESET__GPIO_FIELD 27,27

#define RSH_GX72_IO_RESET__CRYPTO_SHIFT 28
#define RSH_GX72_IO_RESET__CRYPTO_WIDTH 1
#define RSH_GX72_IO_RESET__CRYPTO_RESET_VAL 0
#define RSH_GX72_IO_RESET__CRYPTO_RMASK 0x1
#define RSH_GX72_IO_RESET__CRYPTO_MASK  0x10000000
#define RSH_GX72_IO_RESET__CRYPTO_FIELD 28,28


/*
 * IO Disable-0.
 * Device specific feature disable bits.  These may be set (hardcoded) in
 * hardware or set by software.
 */
#define RSH_GX9_IO_DISABLE0 0x0b50

#define RSH_GX9_IO_DISABLE0__MPIPE_SGMII_3_0_DISABLE_SHIFT 0
#define RSH_GX9_IO_DISABLE0__MPIPE_SGMII_3_0_DISABLE_WIDTH 4
#define RSH_GX9_IO_DISABLE0__MPIPE_SGMII_3_0_DISABLE_RMASK 0xf
#define RSH_GX9_IO_DISABLE0__MPIPE_SGMII_3_0_DISABLE_MASK  0xf
#define RSH_GX9_IO_DISABLE0__MPIPE_SGMII_3_0_DISABLE_FIELD 0,3

#define RSH_GX9_IO_DISABLE0__MPIPE_XAUI0_DISABLE_SHIFT 4
#define RSH_GX9_IO_DISABLE0__MPIPE_XAUI0_DISABLE_WIDTH 1
#define RSH_GX9_IO_DISABLE0__MPIPE_XAUI0_DISABLE_RMASK 0x1
#define RSH_GX9_IO_DISABLE0__MPIPE_XAUI0_DISABLE_MASK  0x10
#define RSH_GX9_IO_DISABLE0__MPIPE_XAUI0_DISABLE_FIELD 4,4

#define RSH_GX9_IO_DISABLE0__MPIPE_SGMII_7_4_DISABLE_SHIFT 5
#define RSH_GX9_IO_DISABLE0__MPIPE_SGMII_7_4_DISABLE_WIDTH 4
#define RSH_GX9_IO_DISABLE0__MPIPE_SGMII_7_4_DISABLE_RMASK 0xf
#define RSH_GX9_IO_DISABLE0__MPIPE_SGMII_7_4_DISABLE_MASK  0x1e0
#define RSH_GX9_IO_DISABLE0__MPIPE_SGMII_7_4_DISABLE_FIELD 5,8

#define RSH_GX9_IO_DISABLE0__MPIPE_XAUI1_DISABLE_SHIFT 9
#define RSH_GX9_IO_DISABLE0__MPIPE_XAUI1_DISABLE_WIDTH 1
#define RSH_GX9_IO_DISABLE0__MPIPE_XAUI1_DISABLE_RMASK 0x1
#define RSH_GX9_IO_DISABLE0__MPIPE_XAUI1_DISABLE_MASK  0x200
#define RSH_GX9_IO_DISABLE0__MPIPE_XAUI1_DISABLE_FIELD 9,9

#define RSH_GX9_IO_DISABLE0__MPIPE_SGMII_11_8_DISABLE_SHIFT 10
#define RSH_GX9_IO_DISABLE0__MPIPE_SGMII_11_8_DISABLE_WIDTH 4
#define RSH_GX9_IO_DISABLE0__MPIPE_SGMII_11_8_DISABLE_RMASK 0xf
#define RSH_GX9_IO_DISABLE0__MPIPE_SGMII_11_8_DISABLE_MASK  0x3c00
#define RSH_GX9_IO_DISABLE0__MPIPE_SGMII_11_8_DISABLE_FIELD 10,13

#define RSH_GX9_IO_DISABLE0__MPIPE_XAUI2_DISABLE_SHIFT 14
#define RSH_GX9_IO_DISABLE0__MPIPE_XAUI2_DISABLE_WIDTH 1
#define RSH_GX9_IO_DISABLE0__MPIPE_XAUI2_DISABLE_RMASK 0x1
#define RSH_GX9_IO_DISABLE0__MPIPE_XAUI2_DISABLE_MASK  0x4000
#define RSH_GX9_IO_DISABLE0__MPIPE_XAUI2_DISABLE_FIELD 14,14

#define RSH_GX9_IO_DISABLE0__MPIPE_SGMII_15_12_DISABLE_SHIFT 15
#define RSH_GX9_IO_DISABLE0__MPIPE_SGMII_15_12_DISABLE_WIDTH 4
#define RSH_GX9_IO_DISABLE0__MPIPE_SGMII_15_12_DISABLE_RMASK 0xf
#define RSH_GX9_IO_DISABLE0__MPIPE_SGMII_15_12_DISABLE_MASK  0x78000
#define RSH_GX9_IO_DISABLE0__MPIPE_SGMII_15_12_DISABLE_FIELD 15,18

#define RSH_GX9_IO_DISABLE0__MPIPE_XAUI3_DISABLE_SHIFT 19
#define RSH_GX9_IO_DISABLE0__MPIPE_XAUI3_DISABLE_WIDTH 1
#define RSH_GX9_IO_DISABLE0__MPIPE_XAUI3_DISABLE_RMASK 0x1
#define RSH_GX9_IO_DISABLE0__MPIPE_XAUI3_DISABLE_MASK  0x80000
#define RSH_GX9_IO_DISABLE0__MPIPE_XAUI3_DISABLE_FIELD 19,19

#define RSH_GX9_IO_DISABLE0__MPIPE_CLS_DISABLE_SHIFT 20
#define RSH_GX9_IO_DISABLE0__MPIPE_CLS_DISABLE_WIDTH 10
#define RSH_GX9_IO_DISABLE0__MPIPE_CLS_DISABLE_RMASK 0x3ff
#define RSH_GX9_IO_DISABLE0__MPIPE_CLS_DISABLE_MASK  0x3ff00000
#define RSH_GX9_IO_DISABLE0__MPIPE_CLS_DISABLE_FIELD 20,29

#define RSH_GX9_IO_DISABLE0__MPIPE_DEVICE_DISABLE_SHIFT 30
#define RSH_GX9_IO_DISABLE0__MPIPE_DEVICE_DISABLE_WIDTH 1
#define RSH_GX9_IO_DISABLE0__MPIPE_DEVICE_DISABLE_RMASK 0x1
#define RSH_GX9_IO_DISABLE0__MPIPE_DEVICE_DISABLE_MASK  0x40000000
#define RSH_GX9_IO_DISABLE0__MPIPE_DEVICE_DISABLE_FIELD 30,30

#define RSH_GX9_IO_DISABLE0__TRIO_PCIE_PORT0_CONFIG_SHIFT 31
#define RSH_GX9_IO_DISABLE0__TRIO_PCIE_PORT0_CONFIG_WIDTH 2
#define RSH_GX9_IO_DISABLE0__TRIO_PCIE_PORT0_CONFIG_RMASK 0x3
#define RSH_GX9_IO_DISABLE0__TRIO_PCIE_PORT0_CONFIG_MASK  _64bit(0x180000000)
#define RSH_GX9_IO_DISABLE0__TRIO_PCIE_PORT0_CONFIG_FIELD 31,32
#define RSH_GX9_IO_DISABLE0__TRIO_PCIE_PORT0_CONFIG_VAL_X8 0x0
#define RSH_GX9_IO_DISABLE0__TRIO_PCIE_PORT0_CONFIG_VAL_X4 0x1
#define RSH_GX9_IO_DISABLE0__TRIO_PCIE_PORT0_CONFIG_VAL_X2 0x2
#define RSH_GX9_IO_DISABLE0__TRIO_PCIE_PORT0_CONFIG_VAL_DISABLED 0x3

#define RSH_GX9_IO_DISABLE0__TRIO_PCIE_PORT1_CONFIG_SHIFT 33
#define RSH_GX9_IO_DISABLE0__TRIO_PCIE_PORT1_CONFIG_WIDTH 2
#define RSH_GX9_IO_DISABLE0__TRIO_PCIE_PORT1_CONFIG_RMASK 0x3
#define RSH_GX9_IO_DISABLE0__TRIO_PCIE_PORT1_CONFIG_MASK  _64bit(0x600000000)
#define RSH_GX9_IO_DISABLE0__TRIO_PCIE_PORT1_CONFIG_FIELD 33,34
#define RSH_GX9_IO_DISABLE0__TRIO_PCIE_PORT1_CONFIG_VAL_X4 0x0
#define RSH_GX9_IO_DISABLE0__TRIO_PCIE_PORT1_CONFIG_VAL_X2 0x2
#define RSH_GX9_IO_DISABLE0__TRIO_PCIE_PORT1_CONFIG_VAL_DISABLED 0x3

#define RSH_GX9_IO_DISABLE0__TRIO_PCIE_PORT2_CONFIG_SHIFT 35
#define RSH_GX9_IO_DISABLE0__TRIO_PCIE_PORT2_CONFIG_WIDTH 2
#define RSH_GX9_IO_DISABLE0__TRIO_PCIE_PORT2_CONFIG_RMASK 0x3
#define RSH_GX9_IO_DISABLE0__TRIO_PCIE_PORT2_CONFIG_MASK  _64bit(0x1800000000)
#define RSH_GX9_IO_DISABLE0__TRIO_PCIE_PORT2_CONFIG_FIELD 35,36
#define RSH_GX9_IO_DISABLE0__TRIO_PCIE_PORT2_CONFIG_VAL_X4 0x0
#define RSH_GX9_IO_DISABLE0__TRIO_PCIE_PORT2_CONFIG_VAL_X2 0x2
#define RSH_GX9_IO_DISABLE0__TRIO_PCIE_PORT2_CONFIG_VAL_DISABLED 0x3

#define RSH_GX9_IO_DISABLE0__TRIO_STREAM_DISABLE_SHIFT 37
#define RSH_GX9_IO_DISABLE0__TRIO_STREAM_DISABLE_WIDTH 3
#define RSH_GX9_IO_DISABLE0__TRIO_STREAM_DISABLE_RMASK 0x7
#define RSH_GX9_IO_DISABLE0__TRIO_STREAM_DISABLE_MASK  _64bit(0xe000000000)
#define RSH_GX9_IO_DISABLE0__TRIO_STREAM_DISABLE_FIELD 37,39

#define RSH_GX9_IO_DISABLE0__TRIO_DEVICE_DISABLE_SHIFT 40
#define RSH_GX9_IO_DISABLE0__TRIO_DEVICE_DISABLE_WIDTH 1
#define RSH_GX9_IO_DISABLE0__TRIO_DEVICE_DISABLE_RMASK 0x1
#define RSH_GX9_IO_DISABLE0__TRIO_DEVICE_DISABLE_MASK  _64bit(0x10000000000)
#define RSH_GX9_IO_DISABLE0__TRIO_DEVICE_DISABLE_FIELD 40,40

#define RSH_GX9_IO_DISABLE0__DDR3_DISABLE_SHIFT 41
#define RSH_GX9_IO_DISABLE0__DDR3_DISABLE_WIDTH 2
#define RSH_GX9_IO_DISABLE0__DDR3_DISABLE_RMASK 0x3
#define RSH_GX9_IO_DISABLE0__DDR3_DISABLE_MASK  _64bit(0x60000000000)
#define RSH_GX9_IO_DISABLE0__DDR3_DISABLE_FIELD 41,42

#define RSH_GX9_IO_DISABLE0__USB_HOST0_DISABLE_SHIFT 43
#define RSH_GX9_IO_DISABLE0__USB_HOST0_DISABLE_WIDTH 1
#define RSH_GX9_IO_DISABLE0__USB_HOST0_DISABLE_RMASK 0x1
#define RSH_GX9_IO_DISABLE0__USB_HOST0_DISABLE_MASK  _64bit(0x80000000000)
#define RSH_GX9_IO_DISABLE0__USB_HOST0_DISABLE_FIELD 43,43

#define RSH_GX9_IO_DISABLE0__USB_HOST1_DISABLE_SHIFT 44
#define RSH_GX9_IO_DISABLE0__USB_HOST1_DISABLE_WIDTH 1
#define RSH_GX9_IO_DISABLE0__USB_HOST1_DISABLE_RMASK 0x1
#define RSH_GX9_IO_DISABLE0__USB_HOST1_DISABLE_MASK  _64bit(0x100000000000)
#define RSH_GX9_IO_DISABLE0__USB_HOST1_DISABLE_FIELD 44,44

#define RSH_GX9_IO_DISABLE0__USB_EP_DISABLE_SHIFT 45
#define RSH_GX9_IO_DISABLE0__USB_EP_DISABLE_WIDTH 1
#define RSH_GX9_IO_DISABLE0__USB_EP_DISABLE_RMASK 0x1
#define RSH_GX9_IO_DISABLE0__USB_EP_DISABLE_MASK  _64bit(0x200000000000)
#define RSH_GX9_IO_DISABLE0__USB_EP_DISABLE_FIELD 45,45

#define RSH_GX9_IO_DISABLE0__USB_INTERFACE_DISABLE_SHIFT 46
#define RSH_GX9_IO_DISABLE0__USB_INTERFACE_DISABLE_WIDTH 1
#define RSH_GX9_IO_DISABLE0__USB_INTERFACE_DISABLE_RMASK 0x1
#define RSH_GX9_IO_DISABLE0__USB_INTERFACE_DISABLE_MASK  _64bit(0x400000000000)
#define RSH_GX9_IO_DISABLE0__USB_INTERFACE_DISABLE_FIELD 46,46

#define RSH_GX9_IO_DISABLE0__CRYPTO0_MEM_CPY_DISABLE_SHIFT 47
#define RSH_GX9_IO_DISABLE0__CRYPTO0_MEM_CPY_DISABLE_WIDTH 1
#define RSH_GX9_IO_DISABLE0__CRYPTO0_MEM_CPY_DISABLE_RMASK 0x1
#define RSH_GX9_IO_DISABLE0__CRYPTO0_MEM_CPY_DISABLE_MASK  _64bit(0x800000000000)
#define RSH_GX9_IO_DISABLE0__CRYPTO0_MEM_CPY_DISABLE_FIELD 47,47

#define RSH_GX9_IO_DISABLE0__CRYPTO0_WIRELESS_DISABLE_SHIFT 48
#define RSH_GX9_IO_DISABLE0__CRYPTO0_WIRELESS_DISABLE_WIDTH 1
#define RSH_GX9_IO_DISABLE0__CRYPTO0_WIRELESS_DISABLE_RMASK 0x1
#define RSH_GX9_IO_DISABLE0__CRYPTO0_WIRELESS_DISABLE_MASK  _64bit(0x1000000000000)
#define RSH_GX9_IO_DISABLE0__CRYPTO0_WIRELESS_DISABLE_FIELD 48,48

#define RSH_GX9_IO_DISABLE0__CRYPTO0_PKT_DISABLE_SHIFT 49
#define RSH_GX9_IO_DISABLE0__CRYPTO0_PKT_DISABLE_WIDTH 2
#define RSH_GX9_IO_DISABLE0__CRYPTO0_PKT_DISABLE_RMASK 0x3
#define RSH_GX9_IO_DISABLE0__CRYPTO0_PKT_DISABLE_MASK  _64bit(0x6000000000000)
#define RSH_GX9_IO_DISABLE0__CRYPTO0_PKT_DISABLE_FIELD 49,50

#define RSH_GX9_IO_DISABLE0__CRYPTO0_PUBKEY_DISABLE_SHIFT 51
#define RSH_GX9_IO_DISABLE0__CRYPTO0_PUBKEY_DISABLE_WIDTH 1
#define RSH_GX9_IO_DISABLE0__CRYPTO0_PUBKEY_DISABLE_RMASK 0x1
#define RSH_GX9_IO_DISABLE0__CRYPTO0_PUBKEY_DISABLE_MASK  _64bit(0x8000000000000)
#define RSH_GX9_IO_DISABLE0__CRYPTO0_PUBKEY_DISABLE_FIELD 51,51

#define RSH_GX9_IO_DISABLE0__CRYPTO0_INTERFACE_DISABLE_SHIFT 52
#define RSH_GX9_IO_DISABLE0__CRYPTO0_INTERFACE_DISABLE_WIDTH 1
#define RSH_GX9_IO_DISABLE0__CRYPTO0_INTERFACE_DISABLE_RMASK 0x1
#define RSH_GX9_IO_DISABLE0__CRYPTO0_INTERFACE_DISABLE_MASK  _64bit(0x10000000000000)
#define RSH_GX9_IO_DISABLE0__CRYPTO0_INTERFACE_DISABLE_FIELD 52,52

#define RSH_GX9_IO_DISABLE0__CRYPTO1_MEM_CPY_DISABLE_SHIFT 53
#define RSH_GX9_IO_DISABLE0__CRYPTO1_MEM_CPY_DISABLE_WIDTH 1
#define RSH_GX9_IO_DISABLE0__CRYPTO1_MEM_CPY_DISABLE_RMASK 0x1
#define RSH_GX9_IO_DISABLE0__CRYPTO1_MEM_CPY_DISABLE_MASK  _64bit(0x20000000000000)
#define RSH_GX9_IO_DISABLE0__CRYPTO1_MEM_CPY_DISABLE_FIELD 53,53

#define RSH_GX9_IO_DISABLE0__CRYPTO1_WIRELESS_DISABLE_SHIFT 54
#define RSH_GX9_IO_DISABLE0__CRYPTO1_WIRELESS_DISABLE_WIDTH 1
#define RSH_GX9_IO_DISABLE0__CRYPTO1_WIRELESS_DISABLE_RMASK 0x1
#define RSH_GX9_IO_DISABLE0__CRYPTO1_WIRELESS_DISABLE_MASK  _64bit(0x40000000000000)
#define RSH_GX9_IO_DISABLE0__CRYPTO1_WIRELESS_DISABLE_FIELD 54,54

#define RSH_GX9_IO_DISABLE0__CRYPTO1_PKT_DISABLE_SHIFT 55
#define RSH_GX9_IO_DISABLE0__CRYPTO1_PKT_DISABLE_WIDTH 2
#define RSH_GX9_IO_DISABLE0__CRYPTO1_PKT_DISABLE_RMASK 0x3
#define RSH_GX9_IO_DISABLE0__CRYPTO1_PKT_DISABLE_MASK  _64bit(0x180000000000000)
#define RSH_GX9_IO_DISABLE0__CRYPTO1_PKT_DISABLE_FIELD 55,56

#define RSH_GX9_IO_DISABLE0__CRYPTO1_PUBKEY_DISABLE_SHIFT 57
#define RSH_GX9_IO_DISABLE0__CRYPTO1_PUBKEY_DISABLE_WIDTH 1
#define RSH_GX9_IO_DISABLE0__CRYPTO1_PUBKEY_DISABLE_RMASK 0x1
#define RSH_GX9_IO_DISABLE0__CRYPTO1_PUBKEY_DISABLE_MASK  _64bit(0x200000000000000)
#define RSH_GX9_IO_DISABLE0__CRYPTO1_PUBKEY_DISABLE_FIELD 57,57

#define RSH_GX9_IO_DISABLE0__CRYPTO1_INTERFACE_DISABLE_SHIFT 58
#define RSH_GX9_IO_DISABLE0__CRYPTO1_INTERFACE_DISABLE_WIDTH 1
#define RSH_GX9_IO_DISABLE0__CRYPTO1_INTERFACE_DISABLE_RMASK 0x1
#define RSH_GX9_IO_DISABLE0__CRYPTO1_INTERFACE_DISABLE_MASK  _64bit(0x400000000000000)
#define RSH_GX9_IO_DISABLE0__CRYPTO1_INTERFACE_DISABLE_FIELD 58,58

#define RSH_GX9_IO_DISABLE0__RESERVED_IO_SHIFT 59
#define RSH_GX9_IO_DISABLE0__RESERVED_IO_WIDTH 5
#define RSH_GX9_IO_DISABLE0__RESERVED_IO_RMASK 0x1f
#define RSH_GX9_IO_DISABLE0__RESERVED_IO_MASK  _64bit(0xf800000000000000)
#define RSH_GX9_IO_DISABLE0__RESERVED_IO_FIELD 59,63


/*
 * IO Disable-1.
 * Device specific feature disable bits.  These may be set (hardcoded) in
 * hardware or set by software.
 */
#define RSH_GX9_IO_DISABLE1 0x0b58

#define RSH_GX9_IO_DISABLE1__COMP0_DISABLE_SHIFT 0
#define RSH_GX9_IO_DISABLE1__COMP0_DISABLE_WIDTH 1
#define RSH_GX9_IO_DISABLE1__COMP0_DISABLE_RMASK 0x1
#define RSH_GX9_IO_DISABLE1__COMP0_DISABLE_MASK  0x1
#define RSH_GX9_IO_DISABLE1__COMP0_DISABLE_FIELD 0,0

#define RSH_GX9_IO_DISABLE1__DECOMP0_DISABLE_SHIFT 1
#define RSH_GX9_IO_DISABLE1__DECOMP0_DISABLE_WIDTH 1
#define RSH_GX9_IO_DISABLE1__DECOMP0_DISABLE_RMASK 0x1
#define RSH_GX9_IO_DISABLE1__DECOMP0_DISABLE_MASK  0x2
#define RSH_GX9_IO_DISABLE1__DECOMP0_DISABLE_FIELD 1,1

#define RSH_GX9_IO_DISABLE1__MEM_CPY0_DISABLE_SHIFT 2
#define RSH_GX9_IO_DISABLE1__MEM_CPY0_DISABLE_WIDTH 1
#define RSH_GX9_IO_DISABLE1__MEM_CPY0_DISABLE_RMASK 0x1
#define RSH_GX9_IO_DISABLE1__MEM_CPY0_DISABLE_MASK  0x4
#define RSH_GX9_IO_DISABLE1__MEM_CPY0_DISABLE_FIELD 2,2

#define RSH_GX9_IO_DISABLE1__COMP_INTERFACE0_DISABLE_SHIFT 3
#define RSH_GX9_IO_DISABLE1__COMP_INTERFACE0_DISABLE_WIDTH 1
#define RSH_GX9_IO_DISABLE1__COMP_INTERFACE0_DISABLE_RMASK 0x1
#define RSH_GX9_IO_DISABLE1__COMP_INTERFACE0_DISABLE_MASK  0x8
#define RSH_GX9_IO_DISABLE1__COMP_INTERFACE0_DISABLE_FIELD 3,3

#define RSH_GX9_IO_DISABLE1__COMP1_DISABLE_SHIFT 4
#define RSH_GX9_IO_DISABLE1__COMP1_DISABLE_WIDTH 1
#define RSH_GX9_IO_DISABLE1__COMP1_DISABLE_RMASK 0x1
#define RSH_GX9_IO_DISABLE1__COMP1_DISABLE_MASK  0x10
#define RSH_GX9_IO_DISABLE1__COMP1_DISABLE_FIELD 4,4

#define RSH_GX9_IO_DISABLE1__DECOMP1_DISABLE_SHIFT 5
#define RSH_GX9_IO_DISABLE1__DECOMP1_DISABLE_WIDTH 1
#define RSH_GX9_IO_DISABLE1__DECOMP1_DISABLE_RMASK 0x1
#define RSH_GX9_IO_DISABLE1__DECOMP1_DISABLE_MASK  0x20
#define RSH_GX9_IO_DISABLE1__DECOMP1_DISABLE_FIELD 5,5

#define RSH_GX9_IO_DISABLE1__MEM_CPY1_DISABLE_SHIFT 6
#define RSH_GX9_IO_DISABLE1__MEM_CPY1_DISABLE_WIDTH 1
#define RSH_GX9_IO_DISABLE1__MEM_CPY1_DISABLE_RMASK 0x1
#define RSH_GX9_IO_DISABLE1__MEM_CPY1_DISABLE_MASK  0x40
#define RSH_GX9_IO_DISABLE1__MEM_CPY1_DISABLE_FIELD 6,6

#define RSH_GX9_IO_DISABLE1__COMP_INTERFACE1_DISABLE_SHIFT 7
#define RSH_GX9_IO_DISABLE1__COMP_INTERFACE1_DISABLE_WIDTH 1
#define RSH_GX9_IO_DISABLE1__COMP_INTERFACE1_DISABLE_RMASK 0x1
#define RSH_GX9_IO_DISABLE1__COMP_INTERFACE1_DISABLE_MASK  0x80
#define RSH_GX9_IO_DISABLE1__COMP_INTERFACE1_DISABLE_FIELD 7,7

#define RSH_GX9_IO_DISABLE1__RESERVED_IO_SHIFT 8
#define RSH_GX9_IO_DISABLE1__RESERVED_IO_WIDTH 28
#define RSH_GX9_IO_DISABLE1__RESERVED_IO_RMASK 0xfffffff
#define RSH_GX9_IO_DISABLE1__RESERVED_IO_MASK  _64bit(0xfffffff00)
#define RSH_GX9_IO_DISABLE1__RESERVED_IO_FIELD 8,35


/*
 * MMIO HFH Table Init Control.
 * Initialization control for the hash-for-home tables.
 */
#define RSH_HFH_INIT_CTL 0x0050

#define RSH_HFH_INIT_CTL__IDX_SHIFT 0
#define RSH_HFH_INIT_CTL__IDX_WIDTH 7
#define RSH_HFH_INIT_CTL__IDX_RESET_VAL 0
#define RSH_HFH_INIT_CTL__IDX_RMASK 0x7f
#define RSH_HFH_INIT_CTL__IDX_MASK  0x7f
#define RSH_HFH_INIT_CTL__IDX_FIELD 0,6


/*
 * HFH Table Data.
 * Read/Write data for hash-for-home table
 */
#define RSH_HFH_INIT_DAT 0x0058

#define RSH_HFH_INIT_DAT__FRACT_SHIFT 0
#define RSH_HFH_INIT_DAT__FRACT_WIDTH 7
#define RSH_HFH_INIT_DAT__FRACT_RMASK 0x7f
#define RSH_HFH_INIT_DAT__FRACT_MASK  0x7f
#define RSH_HFH_INIT_DAT__FRACT_FIELD 0,6

#define RSH_HFH_INIT_DAT__TILEB_SHIFT 7
#define RSH_HFH_INIT_DAT__TILEB_WIDTH 8
#define RSH_HFH_INIT_DAT__TILEB_RMASK 0xff
#define RSH_HFH_INIT_DAT__TILEB_MASK  0x7f80
#define RSH_HFH_INIT_DAT__TILEB_FIELD 7,14

#define RSH_HFH_INIT_DAT__TILEA_SHIFT 15
#define RSH_HFH_INIT_DAT__TILEA_WIDTH 8
#define RSH_HFH_INIT_DAT__TILEA_RMASK 0xff
#define RSH_HFH_INIT_DAT__TILEA_MASK  0x7f8000
#define RSH_HFH_INIT_DAT__TILEA_FIELD 15,22


/*
 * Bindings for interrupt vectors.
 * This register provides read/write access to all of the interrupt bindings
 * for the rshim.  The VEC_SEL field is used to select the vector being
 * configured and the BIND_SEL selects the interrupt within the vector.  To
 * read a binding, first write the VEC_SEL and BIND_SEL fields along with a 1
 * in the NW field.  Then read back the register.
 */
#define RSH_INT_BIND 0x0300

#define RSH_INT_BIND__ENABLE_SHIFT 0
#define RSH_INT_BIND__ENABLE_WIDTH 1
#define RSH_INT_BIND__ENABLE_RESET_VAL 0
#define RSH_INT_BIND__ENABLE_RMASK 0x1
#define RSH_INT_BIND__ENABLE_MASK  0x1
#define RSH_INT_BIND__ENABLE_FIELD 0,0

#define RSH_INT_BIND__MODE_SHIFT 1
#define RSH_INT_BIND__MODE_WIDTH 1
#define RSH_INT_BIND__MODE_RESET_VAL 0
#define RSH_INT_BIND__MODE_RMASK 0x1
#define RSH_INT_BIND__MODE_MASK  0x2
#define RSH_INT_BIND__MODE_FIELD 1,1

#define RSH_INT_BIND__TILEID_SHIFT 2
#define RSH_INT_BIND__TILEID_WIDTH 8
#define RSH_INT_BIND__TILEID_RMASK 0xff
#define RSH_INT_BIND__TILEID_MASK  0x3fc
#define RSH_INT_BIND__TILEID_FIELD 2,9

#define RSH_INT_BIND__INT_NUM_SHIFT 10
#define RSH_INT_BIND__INT_NUM_WIDTH 2
#define RSH_INT_BIND__INT_NUM_RMASK 0x3
#define RSH_INT_BIND__INT_NUM_MASK  0xc00
#define RSH_INT_BIND__INT_NUM_FIELD 10,11

#define RSH_INT_BIND__EVT_NUM_SHIFT 12
#define RSH_INT_BIND__EVT_NUM_WIDTH 5
#define RSH_INT_BIND__EVT_NUM_RMASK 0x1f
#define RSH_INT_BIND__EVT_NUM_MASK  0x1f000
#define RSH_INT_BIND__EVT_NUM_FIELD 12,16

#define RSH_INT_BIND__DEV_SEL_SHIFT 32
#define RSH_INT_BIND__DEV_SEL_WIDTH 4
#define RSH_INT_BIND__DEV_SEL_RMASK 0xf
#define RSH_INT_BIND__DEV_SEL_MASK  _64bit(0xf00000000)
#define RSH_INT_BIND__DEV_SEL_FIELD 32,35
#define RSH_INT_BIND__DEV_SEL_VAL_CH0 0x0
#define RSH_INT_BIND__DEV_SEL_VAL_UART0 0x1
#define RSH_INT_BIND__DEV_SEL_VAL_UART1 0x2
#define RSH_INT_BIND__DEV_SEL_VAL_I2CM0 0x3
#define RSH_INT_BIND__DEV_SEL_VAL_I2CM1 0x4
#define RSH_INT_BIND__DEV_SEL_VAL_I2CM2 0x5
#define RSH_INT_BIND__DEV_SEL_VAL_I2CS 0x6
#define RSH_INT_BIND__DEV_SEL_VAL_SPI 0x7
#define RSH_INT_BIND__DEV_SEL_VAL_RSVD7 0x8
#define RSH_INT_BIND__DEV_SEL_VAL_RSVD8 0x9
#define RSH_INT_BIND__DEV_SEL_VAL_RSVD9 0xa
#define RSH_INT_BIND__DEV_SEL_VAL_RSVD10 0xb
#define RSH_INT_BIND__DEV_SEL_VAL_RSVD11 0xc
#define RSH_INT_BIND__DEV_SEL_VAL_RSVD12 0xd
#define RSH_INT_BIND__DEV_SEL_VAL_RSVD13 0xe
#define RSH_INT_BIND__DEV_SEL_VAL_RSVD14 0xf

#define RSH_INT_BIND__BIND_SEL_SHIFT 40
#define RSH_INT_BIND__BIND_SEL_WIDTH 5
#define RSH_INT_BIND__BIND_SEL_RMASK 0x1f
#define RSH_INT_BIND__BIND_SEL_MASK  _64bit(0x1f0000000000)
#define RSH_INT_BIND__BIND_SEL_FIELD 40,44
#define RSH_INT_BIND__BIND_SEL_VAL_SWINT0 0x0
#define RSH_INT_BIND__BIND_SEL_VAL_SWINT1 0x1
#define RSH_INT_BIND__BIND_SEL_VAL_SWINT2 0x2
#define RSH_INT_BIND__BIND_SEL_VAL_SWINT3 0x3
#define RSH_INT_BIND__BIND_SEL_VAL_DEV_PROT 0x4
#define RSH_INT_BIND__BIND_SEL_VAL_MMIO_ERR 0x5
#define RSH_INT_BIND__BIND_SEL_VAL_DCNT0 0x6
#define RSH_INT_BIND__BIND_SEL_VAL_DCNT1 0x7
#define RSH_INT_BIND__BIND_SEL_VAL_DCNT2 0x8
#define RSH_INT_BIND__BIND_SEL_VAL_TM_HTT_LWM 0x9
#define RSH_INT_BIND__BIND_SEL_VAL_TM_HTT_HWM 0xa
#define RSH_INT_BIND__BIND_SEL_VAL_TM_TTH_LWM 0xb
#define RSH_INT_BIND__BIND_SEL_VAL_TM_TTH_HWM 0xc
#define RSH_INT_BIND__BIND_SEL_VAL_TM_HTT_RERR 0xd
#define RSH_INT_BIND__BIND_SEL_VAL_TM_HTT_WERR 0xe
#define RSH_INT_BIND__BIND_SEL_VAL_TM_TTH_RERR 0xf
#define RSH_INT_BIND__BIND_SEL_VAL_TM_TTH_WERR 0x10
#define RSH_INT_BIND__BIND_SEL_VAL_DIAG_BCST0 0x11
#define RSH_INT_BIND__BIND_SEL_VAL_DIAG_BCST1 0x12
#define RSH_INT_BIND__BIND_SEL_VAL_DIAG_BCST2 0x13
#define RSH_INT_BIND__BIND_SEL_VAL_DIAG_BCST3 0x14
#define RSH_INT_BIND__BIND_SEL_VAL_CFG_PROT_VIOL 0x15
#define RSH_INT_BIND__BIND_SEL_VAL_PWR_ALARM 0x16
#define RSH_INT_BIND__BIND_SEL_VAL_PWR_HIGH 0x17

#define RSH_INT_BIND__NW_SHIFT 48
#define RSH_INT_BIND__NW_WIDTH 1
#define RSH_INT_BIND__NW_RESET_VAL 0
#define RSH_INT_BIND__NW_RMASK 0x1
#define RSH_INT_BIND__NW_MASK  _64bit(0x1000000000000)
#define RSH_INT_BIND__NW_FIELD 48,48


/*
 * Interrupt vector-0, read-to-clear.
 * Interrupt status vector with read-to-clear functionality.  Provides access
 * to the same status bits that are visible in INT_VEC0_W1TC.  Reading this
 * register clears all of the associated interrupts.
 *
 * This vector contains the following interrupts:
 *
 * 0: SWINT0
 * 1: SWINT1
 * 2: SWINT2
 * 3: SWINT3
 * 4: DEV_PROT
 * 5: MMIO_ERR
 * 6: DCNT0
 * 7: DCNT1
 * 8: DCNT2
 * 9: TM_HTT_LWM
 * 10: TM_HTT_HWM
 * 11: TM_TTH_LWM
 * 12: TM_TTH_HWM
 * 13: TM_HTT_RERR
 * 14: TM_HTT_WERR
 * 15: TM_TTH_RERR
 * 16: TM_TTH_WERR
 * 17: DIAG_BCST0
 * 18: DIAG_BCST1
 * 19: DIAG_BCST2
 * 20: DIAG_BCST3
 * 21: CFG_PROT_VIOL
 * 22: PWR_ALARM
 * 23: PWR_HIGH
 */
#define RSH_INT_VEC0_RTC 0x0310

#define RSH_INT_VEC0_RTC__SWINT0_SHIFT 0
#define RSH_INT_VEC0_RTC__SWINT0_WIDTH 1
#define RSH_INT_VEC0_RTC__SWINT0_RESET_VAL 0
#define RSH_INT_VEC0_RTC__SWINT0_RMASK 0x1
#define RSH_INT_VEC0_RTC__SWINT0_MASK  0x1
#define RSH_INT_VEC0_RTC__SWINT0_FIELD 0,0

#define RSH_INT_VEC0_RTC__SWINT1_SHIFT 1
#define RSH_INT_VEC0_RTC__SWINT1_WIDTH 1
#define RSH_INT_VEC0_RTC__SWINT1_RESET_VAL 0
#define RSH_INT_VEC0_RTC__SWINT1_RMASK 0x1
#define RSH_INT_VEC0_RTC__SWINT1_MASK  0x2
#define RSH_INT_VEC0_RTC__SWINT1_FIELD 1,1

#define RSH_INT_VEC0_RTC__SWINT2_SHIFT 2
#define RSH_INT_VEC0_RTC__SWINT2_WIDTH 1
#define RSH_INT_VEC0_RTC__SWINT2_RESET_VAL 0
#define RSH_INT_VEC0_RTC__SWINT2_RMASK 0x1
#define RSH_INT_VEC0_RTC__SWINT2_MASK  0x4
#define RSH_INT_VEC0_RTC__SWINT2_FIELD 2,2

#define RSH_INT_VEC0_RTC__SWINT3_SHIFT 3
#define RSH_INT_VEC0_RTC__SWINT3_WIDTH 1
#define RSH_INT_VEC0_RTC__SWINT3_RESET_VAL 0
#define RSH_INT_VEC0_RTC__SWINT3_RMASK 0x1
#define RSH_INT_VEC0_RTC__SWINT3_MASK  0x8
#define RSH_INT_VEC0_RTC__SWINT3_FIELD 3,3

#define RSH_INT_VEC0_RTC__DEV_PROT_SHIFT 4
#define RSH_INT_VEC0_RTC__DEV_PROT_WIDTH 1
#define RSH_INT_VEC0_RTC__DEV_PROT_RESET_VAL 0
#define RSH_INT_VEC0_RTC__DEV_PROT_RMASK 0x1
#define RSH_INT_VEC0_RTC__DEV_PROT_MASK  0x10
#define RSH_INT_VEC0_RTC__DEV_PROT_FIELD 4,4

#define RSH_INT_VEC0_RTC__MMIO_ERR_SHIFT 5
#define RSH_INT_VEC0_RTC__MMIO_ERR_WIDTH 1
#define RSH_INT_VEC0_RTC__MMIO_ERR_RESET_VAL 0
#define RSH_INT_VEC0_RTC__MMIO_ERR_RMASK 0x1
#define RSH_INT_VEC0_RTC__MMIO_ERR_MASK  0x20
#define RSH_INT_VEC0_RTC__MMIO_ERR_FIELD 5,5

#define RSH_INT_VEC0_RTC__DCNT0_SHIFT 6
#define RSH_INT_VEC0_RTC__DCNT0_WIDTH 1
#define RSH_INT_VEC0_RTC__DCNT0_RESET_VAL 0
#define RSH_INT_VEC0_RTC__DCNT0_RMASK 0x1
#define RSH_INT_VEC0_RTC__DCNT0_MASK  0x40
#define RSH_INT_VEC0_RTC__DCNT0_FIELD 6,6

#define RSH_INT_VEC0_RTC__DCNT1_SHIFT 7
#define RSH_INT_VEC0_RTC__DCNT1_WIDTH 1
#define RSH_INT_VEC0_RTC__DCNT1_RESET_VAL 0
#define RSH_INT_VEC0_RTC__DCNT1_RMASK 0x1
#define RSH_INT_VEC0_RTC__DCNT1_MASK  0x80
#define RSH_INT_VEC0_RTC__DCNT1_FIELD 7,7

#define RSH_INT_VEC0_RTC__DCNT2_SHIFT 8
#define RSH_INT_VEC0_RTC__DCNT2_WIDTH 1
#define RSH_INT_VEC0_RTC__DCNT2_RESET_VAL 0
#define RSH_INT_VEC0_RTC__DCNT2_RMASK 0x1
#define RSH_INT_VEC0_RTC__DCNT2_MASK  0x100
#define RSH_INT_VEC0_RTC__DCNT2_FIELD 8,8

#define RSH_INT_VEC0_RTC__TM_HTT_LWM_SHIFT 9
#define RSH_INT_VEC0_RTC__TM_HTT_LWM_WIDTH 1
#define RSH_INT_VEC0_RTC__TM_HTT_LWM_RESET_VAL 0
#define RSH_INT_VEC0_RTC__TM_HTT_LWM_RMASK 0x1
#define RSH_INT_VEC0_RTC__TM_HTT_LWM_MASK  0x200
#define RSH_INT_VEC0_RTC__TM_HTT_LWM_FIELD 9,9

#define RSH_INT_VEC0_RTC__TM_HTT_HWM_SHIFT 10
#define RSH_INT_VEC0_RTC__TM_HTT_HWM_WIDTH 1
#define RSH_INT_VEC0_RTC__TM_HTT_HWM_RESET_VAL 0
#define RSH_INT_VEC0_RTC__TM_HTT_HWM_RMASK 0x1
#define RSH_INT_VEC0_RTC__TM_HTT_HWM_MASK  0x400
#define RSH_INT_VEC0_RTC__TM_HTT_HWM_FIELD 10,10

#define RSH_INT_VEC0_RTC__TM_TTH_LWM_SHIFT 11
#define RSH_INT_VEC0_RTC__TM_TTH_LWM_WIDTH 1
#define RSH_INT_VEC0_RTC__TM_TTH_LWM_RESET_VAL 0
#define RSH_INT_VEC0_RTC__TM_TTH_LWM_RMASK 0x1
#define RSH_INT_VEC0_RTC__TM_TTH_LWM_MASK  0x800
#define RSH_INT_VEC0_RTC__TM_TTH_LWM_FIELD 11,11

#define RSH_INT_VEC0_RTC__TM_TTH_HWM_SHIFT 12
#define RSH_INT_VEC0_RTC__TM_TTH_HWM_WIDTH 1
#define RSH_INT_VEC0_RTC__TM_TTH_HWM_RESET_VAL 0
#define RSH_INT_VEC0_RTC__TM_TTH_HWM_RMASK 0x1
#define RSH_INT_VEC0_RTC__TM_TTH_HWM_MASK  0x1000
#define RSH_INT_VEC0_RTC__TM_TTH_HWM_FIELD 12,12

#define RSH_INT_VEC0_RTC__TM_HTT_RERR_SHIFT 13
#define RSH_INT_VEC0_RTC__TM_HTT_RERR_WIDTH 1
#define RSH_INT_VEC0_RTC__TM_HTT_RERR_RESET_VAL 0
#define RSH_INT_VEC0_RTC__TM_HTT_RERR_RMASK 0x1
#define RSH_INT_VEC0_RTC__TM_HTT_RERR_MASK  0x2000
#define RSH_INT_VEC0_RTC__TM_HTT_RERR_FIELD 13,13

#define RSH_INT_VEC0_RTC__TM_HTT_WERR_SHIFT 14
#define RSH_INT_VEC0_RTC__TM_HTT_WERR_WIDTH 1
#define RSH_INT_VEC0_RTC__TM_HTT_WERR_RESET_VAL 0
#define RSH_INT_VEC0_RTC__TM_HTT_WERR_RMASK 0x1
#define RSH_INT_VEC0_RTC__TM_HTT_WERR_MASK  0x4000
#define RSH_INT_VEC0_RTC__TM_HTT_WERR_FIELD 14,14

#define RSH_INT_VEC0_RTC__TM_TTH_RERR_SHIFT 15
#define RSH_INT_VEC0_RTC__TM_TTH_RERR_WIDTH 1
#define RSH_INT_VEC0_RTC__TM_TTH_RERR_RESET_VAL 0
#define RSH_INT_VEC0_RTC__TM_TTH_RERR_RMASK 0x1
#define RSH_INT_VEC0_RTC__TM_TTH_RERR_MASK  0x8000
#define RSH_INT_VEC0_RTC__TM_TTH_RERR_FIELD 15,15

#define RSH_INT_VEC0_RTC__TM_TTH_WERR_SHIFT 16
#define RSH_INT_VEC0_RTC__TM_TTH_WERR_WIDTH 1
#define RSH_INT_VEC0_RTC__TM_TTH_WERR_RESET_VAL 0
#define RSH_INT_VEC0_RTC__TM_TTH_WERR_RMASK 0x1
#define RSH_INT_VEC0_RTC__TM_TTH_WERR_MASK  0x10000
#define RSH_INT_VEC0_RTC__TM_TTH_WERR_FIELD 16,16

#define RSH_INT_VEC0_RTC__DIAG_BCST0_SHIFT 17
#define RSH_INT_VEC0_RTC__DIAG_BCST0_WIDTH 1
#define RSH_INT_VEC0_RTC__DIAG_BCST0_RESET_VAL 0
#define RSH_INT_VEC0_RTC__DIAG_BCST0_RMASK 0x1
#define RSH_INT_VEC0_RTC__DIAG_BCST0_MASK  0x20000
#define RSH_INT_VEC0_RTC__DIAG_BCST0_FIELD 17,17

#define RSH_INT_VEC0_RTC__DIAG_BCST1_SHIFT 18
#define RSH_INT_VEC0_RTC__DIAG_BCST1_WIDTH 1
#define RSH_INT_VEC0_RTC__DIAG_BCST1_RESET_VAL 0
#define RSH_INT_VEC0_RTC__DIAG_BCST1_RMASK 0x1
#define RSH_INT_VEC0_RTC__DIAG_BCST1_MASK  0x40000
#define RSH_INT_VEC0_RTC__DIAG_BCST1_FIELD 18,18

#define RSH_INT_VEC0_RTC__DIAG_BCST2_SHIFT 19
#define RSH_INT_VEC0_RTC__DIAG_BCST2_WIDTH 1
#define RSH_INT_VEC0_RTC__DIAG_BCST2_RESET_VAL 0
#define RSH_INT_VEC0_RTC__DIAG_BCST2_RMASK 0x1
#define RSH_INT_VEC0_RTC__DIAG_BCST2_MASK  0x80000
#define RSH_INT_VEC0_RTC__DIAG_BCST2_FIELD 19,19

#define RSH_INT_VEC0_RTC__DIAG_BCST3_SHIFT 20
#define RSH_INT_VEC0_RTC__DIAG_BCST3_WIDTH 1
#define RSH_INT_VEC0_RTC__DIAG_BCST3_RESET_VAL 0
#define RSH_INT_VEC0_RTC__DIAG_BCST3_RMASK 0x1
#define RSH_INT_VEC0_RTC__DIAG_BCST3_MASK  0x100000
#define RSH_INT_VEC0_RTC__DIAG_BCST3_FIELD 20,20

#define RSH_INT_VEC0_RTC__CFG_PROT_VIOL_SHIFT 21
#define RSH_INT_VEC0_RTC__CFG_PROT_VIOL_WIDTH 1
#define RSH_INT_VEC0_RTC__CFG_PROT_VIOL_RESET_VAL 0
#define RSH_INT_VEC0_RTC__CFG_PROT_VIOL_RMASK 0x1
#define RSH_INT_VEC0_RTC__CFG_PROT_VIOL_MASK  0x200000
#define RSH_INT_VEC0_RTC__CFG_PROT_VIOL_FIELD 21,21


/*
 * Interrupt vector-0, write-one-to-clear.
 * Interrupt status vector with write-one-to-clear functionality.  Provides
 * access to the same status bits that are visible in INT_VEC0_RTC.  Writing
 * a 1 clears the status bit.
 *
 * This vector contains the following interrupts:
 *
 * 0: SWINT0
 * 1: SWINT1
 * 2: SWINT2
 * 3: SWINT3
 * 4: DEV_PROT
 * 5: MMIO_ERR
 * 6: DCNT0
 * 7: DCNT1
 * 8: DCNT2
 * 9: TM_HTT_LWM
 * 10: TM_HTT_HWM
 * 11: TM_TTH_LWM
 * 12: TM_TTH_HWM
 * 13: TM_HTT_RERR
 * 14: TM_HTT_WERR
 * 15: TM_TTH_RERR
 * 16: TM_TTH_WERR
 * 17: DIAG_BCST0
 * 18: DIAG_BCST1
 * 19: DIAG_BCST2
 * 20: DIAG_BCST3
 * 21: CFG_PROT_VIOL
 * 22: PWR_ALARM
 * 23: PWR_HIGH
 */
#define RSH_INT_VEC0_W1TC 0x0308

#define RSH_INT_VEC0_W1TC__SWINT0_SHIFT 0
#define RSH_INT_VEC0_W1TC__SWINT0_WIDTH 1
#define RSH_INT_VEC0_W1TC__SWINT0_RESET_VAL 0
#define RSH_INT_VEC0_W1TC__SWINT0_RMASK 0x1
#define RSH_INT_VEC0_W1TC__SWINT0_MASK  0x1
#define RSH_INT_VEC0_W1TC__SWINT0_FIELD 0,0

#define RSH_INT_VEC0_W1TC__SWINT1_SHIFT 1
#define RSH_INT_VEC0_W1TC__SWINT1_WIDTH 1
#define RSH_INT_VEC0_W1TC__SWINT1_RESET_VAL 0
#define RSH_INT_VEC0_W1TC__SWINT1_RMASK 0x1
#define RSH_INT_VEC0_W1TC__SWINT1_MASK  0x2
#define RSH_INT_VEC0_W1TC__SWINT1_FIELD 1,1

#define RSH_INT_VEC0_W1TC__SWINT2_SHIFT 2
#define RSH_INT_VEC0_W1TC__SWINT2_WIDTH 1
#define RSH_INT_VEC0_W1TC__SWINT2_RESET_VAL 0
#define RSH_INT_VEC0_W1TC__SWINT2_RMASK 0x1
#define RSH_INT_VEC0_W1TC__SWINT2_MASK  0x4
#define RSH_INT_VEC0_W1TC__SWINT2_FIELD 2,2

#define RSH_INT_VEC0_W1TC__SWINT3_SHIFT 3
#define RSH_INT_VEC0_W1TC__SWINT3_WIDTH 1
#define RSH_INT_VEC0_W1TC__SWINT3_RESET_VAL 0
#define RSH_INT_VEC0_W1TC__SWINT3_RMASK 0x1
#define RSH_INT_VEC0_W1TC__SWINT3_MASK  0x8
#define RSH_INT_VEC0_W1TC__SWINT3_FIELD 3,3

#define RSH_INT_VEC0_W1TC__DEV_PROT_SHIFT 4
#define RSH_INT_VEC0_W1TC__DEV_PROT_WIDTH 1
#define RSH_INT_VEC0_W1TC__DEV_PROT_RESET_VAL 0
#define RSH_INT_VEC0_W1TC__DEV_PROT_RMASK 0x1
#define RSH_INT_VEC0_W1TC__DEV_PROT_MASK  0x10
#define RSH_INT_VEC0_W1TC__DEV_PROT_FIELD 4,4

#define RSH_INT_VEC0_W1TC__MMIO_ERR_SHIFT 5
#define RSH_INT_VEC0_W1TC__MMIO_ERR_WIDTH 1
#define RSH_INT_VEC0_W1TC__MMIO_ERR_RESET_VAL 0
#define RSH_INT_VEC0_W1TC__MMIO_ERR_RMASK 0x1
#define RSH_INT_VEC0_W1TC__MMIO_ERR_MASK  0x20
#define RSH_INT_VEC0_W1TC__MMIO_ERR_FIELD 5,5

#define RSH_INT_VEC0_W1TC__DCNT0_SHIFT 6
#define RSH_INT_VEC0_W1TC__DCNT0_WIDTH 1
#define RSH_INT_VEC0_W1TC__DCNT0_RESET_VAL 0
#define RSH_INT_VEC0_W1TC__DCNT0_RMASK 0x1
#define RSH_INT_VEC0_W1TC__DCNT0_MASK  0x40
#define RSH_INT_VEC0_W1TC__DCNT0_FIELD 6,6

#define RSH_INT_VEC0_W1TC__DCNT1_SHIFT 7
#define RSH_INT_VEC0_W1TC__DCNT1_WIDTH 1
#define RSH_INT_VEC0_W1TC__DCNT1_RESET_VAL 0
#define RSH_INT_VEC0_W1TC__DCNT1_RMASK 0x1
#define RSH_INT_VEC0_W1TC__DCNT1_MASK  0x80
#define RSH_INT_VEC0_W1TC__DCNT1_FIELD 7,7

#define RSH_INT_VEC0_W1TC__DCNT2_SHIFT 8
#define RSH_INT_VEC0_W1TC__DCNT2_WIDTH 1
#define RSH_INT_VEC0_W1TC__DCNT2_RESET_VAL 0
#define RSH_INT_VEC0_W1TC__DCNT2_RMASK 0x1
#define RSH_INT_VEC0_W1TC__DCNT2_MASK  0x100
#define RSH_INT_VEC0_W1TC__DCNT2_FIELD 8,8

#define RSH_INT_VEC0_W1TC__TM_HTT_LWM_SHIFT 9
#define RSH_INT_VEC0_W1TC__TM_HTT_LWM_WIDTH 1
#define RSH_INT_VEC0_W1TC__TM_HTT_LWM_RESET_VAL 0
#define RSH_INT_VEC0_W1TC__TM_HTT_LWM_RMASK 0x1
#define RSH_INT_VEC0_W1TC__TM_HTT_LWM_MASK  0x200
#define RSH_INT_VEC0_W1TC__TM_HTT_LWM_FIELD 9,9

#define RSH_INT_VEC0_W1TC__TM_HTT_HWM_SHIFT 10
#define RSH_INT_VEC0_W1TC__TM_HTT_HWM_WIDTH 1
#define RSH_INT_VEC0_W1TC__TM_HTT_HWM_RESET_VAL 0
#define RSH_INT_VEC0_W1TC__TM_HTT_HWM_RMASK 0x1
#define RSH_INT_VEC0_W1TC__TM_HTT_HWM_MASK  0x400
#define RSH_INT_VEC0_W1TC__TM_HTT_HWM_FIELD 10,10

#define RSH_INT_VEC0_W1TC__TM_TTH_LWM_SHIFT 11
#define RSH_INT_VEC0_W1TC__TM_TTH_LWM_WIDTH 1
#define RSH_INT_VEC0_W1TC__TM_TTH_LWM_RESET_VAL 0
#define RSH_INT_VEC0_W1TC__TM_TTH_LWM_RMASK 0x1
#define RSH_INT_VEC0_W1TC__TM_TTH_LWM_MASK  0x800
#define RSH_INT_VEC0_W1TC__TM_TTH_LWM_FIELD 11,11

#define RSH_INT_VEC0_W1TC__TM_TTH_HWM_SHIFT 12
#define RSH_INT_VEC0_W1TC__TM_TTH_HWM_WIDTH 1
#define RSH_INT_VEC0_W1TC__TM_TTH_HWM_RESET_VAL 0
#define RSH_INT_VEC0_W1TC__TM_TTH_HWM_RMASK 0x1
#define RSH_INT_VEC0_W1TC__TM_TTH_HWM_MASK  0x1000
#define RSH_INT_VEC0_W1TC__TM_TTH_HWM_FIELD 12,12

#define RSH_INT_VEC0_W1TC__TM_HTT_RERR_SHIFT 13
#define RSH_INT_VEC0_W1TC__TM_HTT_RERR_WIDTH 1
#define RSH_INT_VEC0_W1TC__TM_HTT_RERR_RESET_VAL 0
#define RSH_INT_VEC0_W1TC__TM_HTT_RERR_RMASK 0x1
#define RSH_INT_VEC0_W1TC__TM_HTT_RERR_MASK  0x2000
#define RSH_INT_VEC0_W1TC__TM_HTT_RERR_FIELD 13,13

#define RSH_INT_VEC0_W1TC__TM_HTT_WERR_SHIFT 14
#define RSH_INT_VEC0_W1TC__TM_HTT_WERR_WIDTH 1
#define RSH_INT_VEC0_W1TC__TM_HTT_WERR_RESET_VAL 0
#define RSH_INT_VEC0_W1TC__TM_HTT_WERR_RMASK 0x1
#define RSH_INT_VEC0_W1TC__TM_HTT_WERR_MASK  0x4000
#define RSH_INT_VEC0_W1TC__TM_HTT_WERR_FIELD 14,14

#define RSH_INT_VEC0_W1TC__TM_TTH_RERR_SHIFT 15
#define RSH_INT_VEC0_W1TC__TM_TTH_RERR_WIDTH 1
#define RSH_INT_VEC0_W1TC__TM_TTH_RERR_RESET_VAL 0
#define RSH_INT_VEC0_W1TC__TM_TTH_RERR_RMASK 0x1
#define RSH_INT_VEC0_W1TC__TM_TTH_RERR_MASK  0x8000
#define RSH_INT_VEC0_W1TC__TM_TTH_RERR_FIELD 15,15

#define RSH_INT_VEC0_W1TC__TM_TTH_WERR_SHIFT 16
#define RSH_INT_VEC0_W1TC__TM_TTH_WERR_WIDTH 1
#define RSH_INT_VEC0_W1TC__TM_TTH_WERR_RESET_VAL 0
#define RSH_INT_VEC0_W1TC__TM_TTH_WERR_RMASK 0x1
#define RSH_INT_VEC0_W1TC__TM_TTH_WERR_MASK  0x10000
#define RSH_INT_VEC0_W1TC__TM_TTH_WERR_FIELD 16,16

#define RSH_INT_VEC0_W1TC__DIAG_BCST0_SHIFT 17
#define RSH_INT_VEC0_W1TC__DIAG_BCST0_WIDTH 1
#define RSH_INT_VEC0_W1TC__DIAG_BCST0_RESET_VAL 0
#define RSH_INT_VEC0_W1TC__DIAG_BCST0_RMASK 0x1
#define RSH_INT_VEC0_W1TC__DIAG_BCST0_MASK  0x20000
#define RSH_INT_VEC0_W1TC__DIAG_BCST0_FIELD 17,17

#define RSH_INT_VEC0_W1TC__DIAG_BCST1_SHIFT 18
#define RSH_INT_VEC0_W1TC__DIAG_BCST1_WIDTH 1
#define RSH_INT_VEC0_W1TC__DIAG_BCST1_RESET_VAL 0
#define RSH_INT_VEC0_W1TC__DIAG_BCST1_RMASK 0x1
#define RSH_INT_VEC0_W1TC__DIAG_BCST1_MASK  0x40000
#define RSH_INT_VEC0_W1TC__DIAG_BCST1_FIELD 18,18

#define RSH_INT_VEC0_W1TC__DIAG_BCST2_SHIFT 19
#define RSH_INT_VEC0_W1TC__DIAG_BCST2_WIDTH 1
#define RSH_INT_VEC0_W1TC__DIAG_BCST2_RESET_VAL 0
#define RSH_INT_VEC0_W1TC__DIAG_BCST2_RMASK 0x1
#define RSH_INT_VEC0_W1TC__DIAG_BCST2_MASK  0x80000
#define RSH_INT_VEC0_W1TC__DIAG_BCST2_FIELD 19,19

#define RSH_INT_VEC0_W1TC__DIAG_BCST3_SHIFT 20
#define RSH_INT_VEC0_W1TC__DIAG_BCST3_WIDTH 1
#define RSH_INT_VEC0_W1TC__DIAG_BCST3_RESET_VAL 0
#define RSH_INT_VEC0_W1TC__DIAG_BCST3_RMASK 0x1
#define RSH_INT_VEC0_W1TC__DIAG_BCST3_MASK  0x100000
#define RSH_INT_VEC0_W1TC__DIAG_BCST3_FIELD 20,20

#define RSH_INT_VEC0_W1TC__CFG_PROT_VIOL_SHIFT 21
#define RSH_INT_VEC0_W1TC__CFG_PROT_VIOL_WIDTH 1
#define RSH_INT_VEC0_W1TC__CFG_PROT_VIOL_RESET_VAL 0
#define RSH_INT_VEC0_W1TC__CFG_PROT_VIOL_RMASK 0x1
#define RSH_INT_VEC0_W1TC__CFG_PROT_VIOL_MASK  0x200000
#define RSH_INT_VEC0_W1TC__CFG_PROT_VIOL_FIELD 21,21


/*
 * IO Reset.
 * Each bit corresponds to a device or function within a device.  When
 * written with a 1, the associated device or function will be reset.
 * Software is responsible for any quiesce procedures required for the
 * associated device prior to reset.
 */
#define RSH_IO_RESET 0x0520

#define RSH_IO_RESET__VAL_SHIFT 0
#define RSH_IO_RESET__VAL_WIDTH 64
#define RSH_IO_RESET__VAL_RESET_VAL 0
#define RSH_IO_RESET__VAL_RMASK _64bit(0xffffffffffffffff)
#define RSH_IO_RESET__VAL_MASK  _64bit(0xffffffffffffffff)
#define RSH_IO_RESET__VAL_FIELD 0,63


/*
 * IPI Location.
 * Indicates the location(s) of IPI controllers in the fabric. When set to
 * 0xff, there is no associated IPI controller.
 */
#define RSH_IPI_LOC 0x0118

#define RSH_IPI_LOC__Y0_SHIFT 0
#define RSH_IPI_LOC__Y0_WIDTH 4
#define RSH_IPI_LOC__Y0_RMASK 0xf
#define RSH_IPI_LOC__Y0_MASK  0xf
#define RSH_IPI_LOC__Y0_FIELD 0,3

#define RSH_IPI_LOC__X0_SHIFT 4
#define RSH_IPI_LOC__X0_WIDTH 4
#define RSH_IPI_LOC__X0_RMASK 0xf
#define RSH_IPI_LOC__X0_MASK  0xf0
#define RSH_IPI_LOC__X0_FIELD 4,7

#define RSH_IPI_LOC__Y1_SHIFT 8
#define RSH_IPI_LOC__Y1_WIDTH 4
#define RSH_IPI_LOC__Y1_RMASK 0xf
#define RSH_IPI_LOC__Y1_MASK  0xf00
#define RSH_IPI_LOC__Y1_FIELD 8,11

#define RSH_IPI_LOC__X1_SHIFT 12
#define RSH_IPI_LOC__X1_WIDTH 4
#define RSH_IPI_LOC__X1_RMASK 0xf
#define RSH_IPI_LOC__X1_MASK  0xf000
#define RSH_IPI_LOC__X1_FIELD 12,15

#define RSH_IPI_LOC__Y2_SHIFT 16
#define RSH_IPI_LOC__Y2_WIDTH 4
#define RSH_IPI_LOC__Y2_RMASK 0xf
#define RSH_IPI_LOC__Y2_MASK  0xf0000
#define RSH_IPI_LOC__Y2_FIELD 16,19

#define RSH_IPI_LOC__X2_SHIFT 20
#define RSH_IPI_LOC__X2_WIDTH 4
#define RSH_IPI_LOC__X2_RMASK 0xf
#define RSH_IPI_LOC__X2_MASK  0xf00000
#define RSH_IPI_LOC__X2_FIELD 20,23

#define RSH_IPI_LOC__Y3_SHIFT 24
#define RSH_IPI_LOC__Y3_WIDTH 4
#define RSH_IPI_LOC__Y3_RMASK 0xf
#define RSH_IPI_LOC__Y3_MASK  0xf000000
#define RSH_IPI_LOC__Y3_FIELD 24,27

#define RSH_IPI_LOC__X3_SHIFT 28
#define RSH_IPI_LOC__X3_WIDTH 4
#define RSH_IPI_LOC__X3_RMASK 0xf
#define RSH_IPI_LOC__X3_MASK  0xf0000000
#define RSH_IPI_LOC__X3_FIELD 28,31

#define RSH_IPI_LOC__Y4_SHIFT 32
#define RSH_IPI_LOC__Y4_WIDTH 4
#define RSH_IPI_LOC__Y4_RMASK 0xf
#define RSH_IPI_LOC__Y4_MASK  _64bit(0xf00000000)
#define RSH_IPI_LOC__Y4_FIELD 32,35

#define RSH_IPI_LOC__X4_SHIFT 36
#define RSH_IPI_LOC__X4_WIDTH 4
#define RSH_IPI_LOC__X4_RMASK 0xf
#define RSH_IPI_LOC__X4_MASK  _64bit(0xf000000000)
#define RSH_IPI_LOC__X4_FIELD 36,39

#define RSH_IPI_LOC__Y5_SHIFT 40
#define RSH_IPI_LOC__Y5_WIDTH 4
#define RSH_IPI_LOC__Y5_RMASK 0xf
#define RSH_IPI_LOC__Y5_MASK  _64bit(0xf0000000000)
#define RSH_IPI_LOC__Y5_FIELD 40,43

#define RSH_IPI_LOC__X5_SHIFT 44
#define RSH_IPI_LOC__X5_WIDTH 4
#define RSH_IPI_LOC__X5_RMASK 0xf
#define RSH_IPI_LOC__X5_MASK  _64bit(0xf00000000000)
#define RSH_IPI_LOC__X5_FIELD 44,47

#define RSH_IPI_LOC__Y6_SHIFT 48
#define RSH_IPI_LOC__Y6_WIDTH 4
#define RSH_IPI_LOC__Y6_RMASK 0xf
#define RSH_IPI_LOC__Y6_MASK  _64bit(0xf000000000000)
#define RSH_IPI_LOC__Y6_FIELD 48,51

#define RSH_IPI_LOC__X6_SHIFT 52
#define RSH_IPI_LOC__X6_WIDTH 4
#define RSH_IPI_LOC__X6_RMASK 0xf
#define RSH_IPI_LOC__X6_MASK  _64bit(0xf0000000000000)
#define RSH_IPI_LOC__X6_FIELD 52,55

#define RSH_IPI_LOC__Y7_SHIFT 56
#define RSH_IPI_LOC__Y7_WIDTH 4
#define RSH_IPI_LOC__Y7_RMASK 0xf
#define RSH_IPI_LOC__Y7_MASK  _64bit(0xf00000000000000)
#define RSH_IPI_LOC__Y7_FIELD 56,59

#define RSH_IPI_LOC__X7_SHIFT 60
#define RSH_IPI_LOC__X7_WIDTH 4
#define RSH_IPI_LOC__X7_RMASK 0xf
#define RSH_IPI_LOC__X7_MASK  _64bit(0xf000000000000000)
#define RSH_IPI_LOC__X7_FIELD 60,63


/*
 * JTAG Control.
 * JTAG Control.  When this register is written, a JTAG transaction will be
 * initiated as long as JTAG_ENA is asserted.
 */
#define RSH_JTAG_CONTROL 0x0a00

#define RSH_JTAG_CONTROL__JTAG_SHIFT_CNT_SHIFT 0
#define RSH_JTAG_CONTROL__JTAG_SHIFT_CNT_WIDTH 7
#define RSH_JTAG_CONTROL__JTAG_SHIFT_CNT_RESET_VAL 0
#define RSH_JTAG_CONTROL__JTAG_SHIFT_CNT_RMASK 0x7f
#define RSH_JTAG_CONTROL__JTAG_SHIFT_CNT_MASK  0x7f
#define RSH_JTAG_CONTROL__JTAG_SHIFT_CNT_FIELD 0,6

#define RSH_JTAG_CONTROL__JTAG_CMD_SHIFT 7
#define RSH_JTAG_CONTROL__JTAG_CMD_WIDTH 2
#define RSH_JTAG_CONTROL__JTAG_CMD_RESET_VAL 0
#define RSH_JTAG_CONTROL__JTAG_CMD_RMASK 0x3
#define RSH_JTAG_CONTROL__JTAG_CMD_MASK  0x180
#define RSH_JTAG_CONTROL__JTAG_CMD_FIELD 7,8
#define RSH_JTAG_CONTROL__JTAG_CMD_VAL_RESET_TAP 0x0
#define RSH_JTAG_CONTROL__JTAG_CMD_VAL_START_SHIFT 0x1
#define RSH_JTAG_CONTROL__JTAG_CMD_VAL_CONTINUE_SHIFT 0x2
#define RSH_JTAG_CONTROL__JTAG_CMD_VAL_END_SHIFT 0x3


/*
 * JTAG Data.
 * JTAG shift Data.  SW provides up to 64 bits of data to be shifted into
 * JTAG controller (bits are shifted out of LSBs). Hardware shifts data into
 * the MSBs.
 */
#define RSH_JTAG_DATA 0x0a10

#define RSH_JTAG_DATA__JTAG_DATA_SHIFT 0
#define RSH_JTAG_DATA__JTAG_DATA_WIDTH 64
#define RSH_JTAG_DATA__JTAG_DATA_RESET_VAL 0
#define RSH_JTAG_DATA__JTAG_DATA_RMASK _64bit(0xffffffffffffffff)
#define RSH_JTAG_DATA__JTAG_DATA_MASK  _64bit(0xffffffffffffffff)
#define RSH_JTAG_DATA__JTAG_DATA_FIELD 0,63


/* JTAG Setup. */
#define RSH_JTAG_SETUP 0x0a08

#define RSH_JTAG_SETUP__JTAG_ENA_SHIFT 0
#define RSH_JTAG_SETUP__JTAG_ENA_WIDTH 1
#define RSH_JTAG_SETUP__JTAG_ENA_RESET_VAL 0
#define RSH_JTAG_SETUP__JTAG_ENA_RMASK 0x1
#define RSH_JTAG_SETUP__JTAG_ENA_MASK  0x1
#define RSH_JTAG_SETUP__JTAG_ENA_FIELD 0,0

#define RSH_JTAG_SETUP__JTAG_RATE_SHIFT 1
#define RSH_JTAG_SETUP__JTAG_RATE_WIDTH 2
#define RSH_JTAG_SETUP__JTAG_RATE_RESET_VAL 0
#define RSH_JTAG_SETUP__JTAG_RATE_RMASK 0x3
#define RSH_JTAG_SETUP__JTAG_RATE_MASK  0x6
#define RSH_JTAG_SETUP__JTAG_RATE_FIELD 1,2
#define RSH_JTAG_SETUP__JTAG_RATE_VAL_DIV16 0x0
#define RSH_JTAG_SETUP__JTAG_RATE_VAL_DIV8 0x1
#define RSH_JTAG_SETUP__JTAG_RATE_VAL_DIV4 0x2
#define RSH_JTAG_SETUP__JTAG_RATE_VAL_DIV2 0x3

#define RSH_JTAG_SETUP__DEC_INST_SHIFT 3
#define RSH_JTAG_SETUP__DEC_INST_WIDTH 1
#define RSH_JTAG_SETUP__DEC_INST_RESET_VAL 0
#define RSH_JTAG_SETUP__DEC_INST_RMASK 0x1
#define RSH_JTAG_SETUP__DEC_INST_MASK  0x8
#define RSH_JTAG_SETUP__DEC_INST_FIELD 3,3

#define RSH_JTAG_SETUP__JTAG_INST_SHIFT 16
#define RSH_JTAG_SETUP__JTAG_INST_WIDTH 28
#define RSH_JTAG_SETUP__JTAG_INST_RESET_VAL 0
#define RSH_JTAG_SETUP__JTAG_INST_RMASK 0xfffffff
#define RSH_JTAG_SETUP__JTAG_INST_MASK  _64bit(0xfffffff0000)
#define RSH_JTAG_SETUP__JTAG_INST_FIELD 16,43
#define RSH_JTAG_SETUP__JTAG_INST_VAL_MBIST_REPAIR 0x0
#define RSH_JTAG_SETUP__JTAG_INST_VAL_CR_MAIN0 0xfe
#define RSH_JTAG_SETUP__JTAG_INST_VAL_CR_MAIN1 0xfc
#define RSH_JTAG_SETUP__JTAG_INST_VAL_CR_PK0 0xfa
#define RSH_JTAG_SETUP__JTAG_INST_VAL_CR_PK1 0xf8
#define RSH_JTAG_SETUP__JTAG_INST_VAL_MSH0 0xf7
#define RSH_JTAG_SETUP__JTAG_INST_VAL_MSH1 0xf5
#define RSH_JTAG_SETUP__JTAG_INST_VAL_TILE_0_0 0xf3
#define RSH_JTAG_SETUP__JTAG_INST_VAL_TILE_0_1 0xf1
#define RSH_JTAG_SETUP__JTAG_INST_VAL_TILE_0_2 0xf6
#define RSH_JTAG_SETUP__JTAG_INST_VAL_TILE_0_3 0xf4
#define RSH_JTAG_SETUP__JTAG_INST_VAL_TILE_0_4 0xf2
#define RSH_JTAG_SETUP__JTAG_INST_VAL_TILE_0_5 0xf0
#define RSH_JTAG_SETUP__JTAG_INST_VAL_TILE_0_6 0x100
#define RSH_JTAG_SETUP__JTAG_INST_VAL_TILE_0_7 0x101
#define RSH_JTAG_SETUP__JTAG_INST_VAL_TILE_0_8 0x102
#define RSH_JTAG_SETUP__JTAG_INST_VAL_TILE_0_9 0x103
#define RSH_JTAG_SETUP__JTAG_INST_VAL_TILE_1_0 0xef
#define RSH_JTAG_SETUP__JTAG_INST_VAL_TILE_1_1 0xed
#define RSH_JTAG_SETUP__JTAG_INST_VAL_TILE_1_2 0xeb
#define RSH_JTAG_SETUP__JTAG_INST_VAL_TILE_1_3 0xe9
#define RSH_JTAG_SETUP__JTAG_INST_VAL_TILE_1_4 0xee
#define RSH_JTAG_SETUP__JTAG_INST_VAL_TILE_1_5 0xec
#define RSH_JTAG_SETUP__JTAG_INST_VAL_TILE_1_6 0x104
#define RSH_JTAG_SETUP__JTAG_INST_VAL_TILE_1_7 0x105
#define RSH_JTAG_SETUP__JTAG_INST_VAL_TILE_1_8 0x106
#define RSH_JTAG_SETUP__JTAG_INST_VAL_TILE_1_9 0x107
#define RSH_JTAG_SETUP__JTAG_INST_VAL_TILE_2_0 0xea
#define RSH_JTAG_SETUP__JTAG_INST_VAL_TILE_2_1 0xe8
#define RSH_JTAG_SETUP__JTAG_INST_VAL_TILE_2_2 0xe7
#define RSH_JTAG_SETUP__JTAG_INST_VAL_TILE_2_3 0xe5
#define RSH_JTAG_SETUP__JTAG_INST_VAL_TILE_2_4 0xe3
#define RSH_JTAG_SETUP__JTAG_INST_VAL_TILE_2_5 0xe1
#define RSH_JTAG_SETUP__JTAG_INST_VAL_TILE_2_6 0x108
#define RSH_JTAG_SETUP__JTAG_INST_VAL_TILE_2_7 0x109
#define RSH_JTAG_SETUP__JTAG_INST_VAL_TILE_2_8 0x10a
#define RSH_JTAG_SETUP__JTAG_INST_VAL_TILE_2_9 0x10b
#define RSH_JTAG_SETUP__JTAG_INST_VAL_TILE_3_0 0xe6
#define RSH_JTAG_SETUP__JTAG_INST_VAL_TILE_3_1 0xe4
#define RSH_JTAG_SETUP__JTAG_INST_VAL_TILE_3_2 0xe2
#define RSH_JTAG_SETUP__JTAG_INST_VAL_TILE_3_3 0xe0
#define RSH_JTAG_SETUP__JTAG_INST_VAL_TILE_3_4 0xdf
#define RSH_JTAG_SETUP__JTAG_INST_VAL_TILE_3_5 0xdd
#define RSH_JTAG_SETUP__JTAG_INST_VAL_TILE_3_6 0x10c
#define RSH_JTAG_SETUP__JTAG_INST_VAL_TILE_3_7 0x10d
#define RSH_JTAG_SETUP__JTAG_INST_VAL_TILE_3_8 0x10e
#define RSH_JTAG_SETUP__JTAG_INST_VAL_TILE_3_9 0x10f
#define RSH_JTAG_SETUP__JTAG_INST_VAL_TILE_4_0 0xdb
#define RSH_JTAG_SETUP__JTAG_INST_VAL_TILE_4_1 0xd9
#define RSH_JTAG_SETUP__JTAG_INST_VAL_TILE_4_2 0xde
#define RSH_JTAG_SETUP__JTAG_INST_VAL_TILE_4_3 0xdc
#define RSH_JTAG_SETUP__JTAG_INST_VAL_TILE_4_4 0xda
#define RSH_JTAG_SETUP__JTAG_INST_VAL_TILE_4_5 0xd8
#define RSH_JTAG_SETUP__JTAG_INST_VAL_TILE_4_6 0x110
#define RSH_JTAG_SETUP__JTAG_INST_VAL_TILE_4_7 0x111
#define RSH_JTAG_SETUP__JTAG_INST_VAL_TILE_4_8 0x112
#define RSH_JTAG_SETUP__JTAG_INST_VAL_TILE_4_9 0x113
#define RSH_JTAG_SETUP__JTAG_INST_VAL_TILE_5_0 0xd7
#define RSH_JTAG_SETUP__JTAG_INST_VAL_TILE_5_1 0xd5
#define RSH_JTAG_SETUP__JTAG_INST_VAL_TILE_5_2 0xd3
#define RSH_JTAG_SETUP__JTAG_INST_VAL_TILE_5_3 0xd1
#define RSH_JTAG_SETUP__JTAG_INST_VAL_TILE_5_4 0xd6
#define RSH_JTAG_SETUP__JTAG_INST_VAL_TILE_5_5 0xd4
#define RSH_JTAG_SETUP__JTAG_INST_VAL_TILE_5_6 0x114
#define RSH_JTAG_SETUP__JTAG_INST_VAL_TILE_5_7 0x115
#define RSH_JTAG_SETUP__JTAG_INST_VAL_TILE_5_8 0x116
#define RSH_JTAG_SETUP__JTAG_INST_VAL_TILE_5_9 0x117
#define RSH_JTAG_SETUP__JTAG_INST_VAL_TILE_6_0 0x118
#define RSH_JTAG_SETUP__JTAG_INST_VAL_TILE_6_1 0x119
#define RSH_JTAG_SETUP__JTAG_INST_VAL_TILE_6_2 0x11a
#define RSH_JTAG_SETUP__JTAG_INST_VAL_TILE_6_3 0x11b
#define RSH_JTAG_SETUP__JTAG_INST_VAL_TILE_6_4 0x11c
#define RSH_JTAG_SETUP__JTAG_INST_VAL_TILE_6_5 0x11d
#define RSH_JTAG_SETUP__JTAG_INST_VAL_TILE_6_6 0x11e
#define RSH_JTAG_SETUP__JTAG_INST_VAL_TILE_6_7 0x11f
#define RSH_JTAG_SETUP__JTAG_INST_VAL_TILE_6_8 0x120
#define RSH_JTAG_SETUP__JTAG_INST_VAL_TILE_6_9 0x121
#define RSH_JTAG_SETUP__JTAG_INST_VAL_TILE_7_0 0x122
#define RSH_JTAG_SETUP__JTAG_INST_VAL_TILE_7_1 0x123
#define RSH_JTAG_SETUP__JTAG_INST_VAL_TILE_7_2 0x124
#define RSH_JTAG_SETUP__JTAG_INST_VAL_TILE_7_3 0x125
#define RSH_JTAG_SETUP__JTAG_INST_VAL_TILE_7_4 0x126
#define RSH_JTAG_SETUP__JTAG_INST_VAL_TILE_7_5 0x127
#define RSH_JTAG_SETUP__JTAG_INST_VAL_TILE_7_6 0x128
#define RSH_JTAG_SETUP__JTAG_INST_VAL_TILE_7_7 0x129
#define RSH_JTAG_SETUP__JTAG_INST_VAL_TILE_7_8 0x12a
#define RSH_JTAG_SETUP__JTAG_INST_VAL_TILE_7_9 0x12b
#define RSH_JTAG_SETUP__JTAG_INST_VAL_TILE_8_0 0x12c
#define RSH_JTAG_SETUP__JTAG_INST_VAL_TILE_8_1 0x12d
#define RSH_JTAG_SETUP__JTAG_INST_VAL_TILE_8_2 0x12e
#define RSH_JTAG_SETUP__JTAG_INST_VAL_TILE_8_3 0x12f
#define RSH_JTAG_SETUP__JTAG_INST_VAL_TILE_8_4 0x130
#define RSH_JTAG_SETUP__JTAG_INST_VAL_TILE_8_5 0x131
#define RSH_JTAG_SETUP__JTAG_INST_VAL_TILE_8_6 0x132
#define RSH_JTAG_SETUP__JTAG_INST_VAL_TILE_8_7 0x133
#define RSH_JTAG_SETUP__JTAG_INST_VAL_TILE_8_8 0x134
#define RSH_JTAG_SETUP__JTAG_INST_VAL_TILE_8_9 0x135
#define RSH_JTAG_SETUP__JTAG_INST_VAL_TILE_9_0 0x136
#define RSH_JTAG_SETUP__JTAG_INST_VAL_TILE_9_1 0x137
#define RSH_JTAG_SETUP__JTAG_INST_VAL_TILE_9_2 0x138
#define RSH_JTAG_SETUP__JTAG_INST_VAL_TILE_9_3 0x139
#define RSH_JTAG_SETUP__JTAG_INST_VAL_TILE_9_4 0x13a
#define RSH_JTAG_SETUP__JTAG_INST_VAL_TILE_9_5 0x13b
#define RSH_JTAG_SETUP__JTAG_INST_VAL_TILE_9_6 0x13c
#define RSH_JTAG_SETUP__JTAG_INST_VAL_TILE_9_7 0x13d
#define RSH_JTAG_SETUP__JTAG_INST_VAL_TILE_9_8 0x13e
#define RSH_JTAG_SETUP__JTAG_INST_VAL_TILE_9_9 0x13f
#define RSH_JTAG_SETUP__JTAG_INST_VAL_GP 0xd2
#define RSH_JTAG_SETUP__JTAG_INST_VAL_PP_IF0 0xd0
#define RSH_JTAG_SETUP__JTAG_INST_VAL_PP_IF1 0xcf
#define RSH_JTAG_SETUP__JTAG_INST_VAL_PP_IF2 0xcd
#define RSH_JTAG_SETUP__JTAG_INST_VAL_PP_IF3 0xcb
#define RSH_JTAG_SETUP__JTAG_INST_VAL_PDE_CLS_PROC0 0xc9
#define RSH_JTAG_SETUP__JTAG_INST_VAL_PDE_CLS_PROC1 0xce
#define RSH_JTAG_SETUP__JTAG_INST_VAL_PDE_CLS_PROC2 0xcc
#define RSH_JTAG_SETUP__JTAG_INST_VAL_PDE_CLS_PROC3 0xca
#define RSH_JTAG_SETUP__JTAG_INST_VAL_PDE_CLS_PROC4 0xc8
#define RSH_JTAG_SETUP__JTAG_INST_VAL_PDE_CLS_PROC5 0xc7
#define RSH_JTAG_SETUP__JTAG_INST_VAL_PDE_CLS_PROC6 0xc5
#define RSH_JTAG_SETUP__JTAG_INST_VAL_PDE_CLS_PROC7 0xc3
#define RSH_JTAG_SETUP__JTAG_INST_VAL_PDE_CLS_PROC8 0xc1
#define RSH_JTAG_SETUP__JTAG_INST_VAL_PDE_CLS_PROC9 0xc6
#define RSH_JTAG_SETUP__JTAG_INST_VAL_PDE_CLS_EDMA 0xc4
#define RSH_JTAG_SETUP__JTAG_INST_VAL_PDE 0xc2
#define RSH_JTAG_SETUP__JTAG_INST_VAL_RSH 0xc0
#define RSH_JTAG_SETUP__JTAG_INST_VAL_PCIE0 0xbf
#define RSH_JTAG_SETUP__JTAG_INST_VAL_PCIE1 0xbd
#define RSH_JTAG_SETUP__JTAG_INST_VAL_PCIE2 0xbb
#define RSH_JTAG_SETUP__JTAG_INST_VAL_TRIO 0xb9
#define RSH_JTAG_SETUP__JTAG_INST_VAL_USB 0xbe
#define RSH_JTAG_SETUP__JTAG_INST_VAL_ZIP0 0xbc
#define RSH_JTAG_SETUP__JTAG_INST_VAL_ZIP1 0xba
#define RSH_JTAG_SETUP__JTAG_INST_VAL_EFUSE_RW 0xb8
#define RSH_JTAG_SETUP__JTAG_INST_VAL_EFUSE_MIRROR 0xb7
#define RSH_JTAG_SETUP__JTAG_INST_VAL_EFUSE_MIRROR_PGM 0xb5
#define RSH_JTAG_SETUP__JTAG_INST_VAL_RAM_RWM 0xb3
#define RSH_JTAG_SETUP__JTAG_INST_VAL_JTAG_RSHIM 0xb1
#define RSH_JTAG_SETUP__JTAG_INST_VAL_JTAG_INT_SPARE0 0xb6
#define RSH_JTAG_SETUP__JTAG_INST_VAL_JTAG_INT_SPARE1 0xb4
#define RSH_JTAG_SETUP__JTAG_INST_VAL_JTAG_INT_SPARE2 0xb2
#define RSH_JTAG_SETUP__JTAG_INST_VAL_JTAG_CRC_CCLK 0xb0
#define RSH_JTAG_SETUP__JTAG_INST_VAL_JTAG_CRC_PP0_PCLK 0xaf
#define RSH_JTAG_SETUP__JTAG_INST_VAL_JTAG_CRC_PP1_PCLK 0xa2
#define RSH_JTAG_SETUP__JTAG_INST_VAL_JTAG_CRC_PP0_KCLK 0xad
#define RSH_JTAG_SETUP__JTAG_INST_VAL_JTAG_CRC_PP1_KCLK 0x9c
#define RSH_JTAG_SETUP__JTAG_INST_VAL_JTAG_CRC_TP0_TCLK 0xab
#define RSH_JTAG_SETUP__JTAG_INST_VAL_JTAG_CRC_TP1_TCLK 0xa4
#define RSH_JTAG_SETUP__JTAG_INST_VAL_JTAG_CRC_ZCLK0 0xa9
#define RSH_JTAG_SETUP__JTAG_INST_VAL_JTAG_CRC_ZCLK1 0xae
#define RSH_JTAG_SETUP__JTAG_INST_VAL_JTAG_CRC_SCLK0 0xac
#define RSH_JTAG_SETUP__JTAG_INST_VAL_JTAG_CRC_SCLK1 0xaa
#define RSH_JTAG_SETUP__JTAG_INST_VAL_JTAG_CRC_UCLK 0xa8
#define RSH_JTAG_SETUP__JTAG_INST_VAL_JTAG_CRC_RCLK 0xa7
#define RSH_JTAG_SETUP__JTAG_INST_VAL_JTAG_GPIO_RSH 0xa0
#define RSH_JTAG_SETUP__JTAG_INST_VAL_JTAG_GPIO_GP 0x9f
#define RSH_JTAG_SETUP__JTAG_INST_VAL_JTAG_GPIO_USB 0x9d
#define RSH_JTAG_SETUP__JTAG_INST_VAL_JTAG_GPIO_PP 0x9b
#define RSH_JTAG_SETUP__JTAG_INST_VAL_JTAG_GPIO_TP 0x99
#define RSH_JTAG_SETUP__JTAG_INST_VAL_JTAG_GPIO_CC 0x9e
#define RSH_JTAG_SETUP__JTAG_INST_VAL_JTAG_ENET_PHY_PP0_QUAD0_SERDES 0x98
#define RSH_JTAG_SETUP__JTAG_INST_VAL_JTAG_ENET_PHY_PP0_QUAD1_SERDES 0x97
#define RSH_JTAG_SETUP__JTAG_INST_VAL_JTAG_ENET_PHY_PP0_QUAD2_SERDES 0x95
#define RSH_JTAG_SETUP__JTAG_INST_VAL_JTAG_ENET_PHY_PP0_QUAD3_SERDES 0x93
#define RSH_JTAG_SETUP__JTAG_INST_VAL_JTAG_ENET_PHY_PP1_QUAD0_SERDES 0x91
#define RSH_JTAG_SETUP__JTAG_INST_VAL_JTAG_ENET_PHY_PP1_QUAD1_SERDES 0x96
#define RSH_JTAG_SETUP__JTAG_INST_VAL_JTAG_ENET_PHY_PP1_QUAD2_SERDES 0x94
#define RSH_JTAG_SETUP__JTAG_INST_VAL_JTAG_ENET_PHY_PP1_QUAD3_SERDES 0x92
#define RSH_JTAG_SETUP__JTAG_INST_VAL_JTAG_ENET_PHY_PP0_QUAD0_CRC 0x90
#define RSH_JTAG_SETUP__JTAG_INST_VAL_JTAG_ENET_PHY_PP0_QUAD1_CRC 0x8f
#define RSH_JTAG_SETUP__JTAG_INST_VAL_JTAG_ENET_PHY_PP0_QUAD2_CRC 0x8d
#define RSH_JTAG_SETUP__JTAG_INST_VAL_JTAG_ENET_PHY_PP0_QUAD3_CRC 0x8b
#define RSH_JTAG_SETUP__JTAG_INST_VAL_JTAG_ENET_PHY_PP1_QUAD0_CRC 0x89
#define RSH_JTAG_SETUP__JTAG_INST_VAL_JTAG_ENET_PHY_PP1_QUAD1_CRC 0x8e
#define RSH_JTAG_SETUP__JTAG_INST_VAL_JTAG_ENET_PHY_PP1_QUAD2_CRC 0x8c
#define RSH_JTAG_SETUP__JTAG_INST_VAL_JTAG_ENET_PHY_PP1_QUAD3_CRC 0x8a
#define RSH_JTAG_SETUP__JTAG_INST_VAL_JTAG_PCIE_PHY_TP0_QUAD0_SERDES 0x88
#define RSH_JTAG_SETUP__JTAG_INST_VAL_JTAG_PCIE_PHY_TP0_QUAD1_SERDES 0x87
#define RSH_JTAG_SETUP__JTAG_INST_VAL_JTAG_PCIE_PHY_TP0_QUAD2_SERDES 0x85
#define RSH_JTAG_SETUP__JTAG_INST_VAL_JTAG_PCIE_PHY_TP1_QUAD0_SERDES 0x83
#define RSH_JTAG_SETUP__JTAG_INST_VAL_JTAG_PCIE_PHY_TP1_QUAD1_SERDES 0x81
#define RSH_JTAG_SETUP__JTAG_INST_VAL_JTAG_PCIE_PHY_TP1_QUAD2_SERDES 0x86
#define RSH_JTAG_SETUP__JTAG_INST_VAL_JTAG_PCIE_PHY_TP0_QUAD0_CRC 0x80
#define RSH_JTAG_SETUP__JTAG_INST_VAL_JTAG_PCIE_PHY_TP0_QUAD1_CRC 0x7f
#define RSH_JTAG_SETUP__JTAG_INST_VAL_JTAG_PCIE_PHY_TP0_QUAD2_CRC 0x7d
#define RSH_JTAG_SETUP__JTAG_INST_VAL_JTAG_PCIE_PHY_TP1_QUAD0_CRC 0x7b
#define RSH_JTAG_SETUP__JTAG_INST_VAL_JTAG_PCIE_PHY_TP1_QUAD1_CRC 0x79
#define RSH_JTAG_SETUP__JTAG_INST_VAL_JTAG_PCIE_PHY_TP1_QUAD2_CRC 0x7e
#define RSH_JTAG_SETUP__JTAG_INST_VAL_JTAG_DDR_PHY0 0x71
#define RSH_JTAG_SETUP__JTAG_INST_VAL_JTAG_DDR_PHY1 0x76
#define RSH_JTAG_SETUP__JTAG_INST_VAL_JTAG_DDR_PHY2 0x74
#define RSH_JTAG_SETUP__JTAG_INST_VAL_JTAG_DDR_PHY3 0x72


/*
 * Memory Info.
 * This register provides information about memory setup required for this
 * device.
 */
#define RSH_MEM_INFO 0x0018

#define RSH_MEM_INFO__REQ_PORTS_SHIFT 0
#define RSH_MEM_INFO__REQ_PORTS_WIDTH 32
#define RSH_MEM_INFO__REQ_PORTS_RESET_VAL 32768
#define RSH_MEM_INFO__REQ_PORTS_RMASK 0xffffffff
#define RSH_MEM_INFO__REQ_PORTS_MASK  0xffffffff
#define RSH_MEM_INFO__REQ_PORTS_FIELD 0,31

#define RSH_MEM_INFO__NUM_HFH_TBL_SHIFT 32
#define RSH_MEM_INFO__NUM_HFH_TBL_WIDTH 4
#define RSH_MEM_INFO__NUM_HFH_TBL_RESET_VAL 1
#define RSH_MEM_INFO__NUM_HFH_TBL_RMASK 0xf
#define RSH_MEM_INFO__NUM_HFH_TBL_MASK  _64bit(0xf00000000)
#define RSH_MEM_INFO__NUM_HFH_TBL_FIELD 32,35

#define RSH_MEM_INFO__NUM_ASIDS_SHIFT 40
#define RSH_MEM_INFO__NUM_ASIDS_WIDTH 8
#define RSH_MEM_INFO__NUM_ASIDS_RESET_VAL 0
#define RSH_MEM_INFO__NUM_ASIDS_RMASK 0xff
#define RSH_MEM_INFO__NUM_ASIDS_MASK  _64bit(0xff0000000000)
#define RSH_MEM_INFO__NUM_ASIDS_FIELD 40,47

#define RSH_MEM_INFO__NUM_TLB_ENT_SHIFT 48
#define RSH_MEM_INFO__NUM_TLB_ENT_WIDTH 8
#define RSH_MEM_INFO__NUM_TLB_ENT_RESET_VAL 0
#define RSH_MEM_INFO__NUM_TLB_ENT_RMASK 0xff
#define RSH_MEM_INFO__NUM_TLB_ENT_MASK  _64bit(0xff000000000000)
#define RSH_MEM_INFO__NUM_TLB_ENT_FIELD 48,55


/*
 * MMIO Error Information.
 * Provides diagnostics information when an MMIO error occurs.  Captured
 * whenever the MMIO_ERR interrupt condition occurs (typically due to size
 * error).
 */
#define RSH_MMIO_ERROR_INFO 0x0210

#define RSH_MMIO_ERROR_INFO__SRC_SHIFT 0
#define RSH_MMIO_ERROR_INFO__SRC_WIDTH 8
#define RSH_MMIO_ERROR_INFO__SRC_RESET_VAL 0
#define RSH_MMIO_ERROR_INFO__SRC_RMASK 0xff
#define RSH_MMIO_ERROR_INFO__SRC_MASK  0xff
#define RSH_MMIO_ERROR_INFO__SRC_FIELD 0,7

#define RSH_MMIO_ERROR_INFO__SIZE_SHIFT 8
#define RSH_MMIO_ERROR_INFO__SIZE_WIDTH 4
#define RSH_MMIO_ERROR_INFO__SIZE_RESET_VAL 0
#define RSH_MMIO_ERROR_INFO__SIZE_RMASK 0xf
#define RSH_MMIO_ERROR_INFO__SIZE_MASK  0xf00
#define RSH_MMIO_ERROR_INFO__SIZE_FIELD 8,11

#define RSH_MMIO_ERROR_INFO__PA_SHIFT 12
#define RSH_MMIO_ERROR_INFO__PA_WIDTH 42
#define RSH_MMIO_ERROR_INFO__PA_RESET_VAL 0
#define RSH_MMIO_ERROR_INFO__PA_RMASK _64bit(0x3ffffffffff)
#define RSH_MMIO_ERROR_INFO__PA_MASK  _64bit(0x3ffffffffff000)
#define RSH_MMIO_ERROR_INFO__PA_FIELD 12,53

#define RSH_MMIO_ERROR_INFO__OPC_SHIFT 54
#define RSH_MMIO_ERROR_INFO__OPC_WIDTH 5
#define RSH_MMIO_ERROR_INFO__OPC_RESET_VAL 0
#define RSH_MMIO_ERROR_INFO__OPC_RMASK 0x1f
#define RSH_MMIO_ERROR_INFO__OPC_MASK  _64bit(0x7c0000000000000)
#define RSH_MMIO_ERROR_INFO__OPC_FIELD 54,58


/*
 * MMIO Info.
 * This register provides information about how the physical address is
 * interpreted by the IO device.  The PA is divided into
 * {CHANNEL,SVC_DOM,IGNORED,REGION,OFFSET}.  The values in this register
 * define the size of each of these fields.
 */
#define RSH_MMIO_INFO 0x0010

#define RSH_MMIO_INFO__CH_WIDTH_SHIFT 0
#define RSH_MMIO_INFO__CH_WIDTH_WIDTH 4
#define RSH_MMIO_INFO__CH_WIDTH_RESET_VAL 4
#define RSH_MMIO_INFO__CH_WIDTH_RMASK 0xf
#define RSH_MMIO_INFO__CH_WIDTH_MASK  0xf
#define RSH_MMIO_INFO__CH_WIDTH_FIELD 0,3

#define RSH_MMIO_INFO__NUM_CH_SHIFT 4
#define RSH_MMIO_INFO__NUM_CH_WIDTH 15
#define RSH_MMIO_INFO__NUM_CH_RESET_VAL 8
#define RSH_MMIO_INFO__NUM_CH_RMASK 0x7fff
#define RSH_MMIO_INFO__NUM_CH_MASK  0x7fff0
#define RSH_MMIO_INFO__NUM_CH_FIELD 4,18

#define RSH_MMIO_INFO__SVC_DOM_WIDTH_SHIFT 19
#define RSH_MMIO_INFO__SVC_DOM_WIDTH_WIDTH 3
#define RSH_MMIO_INFO__SVC_DOM_WIDTH_RESET_VAL 0
#define RSH_MMIO_INFO__SVC_DOM_WIDTH_RMASK 0x7
#define RSH_MMIO_INFO__SVC_DOM_WIDTH_MASK  0x380000
#define RSH_MMIO_INFO__SVC_DOM_WIDTH_FIELD 19,21

#define RSH_MMIO_INFO__NUM_SVC_DOM_SHIFT 22
#define RSH_MMIO_INFO__NUM_SVC_DOM_WIDTH 7
#define RSH_MMIO_INFO__NUM_SVC_DOM_RESET_VAL 0
#define RSH_MMIO_INFO__NUM_SVC_DOM_RMASK 0x7f
#define RSH_MMIO_INFO__NUM_SVC_DOM_MASK  0x1fc00000
#define RSH_MMIO_INFO__NUM_SVC_DOM_FIELD 22,28

#define RSH_MMIO_INFO__OFFSET_WIDTH_SHIFT 29
#define RSH_MMIO_INFO__OFFSET_WIDTH_WIDTH 6
#define RSH_MMIO_INFO__OFFSET_WIDTH_RESET_VAL 16
#define RSH_MMIO_INFO__OFFSET_WIDTH_RMASK 0x3f
#define RSH_MMIO_INFO__OFFSET_WIDTH_MASK  _64bit(0x7e0000000)
#define RSH_MMIO_INFO__OFFSET_WIDTH_FIELD 29,34

#define RSH_MMIO_INFO__REGION_WIDTH_SHIFT 35
#define RSH_MMIO_INFO__REGION_WIDTH_WIDTH 6
#define RSH_MMIO_INFO__REGION_WIDTH_RESET_VAL 0
#define RSH_MMIO_INFO__REGION_WIDTH_RMASK 0x3f
#define RSH_MMIO_INFO__REGION_WIDTH_MASK  _64bit(0x1f800000000)
#define RSH_MMIO_INFO__REGION_WIDTH_FIELD 35,40


/*
 * Packet Generator Completion Data.
 * Any data received on the RDN will be placed into this data buffer.  The
 * first COMP_DATA register contains the RDN header (but no data bytes).  The
 * remaining 8 data registers contain any data from the RDN packet.Any data
 * received on the RDN will be placed into this data buffer.  The first
 * COMP_DATA register contains the RDN header.
 */
#define RSH_PG_COMP_DATA__FIRST_WORD 0x0410
#define RSH_PG_COMP_DATA__LAST_WORD 0x0450

#define RSH_PG_COMP_DATA__DATA_SHIFT 0
#define RSH_PG_COMP_DATA__DATA_WIDTH 64
#define RSH_PG_COMP_DATA__DATA_RESET_VAL 0
#define RSH_PG_COMP_DATA__DATA_RMASK _64bit(0xffffffffffffffff)
#define RSH_PG_COMP_DATA__DATA_MASK  _64bit(0xffffffffffffffff)
#define RSH_PG_COMP_DATA__DATA_FIELD 0,63


/*
 * Packet Generator Completion Data.
 * Any data received on the RDN will be placed into this data buffer.  The
 * first COMP_DATA register contains the RDN header (but no data bytes).  The
 * remaining 8 data registers contain any data from the RDN packet.Any data
 * received on the RDN will be placed into this data buffer.  The first
 * COMP_DATA register contains the RDN header.
 */
#define RSH_PG_COMP_DATA_1__FIRST_WORD 0x0418
#define RSH_PG_COMP_DATA_1__LAST_WORD 0x0458

#define RSH_PG_COMP_DATA_1__DATA_SHIFT 0
#define RSH_PG_COMP_DATA_1__DATA_WIDTH 64
#define RSH_PG_COMP_DATA_1__DATA_RESET_VAL 0
#define RSH_PG_COMP_DATA_1__DATA_RMASK _64bit(0xffffffffffffffff)
#define RSH_PG_COMP_DATA_1__DATA_MASK  _64bit(0xffffffffffffffff)
#define RSH_PG_COMP_DATA_1__DATA_FIELD 0,63


/*
 * Packet Generator Completion Data.
 * Any data received on the RDN will be placed into this data buffer.  The
 * first COMP_DATA register contains the RDN header (but no data bytes).  The
 * remaining 8 data registers contain any data from the RDN packet.Any data
 * received on the RDN will be placed into this data buffer.  The first
 * COMP_DATA register contains the RDN header.
 */
#define RSH_PG_COMP_DATA_2__FIRST_WORD 0x0420
#define RSH_PG_COMP_DATA_2__LAST_WORD 0x0460

#define RSH_PG_COMP_DATA_2__DATA_SHIFT 0
#define RSH_PG_COMP_DATA_2__DATA_WIDTH 64
#define RSH_PG_COMP_DATA_2__DATA_RESET_VAL 0
#define RSH_PG_COMP_DATA_2__DATA_RMASK _64bit(0xffffffffffffffff)
#define RSH_PG_COMP_DATA_2__DATA_MASK  _64bit(0xffffffffffffffff)
#define RSH_PG_COMP_DATA_2__DATA_FIELD 0,63


/*
 * Packet Generator Completion Data.
 * Any data received on the RDN will be placed into this data buffer.  The
 * first COMP_DATA register contains the RDN header (but no data bytes).  The
 * remaining 8 data registers contain any data from the RDN packet.Any data
 * received on the RDN will be placed into this data buffer.  The first
 * COMP_DATA register contains the RDN header.
 */
#define RSH_PG_COMP_DATA_3__FIRST_WORD 0x0428
#define RSH_PG_COMP_DATA_3__LAST_WORD 0x0468

#define RSH_PG_COMP_DATA_3__DATA_SHIFT 0
#define RSH_PG_COMP_DATA_3__DATA_WIDTH 64
#define RSH_PG_COMP_DATA_3__DATA_RESET_VAL 0
#define RSH_PG_COMP_DATA_3__DATA_RMASK _64bit(0xffffffffffffffff)
#define RSH_PG_COMP_DATA_3__DATA_MASK  _64bit(0xffffffffffffffff)
#define RSH_PG_COMP_DATA_3__DATA_FIELD 0,63


/*
 * Packet Generator Completion Data.
 * Any data received on the RDN will be placed into this data buffer.  The
 * first COMP_DATA register contains the RDN header (but no data bytes).  The
 * remaining 8 data registers contain any data from the RDN packet.Any data
 * received on the RDN will be placed into this data buffer.  The first
 * COMP_DATA register contains the RDN header.
 */
#define RSH_PG_COMP_DATA_4__FIRST_WORD 0x0430
#define RSH_PG_COMP_DATA_4__LAST_WORD 0x0470

#define RSH_PG_COMP_DATA_4__DATA_SHIFT 0
#define RSH_PG_COMP_DATA_4__DATA_WIDTH 64
#define RSH_PG_COMP_DATA_4__DATA_RESET_VAL 0
#define RSH_PG_COMP_DATA_4__DATA_RMASK _64bit(0xffffffffffffffff)
#define RSH_PG_COMP_DATA_4__DATA_MASK  _64bit(0xffffffffffffffff)
#define RSH_PG_COMP_DATA_4__DATA_FIELD 0,63


/*
 * Packet Generator Completion Data.
 * Any data received on the RDN will be placed into this data buffer.  The
 * first COMP_DATA register contains the RDN header (but no data bytes).  The
 * remaining 8 data registers contain any data from the RDN packet.Any data
 * received on the RDN will be placed into this data buffer.  The first
 * COMP_DATA register contains the RDN header.
 */
#define RSH_PG_COMP_DATA_5__FIRST_WORD 0x0438
#define RSH_PG_COMP_DATA_5__LAST_WORD 0x0478

#define RSH_PG_COMP_DATA_5__DATA_SHIFT 0
#define RSH_PG_COMP_DATA_5__DATA_WIDTH 64
#define RSH_PG_COMP_DATA_5__DATA_RESET_VAL 0
#define RSH_PG_COMP_DATA_5__DATA_RMASK _64bit(0xffffffffffffffff)
#define RSH_PG_COMP_DATA_5__DATA_MASK  _64bit(0xffffffffffffffff)
#define RSH_PG_COMP_DATA_5__DATA_FIELD 0,63


/*
 * Packet Generator Completion Data.
 * Any data received on the RDN will be placed into this data buffer.  The
 * first COMP_DATA register contains the RDN header (but no data bytes).  The
 * remaining 8 data registers contain any data from the RDN packet.Any data
 * received on the RDN will be placed into this data buffer.  The first
 * COMP_DATA register contains the RDN header.
 */
#define RSH_PG_COMP_DATA_6__FIRST_WORD 0x0440
#define RSH_PG_COMP_DATA_6__LAST_WORD 0x0480

#define RSH_PG_COMP_DATA_6__DATA_SHIFT 0
#define RSH_PG_COMP_DATA_6__DATA_WIDTH 64
#define RSH_PG_COMP_DATA_6__DATA_RESET_VAL 0
#define RSH_PG_COMP_DATA_6__DATA_RMASK _64bit(0xffffffffffffffff)
#define RSH_PG_COMP_DATA_6__DATA_MASK  _64bit(0xffffffffffffffff)
#define RSH_PG_COMP_DATA_6__DATA_FIELD 0,63


/*
 * Packet Generator Completion Data.
 * Any data received on the RDN will be placed into this data buffer.  The
 * first COMP_DATA register contains the RDN header (but no data bytes).  The
 * remaining 8 data registers contain any data from the RDN packet.Any data
 * received on the RDN will be placed into this data buffer.  The first
 * COMP_DATA register contains the RDN header.
 */
#define RSH_PG_COMP_DATA_7__FIRST_WORD 0x0448
#define RSH_PG_COMP_DATA_7__LAST_WORD 0x0488

#define RSH_PG_COMP_DATA_7__DATA_SHIFT 0
#define RSH_PG_COMP_DATA_7__DATA_WIDTH 64
#define RSH_PG_COMP_DATA_7__DATA_RESET_VAL 0
#define RSH_PG_COMP_DATA_7__DATA_RMASK _64bit(0xffffffffffffffff)
#define RSH_PG_COMP_DATA_7__DATA_MASK  _64bit(0xffffffffffffffff)
#define RSH_PG_COMP_DATA_7__DATA_FIELD 0,63


/*
 * Packet Generator Completion Data.
 * Any data received on the RDN will be placed into this data buffer.  The
 * first COMP_DATA register contains the RDN header (but no data bytes).  The
 * remaining 8 data registers contain any data from the RDN packet.Any data
 * received on the RDN will be placed into this data buffer.  The first
 * COMP_DATA register contains the RDN header.
 */
#define RSH_PG_COMP_DATA_8__FIRST_WORD 0x0450
#define RSH_PG_COMP_DATA_8__LAST_WORD 0x0490

#define RSH_PG_COMP_DATA_8__DATA_SHIFT 0
#define RSH_PG_COMP_DATA_8__DATA_WIDTH 64
#define RSH_PG_COMP_DATA_8__DATA_RESET_VAL 0
#define RSH_PG_COMP_DATA_8__DATA_RMASK _64bit(0xffffffffffffffff)
#define RSH_PG_COMP_DATA_8__DATA_MASK  _64bit(0xffffffffffffffff)
#define RSH_PG_COMP_DATA_8__DATA_FIELD 0,63


/*
 * Packet Generator Completion Status.
 * This register contains status information for completions that have been
 * captured from the RDN.
 */
#define RSH_PG_COMP_STS 0x0480

#define RSH_PG_COMP_STS__COUNT_SHIFT 0
#define RSH_PG_COMP_STS__COUNT_WIDTH 16
#define RSH_PG_COMP_STS__COUNT_RESET_VAL 0
#define RSH_PG_COMP_STS__COUNT_RMASK 0xffff
#define RSH_PG_COMP_STS__COUNT_MASK  0xffff
#define RSH_PG_COMP_STS__COUNT_FIELD 0,15

#define RSH_PG_COMP_STS__SIZE_SHIFT 16
#define RSH_PG_COMP_STS__SIZE_WIDTH 3
#define RSH_PG_COMP_STS__SIZE_RESET_VAL 0
#define RSH_PG_COMP_STS__SIZE_RMASK 0x7
#define RSH_PG_COMP_STS__SIZE_MASK  0x70000
#define RSH_PG_COMP_STS__SIZE_FIELD 16,18


/*
 * Packet Generator Control.
 * Configuration of the packet generator
 */
#define RSH_PG_CTL 0x0400

#define RSH_PG_CTL__SEND_SHIFT 0
#define RSH_PG_CTL__SEND_WIDTH 1
#define RSH_PG_CTL__SEND_RESET_VAL 0
#define RSH_PG_CTL__SEND_RMASK 0x1
#define RSH_PG_CTL__SEND_MASK  0x1
#define RSH_PG_CTL__SEND_FIELD 0,0

#define RSH_PG_CTL__NW_SEL_SHIFT 1
#define RSH_PG_CTL__NW_SEL_WIDTH 3
#define RSH_PG_CTL__NW_SEL_RESET_VAL 4
#define RSH_PG_CTL__NW_SEL_RMASK 0x7
#define RSH_PG_CTL__NW_SEL_MASK  0xe
#define RSH_PG_CTL__NW_SEL_FIELD 1,3
#define RSH_PG_CTL__NW_SEL_VAL_QDN 0x0
#define RSH_PG_CTL__NW_SEL_VAL_RDN 0x1
#define RSH_PG_CTL__NW_SEL_VAL_SDN 0x2
#define RSH_PG_CTL__NW_SEL_VAL_IDN 0x3
#define RSH_PG_CTL__NW_SEL_VAL_UDN 0x4

#define RSH_PG_CTL__PKT_WORDS_SHIFT 4
#define RSH_PG_CTL__PKT_WORDS_WIDTH 4
#define RSH_PG_CTL__PKT_WORDS_RESET_VAL 2
#define RSH_PG_CTL__PKT_WORDS_RMASK 0xf
#define RSH_PG_CTL__PKT_WORDS_MASK  0xf0
#define RSH_PG_CTL__PKT_WORDS_FIELD 4,7

#define RSH_PG_CTL__START_IDX_SHIFT 8
#define RSH_PG_CTL__START_IDX_WIDTH 4
#define RSH_PG_CTL__START_IDX_RESET_VAL 1
#define RSH_PG_CTL__START_IDX_RMASK 0xf
#define RSH_PG_CTL__START_IDX_MASK  0xf00
#define RSH_PG_CTL__START_IDX_FIELD 8,11

#define RSH_PG_CTL__AUTO_SEND_SHIFT 12
#define RSH_PG_CTL__AUTO_SEND_WIDTH 1
#define RSH_PG_CTL__AUTO_SEND_RESET_VAL 1
#define RSH_PG_CTL__AUTO_SEND_RMASK 0x1
#define RSH_PG_CTL__AUTO_SEND_MASK  0x1000
#define RSH_PG_CTL__AUTO_SEND_FIELD 12,12

#define RSH_PG_CTL__AUTO_RTE_SHIFT 13
#define RSH_PG_CTL__AUTO_RTE_WIDTH 1
#define RSH_PG_CTL__AUTO_RTE_RESET_VAL 1
#define RSH_PG_CTL__AUTO_RTE_RMASK 0x1
#define RSH_PG_CTL__AUTO_RTE_MASK  0x2000
#define RSH_PG_CTL__AUTO_RTE_FIELD 13,13

#define RSH_PG_CTL__HFH_SHIFT 14
#define RSH_PG_CTL__HFH_WIDTH 1
#define RSH_PG_CTL__HFH_RESET_VAL 0
#define RSH_PG_CTL__HFH_RMASK 0x1
#define RSH_PG_CTL__HFH_MASK  0x4000
#define RSH_PG_CTL__HFH_FIELD 14,14

#define RSH_PG_CTL__X_FIRST_SHIFT 15
#define RSH_PG_CTL__X_FIRST_WIDTH 1
#define RSH_PG_CTL__X_FIRST_RESET_VAL 1
#define RSH_PG_CTL__X_FIRST_RMASK 0x1
#define RSH_PG_CTL__X_FIRST_MASK  0x8000
#define RSH_PG_CTL__X_FIRST_FIELD 15,15

#define RSH_PG_CTL__DATA_IDX_SHIFT 32
#define RSH_PG_CTL__DATA_IDX_WIDTH 4
#define RSH_PG_CTL__DATA_IDX_RESET_VAL 1
#define RSH_PG_CTL__DATA_IDX_RMASK 0xf
#define RSH_PG_CTL__DATA_IDX_MASK  _64bit(0xf00000000)
#define RSH_PG_CTL__DATA_IDX_FIELD 32,35

#define RSH_PG_CTL__SENT_COUNT_SHIFT 48
#define RSH_PG_CTL__SENT_COUNT_WIDTH 16
#define RSH_PG_CTL__SENT_COUNT_RESET_VAL 0
#define RSH_PG_CTL__SENT_COUNT_RMASK 0xffff
#define RSH_PG_CTL__SENT_COUNT_MASK  _64bit(0xffff000000000000)
#define RSH_PG_CTL__SENT_COUNT_FIELD 48,63


/*
 * Packet Generator Data.
 * 10 Data words for packet generator.  The data word to be read or written
 * is indexed by PG_CTL.DATA_IDX.  The DATA_IDX is incremented automatically
 * on each access.  Note that R/SDN packets each use two data words per
 * packet flit. If either the PG_CTL.AUTO_SEND or the PG_CTL.FIFO_MODE is 1,
 * writes to PG_DATA go into the boot FIFO.  Similarly, if the
 * PG_CTL.FIFO_MODE is 1, reads to PG_DATA pop one word from the FIFO. In
 * this case, if the FIFO is empty, the read will return all 1's and the FIFO
 * state will not be affected.
 */
#define RSH_PG_DATA 0x0408

#define RSH_PG_DATA__PG_DATA_SHIFT 0
#define RSH_PG_DATA__PG_DATA_WIDTH 64
#define RSH_PG_DATA__PG_DATA_RESET_VAL 0
#define RSH_PG_DATA__PG_DATA_RMASK _64bit(0xffffffffffffffff)
#define RSH_PG_DATA__PG_DATA_MASK  _64bit(0xffffffffffffffff)
#define RSH_PG_DATA__PG_DATA_FIELD 0,63


/*
 * Pseudo-Rand.
 * Provides a pseudo-random 64-bit value in the range of [1..(2**64)-1] using
 * a 64-bit LFSR (taps are 64,63,61,60).
 */
#define RSH_PSEUDO_RAND 0x0620

#define RSH_PSEUDO_RAND__PSEUDO_RAND_SHIFT 0
#define RSH_PSEUDO_RAND__PSEUDO_RAND_WIDTH 64
#define RSH_PSEUDO_RAND__PSEUDO_RAND_RESET_VAL 0
#define RSH_PSEUDO_RAND__PSEUDO_RAND_RMASK _64bit(0xffffffffffffffff)
#define RSH_PSEUDO_RAND__PSEUDO_RAND_MASK  _64bit(0xffffffffffffffff)
#define RSH_PSEUDO_RAND__PSEUDO_RAND_FIELD 0,63


/* Pseudo-Rand Control. */
#define RSH_PSEUDO_RAND_CONTROL 0x0628

#define RSH_PSEUDO_RAND_CONTROL__P_RAND_MODE_SHIFT 0
#define RSH_PSEUDO_RAND_CONTROL__P_RAND_MODE_WIDTH 1
#define RSH_PSEUDO_RAND_CONTROL__P_RAND_MODE_RESET_VAL 0
#define RSH_PSEUDO_RAND_CONTROL__P_RAND_MODE_RMASK 0x1
#define RSH_PSEUDO_RAND_CONTROL__P_RAND_MODE_MASK  0x1
#define RSH_PSEUDO_RAND_CONTROL__P_RAND_MODE_FIELD 0,0


/* Reset Control. */
#define RSH_RESET_CONTROL 0x0500

#define RSH_RESET_CONTROL__RESET_CHIP_SHIFT 0
#define RSH_RESET_CONTROL__RESET_CHIP_WIDTH 32
#define RSH_RESET_CONTROL__RESET_CHIP_RESET_VAL 0
#define RSH_RESET_CONTROL__RESET_CHIP_RMASK 0xffffffff
#define RSH_RESET_CONTROL__RESET_CHIP_MASK  0xffffffff
#define RSH_RESET_CONTROL__RESET_CHIP_FIELD 0,31
#define RSH_RESET_CONTROL__RESET_CHIP_VAL_KEY 0xca710001


/*
 * Reset MASK.
 * Each bit corresponds to a device or function within a device.  The bit
 * assignments match the IO_RESET register.   Any devices or functions
 * corresponding to bits that are set will NOT be reset when RESET_CONTROL is
 * used to issue a software reset.   Software must insure that any associated
 * devices have been properly quiesced prior to issuing a RESET_CHIP with any
 * RESET_MASK bits set.  This register is reset by hard_rst_l but not
 * software reset.
 */
#define RSH_RESET_MASK 0x0508

#define RSH_RESET_MASK__RESET_MASK_SHIFT 0
#define RSH_RESET_MASK__RESET_MASK_WIDTH 64
#define RSH_RESET_MASK__RESET_MASK_RESET_VAL 0
#define RSH_RESET_MASK__RESET_MASK_RMASK _64bit(0xffffffffffffffff)
#define RSH_RESET_MASK__RESET_MASK_MASK  _64bit(0xffffffffffffffff)
#define RSH_RESET_MASK__RESET_MASK_FIELD 0,63


/*
 * Rev ID.
 * Tile Revision
 */
#define RSH_REV_ID 0x0100

#define RSH_REV_ID__TILE_REV_ID_SHIFT 0
#define RSH_REV_ID__TILE_REV_ID_WIDTH 8
#define RSH_REV_ID__TILE_REV_ID_RMASK 0xff
#define RSH_REV_ID__TILE_REV_ID_MASK  0xff
#define RSH_REV_ID__TILE_REV_ID_FIELD 0,7
#define RSH_REV_ID__TILE_REV_ID_VAL_TILE64 0x0
#define RSH_REV_ID__TILE_REV_ID_VAL_TILEPRO 0x10
#define RSH_REV_ID__TILE_REV_ID_VAL_TILEGX 0x20

#define RSH_REV_ID__CHIP_REV_ID_SHIFT 8
#define RSH_REV_ID__CHIP_REV_ID_WIDTH 8
#define RSH_REV_ID__CHIP_REV_ID_RMASK 0xff
#define RSH_REV_ID__CHIP_REV_ID_MASK  0xff00
#define RSH_REV_ID__CHIP_REV_ID_FIELD 8,15
#define RSH_REV_ID__CHIP_REV_ID_VAL_TILE64 0x0
#define RSH_REV_ID__CHIP_REV_ID_VAL_TILEPRO 0x10
#define RSH_REV_ID__CHIP_REV_ID_VAL_TILEGX36 0x20
#define RSH_REV_ID__CHIP_REV_ID_VAL_TILEGX72 0x40


/* Scratchpad. */
#define RSH_SCRATCHPAD 0x0020

#define RSH_SCRATCHPAD__SCRATCHPAD_SHIFT 0
#define RSH_SCRATCHPAD__SCRATCHPAD_WIDTH 64
#define RSH_SCRATCHPAD__SCRATCHPAD_RESET_VAL 0
#define RSH_SCRATCHPAD__SCRATCHPAD_RMASK _64bit(0xffffffffffffffff)
#define RSH_SCRATCHPAD__SCRATCHPAD_MASK  _64bit(0xffffffffffffffff)
#define RSH_SCRATCHPAD__SCRATCHPAD_FIELD 0,63


/*
 * Scratch buffer control.
 * Controls R/W access to scratch buffer.
 */
#define RSH_SCRATCH_BUF_CTL 0x0600

#define RSH_SCRATCH_BUF_CTL__IDX_SHIFT 0
#define RSH_SCRATCH_BUF_CTL__IDX_WIDTH 7
#define RSH_SCRATCH_BUF_CTL__IDX_RESET_VAL 0
#define RSH_SCRATCH_BUF_CTL__IDX_RMASK 0x7f
#define RSH_SCRATCH_BUF_CTL__IDX_MASK  0x7f
#define RSH_SCRATCH_BUF_CTL__IDX_FIELD 0,6


/*
 * Scratch buffer data.
 * Read/Write data for scratch buffer
 */
#define RSH_SCRATCH_BUF_DAT 0x0610

#define RSH_SCRATCH_BUF_DAT__SCRATCH_BUF_DAT_SHIFT 0
#define RSH_SCRATCH_BUF_DAT__SCRATCH_BUF_DAT_WIDTH 64
#define RSH_SCRATCH_BUF_DAT__SCRATCH_BUF_DAT_RMASK _64bit(0xffffffffffffffff)
#define RSH_SCRATCH_BUF_DAT__SCRATCH_BUF_DAT_MASK  _64bit(0xffffffffffffffff)
#define RSH_SCRATCH_BUF_DAT__SCRATCH_BUF_DAT_FIELD 0,63


/*
 * Semaphore0.
 * Semaphore
 */
#define RSH_SEMAPHORE0 0x0028

#define RSH_SEMAPHORE0__VAL_SHIFT 0
#define RSH_SEMAPHORE0__VAL_WIDTH 1
#define RSH_SEMAPHORE0__VAL_RESET_VAL 0
#define RSH_SEMAPHORE0__VAL_RMASK 0x1
#define RSH_SEMAPHORE0__VAL_MASK  0x1
#define RSH_SEMAPHORE0__VAL_FIELD 0,0


/*
 * Semaphore1.
 * Semaphore
 */
#define RSH_SEMAPHORE1 0x0030

#define RSH_SEMAPHORE1__VAL_SHIFT 0
#define RSH_SEMAPHORE1__VAL_WIDTH 1
#define RSH_SEMAPHORE1__VAL_RESET_VAL 0
#define RSH_SEMAPHORE1__VAL_RMASK 0x1
#define RSH_SEMAPHORE1__VAL_MASK  0x1
#define RSH_SEMAPHORE1__VAL_FIELD 0,0


/*
 * Software Interrupt.
 * Used to trigger interrupts via register write.  Each bit corresponds to a
 * single SWINT interrupt which will be triggered when written with a 1.
 */
#define RSH_SWINT 0x0318

#define RSH_SWINT__SWINT_SHIFT 0
#define RSH_SWINT__SWINT_WIDTH 4
#define RSH_SWINT__SWINT_RESET_VAL 0
#define RSH_SWINT__SWINT_RMASK 0xf
#define RSH_SWINT__SWINT_MASK  0xf
#define RSH_SWINT__SWINT_FIELD 0,3


/*
 * Tile Disable.
 * Disable individual Tiles. When set, the associated Tile is disabled.
 * There is one register per column.  Not all devices implement all possible
 * rows and columns.
 */
#define RSH_TILE_COL_DISABLE__FIRST_WORD 0x0b00
#define RSH_TILE_COL_DISABLE__LAST_WORD 0x0b48

#define RSH_TILE_COL_DISABLE__DISABLE_SHIFT 0
#define RSH_TILE_COL_DISABLE__DISABLE_WIDTH 10
#define RSH_TILE_COL_DISABLE__DISABLE_RMASK 0x3ff
#define RSH_TILE_COL_DISABLE__DISABLE_MASK  0x3ff
#define RSH_TILE_COL_DISABLE__DISABLE_FIELD 0,9


/*
 * Tile Disable.
 * Disable individual Tiles. When set, the associated Tile is disabled.
 * There is one register per column.  Not all devices implement all possible
 * rows and columns.
 */
#define RSH_TILE_COL_DISABLE_1__FIRST_WORD 0x0b08
#define RSH_TILE_COL_DISABLE_1__LAST_WORD 0x0b50

#define RSH_TILE_COL_DISABLE_1__DISABLE_SHIFT 0
#define RSH_TILE_COL_DISABLE_1__DISABLE_WIDTH 10
#define RSH_TILE_COL_DISABLE_1__DISABLE_RMASK 0x3ff
#define RSH_TILE_COL_DISABLE_1__DISABLE_MASK  0x3ff
#define RSH_TILE_COL_DISABLE_1__DISABLE_FIELD 0,9


/*
 * Tile Disable.
 * Disable individual Tiles. When set, the associated Tile is disabled.
 * There is one register per column.  Not all devices implement all possible
 * rows and columns.
 */
#define RSH_TILE_COL_DISABLE_2__FIRST_WORD 0x0b10
#define RSH_TILE_COL_DISABLE_2__LAST_WORD 0x0b58

#define RSH_TILE_COL_DISABLE_2__DISABLE_SHIFT 0
#define RSH_TILE_COL_DISABLE_2__DISABLE_WIDTH 10
#define RSH_TILE_COL_DISABLE_2__DISABLE_RMASK 0x3ff
#define RSH_TILE_COL_DISABLE_2__DISABLE_MASK  0x3ff
#define RSH_TILE_COL_DISABLE_2__DISABLE_FIELD 0,9


/*
 * Tile Disable.
 * Disable individual Tiles. When set, the associated Tile is disabled.
 * There is one register per column.  Not all devices implement all possible
 * rows and columns.
 */
#define RSH_TILE_COL_DISABLE_3__FIRST_WORD 0x0b18
#define RSH_TILE_COL_DISABLE_3__LAST_WORD 0x0b60

#define RSH_TILE_COL_DISABLE_3__DISABLE_SHIFT 0
#define RSH_TILE_COL_DISABLE_3__DISABLE_WIDTH 10
#define RSH_TILE_COL_DISABLE_3__DISABLE_RMASK 0x3ff
#define RSH_TILE_COL_DISABLE_3__DISABLE_MASK  0x3ff
#define RSH_TILE_COL_DISABLE_3__DISABLE_FIELD 0,9


/*
 * Tile Disable.
 * Disable individual Tiles. When set, the associated Tile is disabled.
 * There is one register per column.  Not all devices implement all possible
 * rows and columns.
 */
#define RSH_TILE_COL_DISABLE_4__FIRST_WORD 0x0b20
#define RSH_TILE_COL_DISABLE_4__LAST_WORD 0x0b68

#define RSH_TILE_COL_DISABLE_4__DISABLE_SHIFT 0
#define RSH_TILE_COL_DISABLE_4__DISABLE_WIDTH 10
#define RSH_TILE_COL_DISABLE_4__DISABLE_RMASK 0x3ff
#define RSH_TILE_COL_DISABLE_4__DISABLE_MASK  0x3ff
#define RSH_TILE_COL_DISABLE_4__DISABLE_FIELD 0,9


/*
 * Tile Disable.
 * Disable individual Tiles. When set, the associated Tile is disabled.
 * There is one register per column.  Not all devices implement all possible
 * rows and columns.
 */
#define RSH_TILE_COL_DISABLE_5__FIRST_WORD 0x0b28
#define RSH_TILE_COL_DISABLE_5__LAST_WORD 0x0b70

#define RSH_TILE_COL_DISABLE_5__DISABLE_SHIFT 0
#define RSH_TILE_COL_DISABLE_5__DISABLE_WIDTH 10
#define RSH_TILE_COL_DISABLE_5__DISABLE_RMASK 0x3ff
#define RSH_TILE_COL_DISABLE_5__DISABLE_MASK  0x3ff
#define RSH_TILE_COL_DISABLE_5__DISABLE_FIELD 0,9


/*
 * Tile Disable.
 * Disable individual Tiles. When set, the associated Tile is disabled.
 * There is one register per column.  Not all devices implement all possible
 * rows and columns.
 */
#define RSH_TILE_COL_DISABLE_6__FIRST_WORD 0x0b30
#define RSH_TILE_COL_DISABLE_6__LAST_WORD 0x0b78

#define RSH_TILE_COL_DISABLE_6__DISABLE_SHIFT 0
#define RSH_TILE_COL_DISABLE_6__DISABLE_WIDTH 10
#define RSH_TILE_COL_DISABLE_6__DISABLE_RMASK 0x3ff
#define RSH_TILE_COL_DISABLE_6__DISABLE_MASK  0x3ff
#define RSH_TILE_COL_DISABLE_6__DISABLE_FIELD 0,9


/*
 * Tile Disable.
 * Disable individual Tiles. When set, the associated Tile is disabled.
 * There is one register per column.  Not all devices implement all possible
 * rows and columns.
 */
#define RSH_TILE_COL_DISABLE_7__FIRST_WORD 0x0b38
#define RSH_TILE_COL_DISABLE_7__LAST_WORD 0x0b80

#define RSH_TILE_COL_DISABLE_7__DISABLE_SHIFT 0
#define RSH_TILE_COL_DISABLE_7__DISABLE_WIDTH 10
#define RSH_TILE_COL_DISABLE_7__DISABLE_RMASK 0x3ff
#define RSH_TILE_COL_DISABLE_7__DISABLE_MASK  0x3ff
#define RSH_TILE_COL_DISABLE_7__DISABLE_FIELD 0,9


/*
 * Tile Disable.
 * Disable individual Tiles. When set, the associated Tile is disabled.
 * There is one register per column.  Not all devices implement all possible
 * rows and columns.
 */
#define RSH_TILE_COL_DISABLE_8__FIRST_WORD 0x0b40
#define RSH_TILE_COL_DISABLE_8__LAST_WORD 0x0b88

#define RSH_TILE_COL_DISABLE_8__DISABLE_SHIFT 0
#define RSH_TILE_COL_DISABLE_8__DISABLE_WIDTH 10
#define RSH_TILE_COL_DISABLE_8__DISABLE_RMASK 0x3ff
#define RSH_TILE_COL_DISABLE_8__DISABLE_MASK  0x3ff
#define RSH_TILE_COL_DISABLE_8__DISABLE_FIELD 0,9


/*
 * Tile Disable.
 * Disable individual Tiles. When set, the associated Tile is disabled.
 * There is one register per column.  Not all devices implement all possible
 * rows and columns.
 */
#define RSH_TILE_COL_DISABLE_9__FIRST_WORD 0x0b48
#define RSH_TILE_COL_DISABLE_9__LAST_WORD 0x0b90

#define RSH_TILE_COL_DISABLE_9__DISABLE_SHIFT 0
#define RSH_TILE_COL_DISABLE_9__DISABLE_WIDTH 10
#define RSH_TILE_COL_DISABLE_9__DISABLE_RMASK 0x3ff
#define RSH_TILE_COL_DISABLE_9__DISABLE_MASK  0x3ff
#define RSH_TILE_COL_DISABLE_9__DISABLE_FIELD 0,9


/*
 * TileMonitor Host to Tile Control.
 * Provides control over FIFO interrupts.  Note that the HWM/LWM interrupts
 * trigger continuously as long as the FIFO is is at or above/below the
 * associated water mark.  Thus these interrupts are typically used in
 * INT_BIND.MODE=0 and should be cleared by SW after the condition has been
 * handled (FIFO filled/drained as appropriate).
 */
#define RSH_TM_HOST_TO_TILE_CTL 0x0a30

#define RSH_TM_HOST_TO_TILE_CTL__LWM_SHIFT 0
#define RSH_TM_HOST_TO_TILE_CTL__LWM_WIDTH 8
#define RSH_TM_HOST_TO_TILE_CTL__LWM_RESET_VAL 128
#define RSH_TM_HOST_TO_TILE_CTL__LWM_RMASK 0xff
#define RSH_TM_HOST_TO_TILE_CTL__LWM_MASK  0xff
#define RSH_TM_HOST_TO_TILE_CTL__LWM_FIELD 0,7

#define RSH_TM_HOST_TO_TILE_CTL__HWM_SHIFT 8
#define RSH_TM_HOST_TO_TILE_CTL__HWM_WIDTH 8
#define RSH_TM_HOST_TO_TILE_CTL__HWM_RESET_VAL 128
#define RSH_TM_HOST_TO_TILE_CTL__HWM_RMASK 0xff
#define RSH_TM_HOST_TO_TILE_CTL__HWM_MASK  0xff00
#define RSH_TM_HOST_TO_TILE_CTL__HWM_FIELD 8,15

#define RSH_TM_HOST_TO_TILE_CTL__MAX_ENTRIES_SHIFT 32
#define RSH_TM_HOST_TO_TILE_CTL__MAX_ENTRIES_WIDTH 9
#define RSH_TM_HOST_TO_TILE_CTL__MAX_ENTRIES_RESET_VAL 256
#define RSH_TM_HOST_TO_TILE_CTL__MAX_ENTRIES_RMASK 0x1ff
#define RSH_TM_HOST_TO_TILE_CTL__MAX_ENTRIES_MASK  _64bit(0x1ff00000000)
#define RSH_TM_HOST_TO_TILE_CTL__MAX_ENTRIES_FIELD 32,40


/*
 * TileMonitor Host to Tile Data.
 * Provides read/write access to the HostToTile FIFO.  When written, the
 * TileMonitor HostToTile FIFO will be written with the associated data and
 * the WPTR will be advanced.  When read, the entry at the head of the FIFO
 * will be returned and the RPTR will be advanced.
 *
 * When empty, reads will have no effect.  Behavior on an empty read is
 * device dependent.  Tile software will receive all 1's on an empty read.
 *
 * When full, writes will be ignored.  Behavior on a full write is device
 * dependent.
 *
 * For Gx9/16/36/72 devices, this FIFO may only be used when PG.AUTO_SEND is
 * zero (packet generator not in boot mode).
 *
 * The FIFO may be drained by reading TM_HOST_TO_TILE_STS.COUNT entries.
 */
#define RSH_TM_HOST_TO_TILE_DATA 0x0a20

#define RSH_TM_HOST_TO_TILE_DATA__TM_HOST_TO_TILE_DATA_SHIFT 0
#define RSH_TM_HOST_TO_TILE_DATA__TM_HOST_TO_TILE_DATA_WIDTH 64
#define RSH_TM_HOST_TO_TILE_DATA__TM_HOST_TO_TILE_DATA_RESET_VAL 0
#define RSH_TM_HOST_TO_TILE_DATA__TM_HOST_TO_TILE_DATA_RMASK _64bit(0xffffffffffffffff)
#define RSH_TM_HOST_TO_TILE_DATA__TM_HOST_TO_TILE_DATA_MASK  _64bit(0xffffffffffffffff)
#define RSH_TM_HOST_TO_TILE_DATA__TM_HOST_TO_TILE_DATA_FIELD 0,63


/*
 * TileMonitor Host to Tile Status.
 * Provides status of the HostToTile TileMonitor FIFO.
 */
#define RSH_TM_HOST_TO_TILE_STS 0x0a28

#define RSH_TM_HOST_TO_TILE_STS__COUNT_SHIFT 0
#define RSH_TM_HOST_TO_TILE_STS__COUNT_WIDTH 9
#define RSH_TM_HOST_TO_TILE_STS__COUNT_RESET_VAL 0
#define RSH_TM_HOST_TO_TILE_STS__COUNT_RMASK 0x1ff
#define RSH_TM_HOST_TO_TILE_STS__COUNT_MASK  0x1ff
#define RSH_TM_HOST_TO_TILE_STS__COUNT_FIELD 0,8


/*
 * TileMonitor tile to host Control.
 * Provides control over FIFO interrupts.  Note that the HWM/LWM interrupts
 * trigger continuously as long as the FIFO is is at or above/below the
 * associated water mark.  Thus these interrupts are typically used in
 * INT_BIND.MODE=0 and should be cleared by SW after the condition has been
 * handled (FIFO filled/drained as appropriate).
 */
#define RSH_TM_TILE_TO_HOST_CTL 0x0a50

#define RSH_TM_TILE_TO_HOST_CTL__LWM_SHIFT 0
#define RSH_TM_TILE_TO_HOST_CTL__LWM_WIDTH 8
#define RSH_TM_TILE_TO_HOST_CTL__LWM_RESET_VAL 128
#define RSH_TM_TILE_TO_HOST_CTL__LWM_RMASK 0xff
#define RSH_TM_TILE_TO_HOST_CTL__LWM_MASK  0xff
#define RSH_TM_TILE_TO_HOST_CTL__LWM_FIELD 0,7

#define RSH_TM_TILE_TO_HOST_CTL__HWM_SHIFT 8
#define RSH_TM_TILE_TO_HOST_CTL__HWM_WIDTH 8
#define RSH_TM_TILE_TO_HOST_CTL__HWM_RESET_VAL 128
#define RSH_TM_TILE_TO_HOST_CTL__HWM_RMASK 0xff
#define RSH_TM_TILE_TO_HOST_CTL__HWM_MASK  0xff00
#define RSH_TM_TILE_TO_HOST_CTL__HWM_FIELD 8,15

#define RSH_TM_TILE_TO_HOST_CTL__MAX_ENTRIES_SHIFT 32
#define RSH_TM_TILE_TO_HOST_CTL__MAX_ENTRIES_WIDTH 9
#define RSH_TM_TILE_TO_HOST_CTL__MAX_ENTRIES_RESET_VAL 256
#define RSH_TM_TILE_TO_HOST_CTL__MAX_ENTRIES_RMASK 0x1ff
#define RSH_TM_TILE_TO_HOST_CTL__MAX_ENTRIES_MASK  _64bit(0x1ff00000000)
#define RSH_TM_TILE_TO_HOST_CTL__MAX_ENTRIES_FIELD 32,40


/*
 * TileMonitor tile to host Data.
 * Provides read/write access to the TileToHost FIFO.  When written, the
 * TileMonitor TileToHost FIFO will be written with the associated data and
 * the WPTR will be advanced.  When read, the entry at the head of the FIFO
 * will be returned and the RPTR will be advanced.
 *
 * When empty, reads will have no effect.  Behavior on an empty read is
 * device dependent.  Tile software will receive all 1's on an empty read.
 *
 * When full, writes will be ignored.  Behavior on a full write is device
 * dependent.
 *
 * For Gx9/16/36/72 devices, this FIFO may only be used when PG.AUTO_SEND is
 * zero (packet generator not in boot mode).
 *
 * The FIFO may be drained by reading TM_TILE_TO_HOST_STS.COUNT entries.
 */
#define RSH_TM_TILE_TO_HOST_DATA 0x0a40

#define RSH_TM_TILE_TO_HOST_DATA__TM_TILE_TO_HOST_DATA_SHIFT 0
#define RSH_TM_TILE_TO_HOST_DATA__TM_TILE_TO_HOST_DATA_WIDTH 64
#define RSH_TM_TILE_TO_HOST_DATA__TM_TILE_TO_HOST_DATA_RESET_VAL 0
#define RSH_TM_TILE_TO_HOST_DATA__TM_TILE_TO_HOST_DATA_RMASK _64bit(0xffffffffffffffff)
#define RSH_TM_TILE_TO_HOST_DATA__TM_TILE_TO_HOST_DATA_MASK  _64bit(0xffffffffffffffff)
#define RSH_TM_TILE_TO_HOST_DATA__TM_TILE_TO_HOST_DATA_FIELD 0,63


/*
 * TileMonitor tile to host status.
 * Provides status of the TileToHost TileMonitor FIFO.
 */
#define RSH_TM_TILE_TO_HOST_STS 0x0a48

#define RSH_TM_TILE_TO_HOST_STS__COUNT_SHIFT 0
#define RSH_TM_TILE_TO_HOST_STS__COUNT_WIDTH 9
#define RSH_TM_TILE_TO_HOST_STS__COUNT_RESET_VAL 0
#define RSH_TM_TILE_TO_HOST_STS__COUNT_RMASK 0x1ff
#define RSH_TM_TILE_TO_HOST_STS__COUNT_MASK  0x1ff
#define RSH_TM_TILE_TO_HOST_STS__COUNT_FIELD 0,8


/*
 * Uptime.
 * Provides core_refclk cycle count since last reset (either hard or soft).
 */
#define RSH_UPTIME 0x0630

#define RSH_UPTIME__UPTIME_SHIFT 0
#define RSH_UPTIME__UPTIME_WIDTH 56
#define RSH_UPTIME__UPTIME_RESET_VAL 0
#define RSH_UPTIME__UPTIME_RMASK _64bit(0xffffffffffffff)
#define RSH_UPTIME__UPTIME_MASK  _64bit(0xffffffffffffff)
#define RSH_UPTIME__UPTIME_FIELD 0,55


/*
 * Uptime.
 * Provides core_refclk cycle count since last hard_reset.  This register is
 * not reset on a software reset.
 */
#define RSH_UPTIME_POR 0x0638

#define RSH_UPTIME_POR__UPTIME_POR_SHIFT 0
#define RSH_UPTIME_POR__UPTIME_POR_WIDTH 56
#define RSH_UPTIME_POR__UPTIME_POR_RESET_VAL 0
#define RSH_UPTIME_POR__UPTIME_POR_RMASK _64bit(0xffffffffffffff)
#define RSH_UPTIME_POR__UPTIME_POR_MASK  _64bit(0xffffffffffffff)
#define RSH_UPTIME_POR__UPTIME_POR_FIELD 0,55


/*
 * VID Core.
 * This register provides the the value driven out on VDD_CORE pins, which
 * drive VID[5:0] of the core voltage regulator.  Note that the VR11 VID code
 * is 8-bits; VID[7:6] should be tied to 01 on the PC board.
 */
#define RSH_VID_CORE 0x0540

#define RSH_VID_CORE__VID_SHIFT 0
#define RSH_VID_CORE__VID_WIDTH 6
#define RSH_VID_CORE__VID_RESET_VAL 42
#define RSH_VID_CORE__VID_RMASK 0x3f
#define RSH_VID_CORE__VID_MASK  0x3f
#define RSH_VID_CORE__VID_FIELD 0,5


/*
 * VID for DDR DRAMs.
 * This register provides the value driven out on VDD_DDR pins, which drive
 * VID[6:3] of the DRAM voltage regulator.  Note that the VR11 VID code is
 * 8-bits; VID[7] should be tied to 0 and VID[2:0] tied to 010, respectively,
 * on the PC board.
 */
#define RSH_VID_DDR 0x0548

#define RSH_VID_DDR__VID_SHIFT 3
#define RSH_VID_DDR__VID_WIDTH 4
#define RSH_VID_DDR__VID_RESET_VAL 8
#define RSH_VID_DDR__VID_RMASK 0xf
#define RSH_VID_DDR__VID_MASK  0x78
#define RSH_VID_DDR__VID_FIELD 3,6


/* Watchdog Control. */
#define RSH_WATCHDOG_CONTROL 0x0530

#define RSH_WATCHDOG_CONTROL__RESET_ENA_SHIFT 0
#define RSH_WATCHDOG_CONTROL__RESET_ENA_WIDTH 3
#define RSH_WATCHDOG_CONTROL__RESET_ENA_RESET_VAL 0
#define RSH_WATCHDOG_CONTROL__RESET_ENA_RMASK 0x7
#define RSH_WATCHDOG_CONTROL__RESET_ENA_MASK  0x7
#define RSH_WATCHDOG_CONTROL__RESET_ENA_FIELD 0,2



#endif /* !defined(__ARCH_RSH_DEF_H__) */

/*
 * Copyright 2013 Tilera Corporation. All Rights Reserved.
 *
 *   This program is free software; you can redistribute it and/or
 *   modify it under the terms of the GNU General Public License
 *   as published by the Free Software Foundation, version 2.
 *
 *   This program is distributed in the hope that it will be useful, but
 *   WITHOUT ANY WARRANTY; without even the implied warranty of
 *   MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, GOOD TITLE or
 *   NON INFRINGEMENT.  See the GNU General Public License for
 *   more details.
 */

#ifndef __ARCH_USB_HOST_DEF_H__
#define __ARCH_USB_HOST_DEF_H__

#ifdef __ASSEMBLER__
#define _64bit(x) x
#else /* __ASSEMBLER__ */
#ifdef __tile__
#define _64bit(x) x ## UL
#else /* __tile__ */
#define _64bit(x) x ## ULL
#endif /* __tile__ */
#endif /* __ASSEMBLER */





/*
 * MMIO Address Space.
 * The MMIO physical address space for the USB is described below.  This is a
 * general description of the MMIO space as opposed to a register description
 */
#define USB_HOST_MMIO_ADDRESS_SPACE__FIRST_WORD 0x0000
#define USB_HOST_MMIO_ADDRESS_SPACE__LAST_WORD 0xfffffffff8

#define USB_HOST_MMIO_ADDRESS_SPACE__OFFSET_SHIFT 0
#define USB_HOST_MMIO_ADDRESS_SPACE__OFFSET_WIDTH 18
#define USB_HOST_MMIO_ADDRESS_SPACE__OFFSET_RESET_VAL 0
#define USB_HOST_MMIO_ADDRESS_SPACE__OFFSET_RMASK 0x3ffff
#define USB_HOST_MMIO_ADDRESS_SPACE__OFFSET_MASK  0x3ffff
#define USB_HOST_MMIO_ADDRESS_SPACE__OFFSET_FIELD 0,17

#define USB_HOST_MMIO_ADDRESS_SPACE__PROT_SHIFT 18
#define USB_HOST_MMIO_ADDRESS_SPACE__PROT_WIDTH 2
#define USB_HOST_MMIO_ADDRESS_SPACE__PROT_RESET_VAL 0
#define USB_HOST_MMIO_ADDRESS_SPACE__PROT_RMASK 0x3
#define USB_HOST_MMIO_ADDRESS_SPACE__PROT_MASK  0xc0000
#define USB_HOST_MMIO_ADDRESS_SPACE__PROT_FIELD 18,19

#define USB_HOST_MMIO_ADDRESS_SPACE__CHANNEL_SHIFT 38
#define USB_HOST_MMIO_ADDRESS_SPACE__CHANNEL_WIDTH 2
#define USB_HOST_MMIO_ADDRESS_SPACE__CHANNEL_RESET_VAL 0
#define USB_HOST_MMIO_ADDRESS_SPACE__CHANNEL_RMASK 0x3
#define USB_HOST_MMIO_ADDRESS_SPACE__CHANNEL_MASK  _64bit(0xc000000000)
#define USB_HOST_MMIO_ADDRESS_SPACE__CHANNEL_FIELD 38,39
#define USB_HOST_MMIO_ADDRESS_SPACE__CHANNEL_VAL_USBS0 0x0
#define USB_HOST_MMIO_ADDRESS_SPACE__CHANNEL_VAL_USBH0 0x1
#define USB_HOST_MMIO_ADDRESS_SPACE__CHANNEL_VAL_USBH1 0x2


/*
 * ASYNCLISTADDR_REG.
 * Asynchronous List Address
 */
#define USB_HOST_ASYNCLISTADDR_REG 0x10028

#define USB_HOST_ASYNCLISTADDR_REG__ASYNCLISTADDR_REG_SHIFT 0
#define USB_HOST_ASYNCLISTADDR_REG__ASYNCLISTADDR_REG_WIDTH 32
#define USB_HOST_ASYNCLISTADDR_REG__ASYNCLISTADDR_REG_RESET_VAL 0
#define USB_HOST_ASYNCLISTADDR_REG__ASYNCLISTADDR_REG_RMASK 0xffffffff
#define USB_HOST_ASYNCLISTADDR_REG__ASYNCLISTADDR_REG_MASK  0xffffffff
#define USB_HOST_ASYNCLISTADDR_REG__ASYNCLISTADDR_REG_FIELD 0,31


/* Clock Count. */
#define USB_HOST_CLOCK_COUNT 0x0038

#define USB_HOST_CLOCK_COUNT__RUN_SHIFT 0
#define USB_HOST_CLOCK_COUNT__RUN_WIDTH 1
#define USB_HOST_CLOCK_COUNT__RUN_RESET_VAL 0
#define USB_HOST_CLOCK_COUNT__RUN_RMASK 0x1
#define USB_HOST_CLOCK_COUNT__RUN_MASK  0x1
#define USB_HOST_CLOCK_COUNT__RUN_FIELD 0,0

#define USB_HOST_CLOCK_COUNT__COUNT_SHIFT 1
#define USB_HOST_CLOCK_COUNT__COUNT_WIDTH 15
#define USB_HOST_CLOCK_COUNT__COUNT_RESET_VAL 0
#define USB_HOST_CLOCK_COUNT__COUNT_RMASK 0x7fff
#define USB_HOST_CLOCK_COUNT__COUNT_MASK  0xfffe
#define USB_HOST_CLOCK_COUNT__COUNT_FIELD 1,15


/*
 * CONFIGFLAG_REG.
 * Configured Flag Register
 */
#define USB_HOST_CONFIGFLAG_REG 0x10050

#define USB_HOST_CONFIGFLAG_REG__CONFIGFLAG_REG_SHIFT 0
#define USB_HOST_CONFIGFLAG_REG__CONFIGFLAG_REG_WIDTH 32
#define USB_HOST_CONFIGFLAG_REG__CONFIGFLAG_REG_RESET_VAL 0
#define USB_HOST_CONFIGFLAG_REG__CONFIGFLAG_REG_RMASK 0xffffffff
#define USB_HOST_CONFIGFLAG_REG__CONFIGFLAG_REG_MASK  0xffffffff
#define USB_HOST_CONFIGFLAG_REG__CONFIGFLAG_REG_FIELD 0,31


/*
 * USB CSR.
 * USB Configuration
 */
#define USB_HOST_CSR 0x0608

#define USB_HOST_CSR__SINGLE_WRITE_SHIFT 0
#define USB_HOST_CSR__SINGLE_WRITE_WIDTH 1
#define USB_HOST_CSR__SINGLE_WRITE_RESET_VAL 0
#define USB_HOST_CSR__SINGLE_WRITE_RMASK 0x1
#define USB_HOST_CSR__SINGLE_WRITE_MASK  0x1
#define USB_HOST_CSR__SINGLE_WRITE_FIELD 0,0

#define USB_HOST_CSR__SINGLE_READ_SHIFT 1
#define USB_HOST_CSR__SINGLE_READ_WIDTH 1
#define USB_HOST_CSR__SINGLE_READ_RESET_VAL 0
#define USB_HOST_CSR__SINGLE_READ_RMASK 0x1
#define USB_HOST_CSR__SINGLE_READ_MASK  0x2
#define USB_HOST_CSR__SINGLE_READ_FIELD 1,1

#define USB_HOST_CSR__SINGLE_ORDER_READ_SHIFT 2
#define USB_HOST_CSR__SINGLE_ORDER_READ_WIDTH 1
#define USB_HOST_CSR__SINGLE_ORDER_READ_RESET_VAL 0
#define USB_HOST_CSR__SINGLE_ORDER_READ_RMASK 0x1
#define USB_HOST_CSR__SINGLE_ORDER_READ_MASK  0x4
#define USB_HOST_CSR__SINGLE_ORDER_READ_FIELD 2,2


/*
 * CTRLDSSEGMENT_REG.
 * 4G Segment Selector
 */
#define USB_HOST_CTRLDSSEGMENT_REG 0x10020

#define USB_HOST_CTRLDSSEGMENT_REG__CTRLDSSEGMENT_REG_SHIFT 0
#define USB_HOST_CTRLDSSEGMENT_REG__CTRLDSSEGMENT_REG_WIDTH 32
#define USB_HOST_CTRLDSSEGMENT_REG__CTRLDSSEGMENT_REG_RESET_VAL 0
#define USB_HOST_CTRLDSSEGMENT_REG__CTRLDSSEGMENT_REG_RMASK 0xffffffff
#define USB_HOST_CTRLDSSEGMENT_REG__CTRLDSSEGMENT_REG_MASK  0xffffffff
#define USB_HOST_CTRLDSSEGMENT_REG__CTRLDSSEGMENT_REG_FIELD 0,31


/*
 * Device Control.
 * This register provides general device control.
 */
#define USB_HOST_DEV_CTL 0x0008

#define USB_HOST_DEV_CTL__RDN_ROUTE_ORDER_SHIFT 2
#define USB_HOST_DEV_CTL__RDN_ROUTE_ORDER_WIDTH 1
#define USB_HOST_DEV_CTL__RDN_ROUTE_ORDER_RESET_VAL 1
#define USB_HOST_DEV_CTL__RDN_ROUTE_ORDER_RMASK 0x1
#define USB_HOST_DEV_CTL__RDN_ROUTE_ORDER_MASK  0x4
#define USB_HOST_DEV_CTL__RDN_ROUTE_ORDER_FIELD 2,2

#define USB_HOST_DEV_CTL__SDN_ROUTE_ORDER_SHIFT 3
#define USB_HOST_DEV_CTL__SDN_ROUTE_ORDER_WIDTH 1
#define USB_HOST_DEV_CTL__SDN_ROUTE_ORDER_RESET_VAL 0
#define USB_HOST_DEV_CTL__SDN_ROUTE_ORDER_RMASK 0x1
#define USB_HOST_DEV_CTL__SDN_ROUTE_ORDER_MASK  0x8
#define USB_HOST_DEV_CTL__SDN_ROUTE_ORDER_FIELD 3,3


/*
 * Device Info.
 * This register provides general information about the device attached to
 * this port and channel.
 */
#define USB_HOST_DEV_INFO 0x0000

#define USB_HOST_DEV_INFO__TYPE_SHIFT 0
#define USB_HOST_DEV_INFO__TYPE_WIDTH 12
#define USB_HOST_DEV_INFO__TYPE_RESET_VAL 41
#define USB_HOST_DEV_INFO__TYPE_RMASK 0xfff
#define USB_HOST_DEV_INFO__TYPE_MASK  0xfff
#define USB_HOST_DEV_INFO__TYPE_FIELD 0,11
#define USB_HOST_DEV_INFO__TYPE_VAL_PCIE 0x1
#define USB_HOST_DEV_INFO__TYPE_VAL_GBE 0x10
#define USB_HOST_DEV_INFO__TYPE_VAL_XGBE 0x11
#define USB_HOST_DEV_INFO__TYPE_VAL_MPIPE 0x13
#define USB_HOST_DEV_INFO__TYPE_VAL_TRIO 0x14
#define USB_HOST_DEV_INFO__TYPE_VAL_CRYPTO 0x16
#define USB_HOST_DEV_INFO__TYPE_VAL_COMPRESSION 0x18
#define USB_HOST_DEV_INFO__TYPE_VAL_GPIO 0x20
#define USB_HOST_DEV_INFO__TYPE_VAL_RSHIM 0x21
#define USB_HOST_DEV_INFO__TYPE_VAL_SROM 0x22
#define USB_HOST_DEV_INFO__TYPE_VAL_I2CM 0x25
#define USB_HOST_DEV_INFO__TYPE_VAL_I2CS 0x26
#define USB_HOST_DEV_INFO__TYPE_VAL_UART 0x28
#define USB_HOST_DEV_INFO__TYPE_VAL_USBH 0x29
#define USB_HOST_DEV_INFO__TYPE_VAL_USBS 0x2a
#define USB_HOST_DEV_INFO__TYPE_VAL_USBHS 0x2b
#define USB_HOST_DEV_INFO__TYPE_VAL_DDR2 0x40
#define USB_HOST_DEV_INFO__TYPE_VAL_DDR3 0x42
#define USB_HOST_DEV_INFO__TYPE_VAL_DIAG_SNP 0x80
#define USB_HOST_DEV_INFO__TYPE_VAL_IPIC 0x81

#define USB_HOST_DEV_INFO__DEVICE_REV_SHIFT 16
#define USB_HOST_DEV_INFO__DEVICE_REV_WIDTH 8
#define USB_HOST_DEV_INFO__DEVICE_REV_RMASK 0xff
#define USB_HOST_DEV_INFO__DEVICE_REV_MASK  0xff0000
#define USB_HOST_DEV_INFO__DEVICE_REV_FIELD 16,23

#define USB_HOST_DEV_INFO__REGISTER_REV_SHIFT 24
#define USB_HOST_DEV_INFO__REGISTER_REV_WIDTH 4
#define USB_HOST_DEV_INFO__REGISTER_REV_RESET_VAL 0
#define USB_HOST_DEV_INFO__REGISTER_REV_RMASK 0xf
#define USB_HOST_DEV_INFO__REGISTER_REV_MASK  0xf000000
#define USB_HOST_DEV_INFO__REGISTER_REV_FIELD 24,27

#define USB_HOST_DEV_INFO__INSTANCE_SHIFT 32
#define USB_HOST_DEV_INFO__INSTANCE_WIDTH 4
#define USB_HOST_DEV_INFO__INSTANCE_RMASK 0xf
#define USB_HOST_DEV_INFO__INSTANCE_MASK  _64bit(0xf00000000)
#define USB_HOST_DEV_INFO__INSTANCE_FIELD 32,35


/*
 * Error Status.
 * Indicators for various fatal and non-fatal USB error conditions
 */
#define USB_HOST_ERROR_STATUS 0x0210

#define USB_HOST_ERROR_STATUS__MMIO_ILL_OPC_SHIFT 0
#define USB_HOST_ERROR_STATUS__MMIO_ILL_OPC_WIDTH 1
#define USB_HOST_ERROR_STATUS__MMIO_ILL_OPC_RESET_VAL 0
#define USB_HOST_ERROR_STATUS__MMIO_ILL_OPC_RMASK 0x1
#define USB_HOST_ERROR_STATUS__MMIO_ILL_OPC_MASK  0x1
#define USB_HOST_ERROR_STATUS__MMIO_ILL_OPC_FIELD 0,0


/*
 * FRINDEX_REG.
 * USB Frame Index
 */
#define USB_HOST_FRINDEX_REG 0x1001c

#define USB_HOST_FRINDEX_REG__FRINDEX_REG_SHIFT 0
#define USB_HOST_FRINDEX_REG__FRINDEX_REG_WIDTH 32
#define USB_HOST_FRINDEX_REG__FRINDEX_REG_RESET_VAL 0
#define USB_HOST_FRINDEX_REG__FRINDEX_REG_RMASK 0xffffffff
#define USB_HOST_FRINDEX_REG__FRINDEX_REG_MASK  0xffffffff
#define USB_HOST_FRINDEX_REG__FRINDEX_REG_FIELD 0,31


/*
 * HCCAPBASE_REG.
 * Capability Register
 */
#define USB_HOST_HCCAPBASE_REG 0x10000

#define USB_HOST_HCCAPBASE_REG__HCCAPBASE_REG_SHIFT 0
#define USB_HOST_HCCAPBASE_REG__HCCAPBASE_REG_WIDTH 32
#define USB_HOST_HCCAPBASE_REG__HCCAPBASE_REG_RESET_VAL 0
#define USB_HOST_HCCAPBASE_REG__HCCAPBASE_REG_RMASK 0xffffffff
#define USB_HOST_HCCAPBASE_REG__HCCAPBASE_REG_MASK  0xffffffff
#define USB_HOST_HCCAPBASE_REG__HCCAPBASE_REG_FIELD 0,31


/*
 * HCCPARAMS_REG.
 * Structural Register
 */
#define USB_HOST_HCCPARAMS_REG 0x10008

#define USB_HOST_HCCPARAMS_REG__HCCPARAMS_REG_SHIFT 0
#define USB_HOST_HCCPARAMS_REG__HCCPARAMS_REG_WIDTH 32
#define USB_HOST_HCCPARAMS_REG__HCCPARAMS_REG_RESET_VAL 0
#define USB_HOST_HCCPARAMS_REG__HCCPARAMS_REG_RMASK 0xffffffff
#define USB_HOST_HCCPARAMS_REG__HCCPARAMS_REG_MASK  0xffffffff
#define USB_HOST_HCCPARAMS_REG__HCCPARAMS_REG_FIELD 0,31


/*
 * HCSPARAMS_REG.
 * Structural Register
 */
#define USB_HOST_HCSPARAMS_REG 0x10004

#define USB_HOST_HCSPARAMS_REG__HCSPARAMS_REG_SHIFT 0
#define USB_HOST_HCSPARAMS_REG__HCSPARAMS_REG_WIDTH 32
#define USB_HOST_HCSPARAMS_REG__HCSPARAMS_REG_RESET_VAL 0
#define USB_HOST_HCSPARAMS_REG__HCSPARAMS_REG_RMASK 0xffffffff
#define USB_HOST_HCSPARAMS_REG__HCSPARAMS_REG_MASK  0xffffffff
#define USB_HOST_HCSPARAMS_REG__HCSPARAMS_REG_FIELD 0,31


/*
 * INSNREG00_REG.
 * Allows you to change the microframe length value (default is microframe
 * SOF = 125 ms) to reduce the simulation time
 */
#define USB_HOST_INSNREG00_REG 0x10090

#define USB_HOST_INSNREG00_REG__INSNREG00_REG_SHIFT 0
#define USB_HOST_INSNREG00_REG__INSNREG00_REG_WIDTH 32
#define USB_HOST_INSNREG00_REG__INSNREG00_REG_RESET_VAL 0
#define USB_HOST_INSNREG00_REG__INSNREG00_REG_RMASK 0xffffffff
#define USB_HOST_INSNREG00_REG__INSNREG00_REG_MASK  0xffffffff
#define USB_HOST_INSNREG00_REG__INSNREG00_REG_FIELD 0,31


/*
 * INSNREG01_REG.
 * Programmable Packet Buffer OUT/IN Thresholds
 */
#define USB_HOST_INSNREG01_REG 0x10094

#define USB_HOST_INSNREG01_REG__INSNREG01_REG_SHIFT 0
#define USB_HOST_INSNREG01_REG__INSNREG01_REG_WIDTH 32
#define USB_HOST_INSNREG01_REG__INSNREG01_REG_RESET_VAL 0
#define USB_HOST_INSNREG01_REG__INSNREG01_REG_RMASK 0xffffffff
#define USB_HOST_INSNREG01_REG__INSNREG01_REG_MASK  0xffffffff
#define USB_HOST_INSNREG01_REG__INSNREG01_REG_FIELD 0,31


/*
 * INSNREG02_REG.
 * Used only for debug purposes
 */
#define USB_HOST_INSNREG02_REG 0x10098

#define USB_HOST_INSNREG02_REG__INSNREG02_REG_SHIFT 0
#define USB_HOST_INSNREG02_REG__INSNREG02_REG_WIDTH 32
#define USB_HOST_INSNREG02_REG__INSNREG02_REG_RESET_VAL 0
#define USB_HOST_INSNREG02_REG__INSNREG02_REG_RMASK 0xffffffff
#define USB_HOST_INSNREG02_REG__INSNREG02_REG_MASK  0xffffffff
#define USB_HOST_INSNREG02_REG__INSNREG02_REG_FIELD 0,31


/*
 * INSNREG03_REG.
 * Used only for debug purposes
 */
#define USB_HOST_INSNREG03_REG 0x1009c

#define USB_HOST_INSNREG03_REG__INSNREG03_REG_SHIFT 0
#define USB_HOST_INSNREG03_REG__INSNREG03_REG_WIDTH 32
#define USB_HOST_INSNREG03_REG__INSNREG03_REG_RESET_VAL 0
#define USB_HOST_INSNREG03_REG__INSNREG03_REG_RMASK 0xffffffff
#define USB_HOST_INSNREG03_REG__INSNREG03_REG_MASK  0xffffffff
#define USB_HOST_INSNREG03_REG__INSNREG03_REG_FIELD 0,31


/*
 * INSNREG04_REG.
 * Used only for debug purposes
 */
#define USB_HOST_INSNREG04_REG 0x100a0

#define USB_HOST_INSNREG04_REG__INSNREG04_REG_SHIFT 0
#define USB_HOST_INSNREG04_REG__INSNREG04_REG_WIDTH 32
#define USB_HOST_INSNREG04_REG__INSNREG04_REG_RESET_VAL 0
#define USB_HOST_INSNREG04_REG__INSNREG04_REG_RMASK 0xffffffff
#define USB_HOST_INSNREG04_REG__INSNREG04_REG_MASK  0xffffffff
#define USB_HOST_INSNREG04_REG__INSNREG04_REG_FIELD 0,31


/*
 * INSNREG05_REG.
 * UTMI Configuration
 */
#define USB_HOST_INSNREG05_REG 0x100a4

#define USB_HOST_INSNREG05_REG__INSNREG05_REG_SHIFT 0
#define USB_HOST_INSNREG05_REG__INSNREG05_REG_WIDTH 32
#define USB_HOST_INSNREG05_REG__INSNREG05_REG_RESET_VAL 0
#define USB_HOST_INSNREG05_REG__INSNREG05_REG_RMASK 0xffffffff
#define USB_HOST_INSNREG05_REG__INSNREG05_REG_MASK  0xffffffff
#define USB_HOST_INSNREG05_REG__INSNREG05_REG_FIELD 0,31


/*
 * Bindings for interrupt vectors.
 * This register provides read/write access to all of the interrupt bindings
 * for the rshim.  The VEC_SEL field is used to select the vector being
 * configured and the BIND_SEL selects the interrupt within the vector.  To
 * read a binding, first write the VEC_SEL and BIND_SEL fields along with a 1
 * in the NW field.  Then read back the register.
 */
#define USB_HOST_INT_BIND 0x0300

#define USB_HOST_INT_BIND__ENABLE_SHIFT 0
#define USB_HOST_INT_BIND__ENABLE_WIDTH 1
#define USB_HOST_INT_BIND__ENABLE_RESET_VAL 0
#define USB_HOST_INT_BIND__ENABLE_RMASK 0x1
#define USB_HOST_INT_BIND__ENABLE_MASK  0x1
#define USB_HOST_INT_BIND__ENABLE_FIELD 0,0

#define USB_HOST_INT_BIND__MODE_SHIFT 1
#define USB_HOST_INT_BIND__MODE_WIDTH 1
#define USB_HOST_INT_BIND__MODE_RESET_VAL 0
#define USB_HOST_INT_BIND__MODE_RMASK 0x1
#define USB_HOST_INT_BIND__MODE_MASK  0x2
#define USB_HOST_INT_BIND__MODE_FIELD 1,1

#define USB_HOST_INT_BIND__TILEID_SHIFT 2
#define USB_HOST_INT_BIND__TILEID_WIDTH 8
#define USB_HOST_INT_BIND__TILEID_RMASK 0xff
#define USB_HOST_INT_BIND__TILEID_MASK  0x3fc
#define USB_HOST_INT_BIND__TILEID_FIELD 2,9

#define USB_HOST_INT_BIND__INT_NUM_SHIFT 10
#define USB_HOST_INT_BIND__INT_NUM_WIDTH 2
#define USB_HOST_INT_BIND__INT_NUM_RMASK 0x3
#define USB_HOST_INT_BIND__INT_NUM_MASK  0xc00
#define USB_HOST_INT_BIND__INT_NUM_FIELD 10,11

#define USB_HOST_INT_BIND__EVT_NUM_SHIFT 12
#define USB_HOST_INT_BIND__EVT_NUM_WIDTH 5
#define USB_HOST_INT_BIND__EVT_NUM_RMASK 0x1f
#define USB_HOST_INT_BIND__EVT_NUM_MASK  0x1f000
#define USB_HOST_INT_BIND__EVT_NUM_FIELD 12,16

#define USB_HOST_INT_BIND__VEC_SEL_SHIFT 33
#define USB_HOST_INT_BIND__VEC_SEL_WIDTH 1
#define USB_HOST_INT_BIND__VEC_SEL_RESET_VAL 0
#define USB_HOST_INT_BIND__VEC_SEL_RMASK 0x1
#define USB_HOST_INT_BIND__VEC_SEL_MASK  _64bit(0x200000000)
#define USB_HOST_INT_BIND__VEC_SEL_FIELD 33,33
#define USB_HOST_INT_BIND__VEC_SEL_VAL_GENERAL_INTS 0x0
#define USB_HOST_INT_BIND__VEC_SEL_VAL_MAC_INTS 0x1

#define USB_HOST_INT_BIND__BIND_SEL_SHIFT 40
#define USB_HOST_INT_BIND__BIND_SEL_WIDTH 2
#define USB_HOST_INT_BIND__BIND_SEL_RMASK 0x3
#define USB_HOST_INT_BIND__BIND_SEL_MASK  _64bit(0x30000000000)
#define USB_HOST_INT_BIND__BIND_SEL_FIELD 40,41

#define USB_HOST_INT_BIND__NW_SHIFT 48
#define USB_HOST_INT_BIND__NW_WIDTH 1
#define USB_HOST_INT_BIND__NW_RESET_VAL 0
#define USB_HOST_INT_BIND__NW_RMASK 0x1
#define USB_HOST_INT_BIND__NW_MASK  _64bit(0x1000000000000)
#define USB_HOST_INT_BIND__NW_FIELD 48,48


/*
 * Interrupt vector-0, write-one-to-clear.
 * This describes the interrupt status vector that is accessible through
 * INT_VEC0_W1TC and INT_VEC0_RTC.
 */
#define USB_HOST_INT_VEC0 0x0308

#define USB_HOST_INT_VEC0__TLB_MISS_SHIFT 0
#define USB_HOST_INT_VEC0__TLB_MISS_WIDTH 1
#define USB_HOST_INT_VEC0__TLB_MISS_RESET_VAL 0
#define USB_HOST_INT_VEC0__TLB_MISS_RMASK 0x1
#define USB_HOST_INT_VEC0__TLB_MISS_MASK  0x1
#define USB_HOST_INT_VEC0__TLB_MISS_FIELD 0,0

#define USB_HOST_INT_VEC0__MMIO_ERROR_SHIFT 1
#define USB_HOST_INT_VEC0__MMIO_ERROR_WIDTH 1
#define USB_HOST_INT_VEC0__MMIO_ERROR_RESET_VAL 0
#define USB_HOST_INT_VEC0__MMIO_ERROR_RMASK 0x1
#define USB_HOST_INT_VEC0__MMIO_ERROR_MASK  0x2
#define USB_HOST_INT_VEC0__MMIO_ERROR_FIELD 1,1

#define USB_HOST_INT_VEC0__AHB_BUS_ERROR_SHIFT 2
#define USB_HOST_INT_VEC0__AHB_BUS_ERROR_WIDTH 1
#define USB_HOST_INT_VEC0__AHB_BUS_ERROR_RESET_VAL 0
#define USB_HOST_INT_VEC0__AHB_BUS_ERROR_RMASK 0x1
#define USB_HOST_INT_VEC0__AHB_BUS_ERROR_MASK  0x4
#define USB_HOST_INT_VEC0__AHB_BUS_ERROR_FIELD 2,2


/*
 * Interrupt vector-0, read-to-clear.
 * Interrupt status vector with read-to-clear functionality.  Provides access
 * to the same status bits that are visible in INT_VEC0_W1TC.  Reading this
 * register clears all of the associated interrupts. This vector contains the
 * following interrupts:
 * 0: TLB_MISS              - TLB miss occurred on a TLB transaction.
 * Exception information contained in USB_DEVICE_TLB_USB_EXC_ADDR
 *
 * 1: MMIO_ERROR            - An MMIO request encountered an error.  Error
 * info captured in USB_HOST_CFG_MMIO_ERROR_INFO.
 *
 * 2: AHB_BUS_ERROR         - An AHB bus request encountered an error.
 * Exception information contained in TBD
 *
 * 3: RSVD3                 - NOT IMPLEMENTED
 */
#define USB_HOST_INT_VEC0_RTC 0x0310

#define USB_HOST_INT_VEC0_RTC__INT_VEC0_RTC_SHIFT 0
#define USB_HOST_INT_VEC0_RTC__INT_VEC0_RTC_WIDTH 4
#define USB_HOST_INT_VEC0_RTC__INT_VEC0_RTC_RESET_VAL 0
#define USB_HOST_INT_VEC0_RTC__INT_VEC0_RTC_RMASK 0xf
#define USB_HOST_INT_VEC0_RTC__INT_VEC0_RTC_MASK  0xf
#define USB_HOST_INT_VEC0_RTC__INT_VEC0_RTC_FIELD 0,3


/*
 * Interrupt vector-0, write-one-to-clear.
 * Interrupt status vector with write-one-to-clear functionality.  Provides
 * access to the same status bits that are visible in INT_VEC0_RTC.  Writing
 * a 1 clears the status bit. This vector contains the following interrupts:
 * 0: TLB_MISS              - TLB miss occurred on a TLB transaction.
 * Exception information contained in USB_DEVICE_TLB_USB_EXC_ADDR
 *
 * 1: MMIO_ERROR            - An MMIO request encountered an error.  Error
 * info captured in USB_HOST_CFG_MMIO_ERROR_INFO.
 *
 * 2: AHB_BUS_ERROR         - An AHB bus request encountered an error.
 * Exception information contained in TBD
 *
 * 3: RSVD3                 - NOT IMPLEMENTED
 */
#define USB_HOST_INT_VEC0_W1TC 0x0308

#define USB_HOST_INT_VEC0_W1TC__INT_VEC0_W1TC_SHIFT 0
#define USB_HOST_INT_VEC0_W1TC__INT_VEC0_W1TC_WIDTH 4
#define USB_HOST_INT_VEC0_W1TC__INT_VEC0_W1TC_RESET_VAL 0
#define USB_HOST_INT_VEC0_W1TC__INT_VEC0_W1TC_RMASK 0xf
#define USB_HOST_INT_VEC0_W1TC__INT_VEC0_W1TC_MASK  0xf
#define USB_HOST_INT_VEC0_W1TC__INT_VEC0_W1TC_FIELD 0,3


/*
 * Interrupt vector-1, write-one-to-clear.
 * This describes the interrupt status vector that is accessible through
 * INT_VEC1_W1TC and INT_VEC1_RTC.
 */
#define USB_HOST_INT_VEC1 0x0318

#define USB_HOST_INT_VEC1__EHCI_INT_SHIFT 0
#define USB_HOST_INT_VEC1__EHCI_INT_WIDTH 1
#define USB_HOST_INT_VEC1__EHCI_INT_RESET_VAL 0
#define USB_HOST_INT_VEC1__EHCI_INT_RMASK 0x1
#define USB_HOST_INT_VEC1__EHCI_INT_MASK  0x1
#define USB_HOST_INT_VEC1__EHCI_INT_FIELD 0,0

#define USB_HOST_INT_VEC1__OHCI_IRQ_INT_SHIFT 1
#define USB_HOST_INT_VEC1__OHCI_IRQ_INT_WIDTH 1
#define USB_HOST_INT_VEC1__OHCI_IRQ_INT_RESET_VAL 0
#define USB_HOST_INT_VEC1__OHCI_IRQ_INT_RMASK 0x1
#define USB_HOST_INT_VEC1__OHCI_IRQ_INT_MASK  0x2
#define USB_HOST_INT_VEC1__OHCI_IRQ_INT_FIELD 1,1

#define USB_HOST_INT_VEC1__OHCI_SMI_INT_SHIFT 2
#define USB_HOST_INT_VEC1__OHCI_SMI_INT_WIDTH 1
#define USB_HOST_INT_VEC1__OHCI_SMI_INT_RESET_VAL 0
#define USB_HOST_INT_VEC1__OHCI_SMI_INT_RMASK 0x1
#define USB_HOST_INT_VEC1__OHCI_SMI_INT_MASK  0x4
#define USB_HOST_INT_VEC1__OHCI_SMI_INT_FIELD 2,2


/*
 * Interrupt vector-0, read-to-clear.
 * Interrupt status vector with read-to-clear functionality.  Provides access
 * to the same status bits that are visible in INT_VEC1_W1TC.  Reading this
 * register clears all of the associated interrupts. This vector contains the
 * following interrupts:
 * 0: EHCI_INT              - EHCI interrupt
 *
 * 1: OHCI_IRQ_INT          - OHCI HCI bus general interrupt
 *
 * 2: OHCI_SMI_INT          - OHCI HCI bus management interrupt
 *
 * 3: RSVD3                 - NOT IMPLEMENTED
 */
#define USB_HOST_INT_VEC1_RTC 0x0320

#define USB_HOST_INT_VEC1_RTC__INT_VEC1_RTC_SHIFT 0
#define USB_HOST_INT_VEC1_RTC__INT_VEC1_RTC_WIDTH 4
#define USB_HOST_INT_VEC1_RTC__INT_VEC1_RTC_RESET_VAL 0
#define USB_HOST_INT_VEC1_RTC__INT_VEC1_RTC_RMASK 0xf
#define USB_HOST_INT_VEC1_RTC__INT_VEC1_RTC_MASK  0xf
#define USB_HOST_INT_VEC1_RTC__INT_VEC1_RTC_FIELD 0,3


/*
 * Interrupt vector-1, write-one-to-clear.
 * Interrupt status vector with write-one-to-clear functionality.  Provides
 * access to the same status bits that are visible in INT_VEC1_RTC.  Writing
 * a 1 clears the status bit. This vector contains the following interrupts:
 * 0: EHCI_INT              - EHCI interrupt
 *
 * 1: OHCI_IRQ_INT          - OHCI HCI bus general interrupt
 *
 * 2: OHCI_SMI_INT          - OHCI HCI bus management interrupt
 *
 * 3: RSVD3                 - NOT IMPLEMENTED
 */
#define USB_HOST_INT_VEC1_W1TC 0x0318

#define USB_HOST_INT_VEC1_W1TC__INT_VEC1_W1TC_SHIFT 0
#define USB_HOST_INT_VEC1_W1TC__INT_VEC1_W1TC_WIDTH 4
#define USB_HOST_INT_VEC1_W1TC__INT_VEC1_W1TC_RESET_VAL 0
#define USB_HOST_INT_VEC1_W1TC__INT_VEC1_W1TC_RMASK 0xf
#define USB_HOST_INT_VEC1_W1TC__INT_VEC1_W1TC_MASK  0xf
#define USB_HOST_INT_VEC1_W1TC__INT_VEC1_W1TC_FIELD 0,3


/*
 * MAC Access Error Information.
 * Provides diagnostics information when a MAC response error occurs.
 * Captured whenever the MAC_ACCESS_ERROR interrupt condition occurs which
 * includes size errors, read/write errors, and protection errors.
 */
#define USB_HOST_MAC_ACCESS_ERROR_INFO 0x0220

#define USB_HOST_MAC_ACCESS_ERROR_INFO__ADDR_SHIFT 0
#define USB_HOST_MAC_ACCESS_ERROR_INFO__ADDR_WIDTH 32
#define USB_HOST_MAC_ACCESS_ERROR_INFO__ADDR_RESET_VAL 0
#define USB_HOST_MAC_ACCESS_ERROR_INFO__ADDR_RMASK 0xffffffff
#define USB_HOST_MAC_ACCESS_ERROR_INFO__ADDR_MASK  0xffffffff
#define USB_HOST_MAC_ACCESS_ERROR_INFO__ADDR_FIELD 0,31

#define USB_HOST_MAC_ACCESS_ERROR_INFO__SIZE_SHIFT 32
#define USB_HOST_MAC_ACCESS_ERROR_INFO__SIZE_WIDTH 3
#define USB_HOST_MAC_ACCESS_ERROR_INFO__SIZE_RESET_VAL 0
#define USB_HOST_MAC_ACCESS_ERROR_INFO__SIZE_RMASK 0x7
#define USB_HOST_MAC_ACCESS_ERROR_INFO__SIZE_MASK  _64bit(0x700000000)
#define USB_HOST_MAC_ACCESS_ERROR_INFO__SIZE_FIELD 32,34


/*
 * MAC_AHB_STRAP_CONTROL.
 * AHB system strap signals.
 */
#define USB_HOST_MAC_AHB_STRAP_CONTROL 0x1008

#define USB_HOST_MAC_AHB_STRAP_CONTROL__SS_ENA_INCR16_I_SHIFT 0
#define USB_HOST_MAC_AHB_STRAP_CONTROL__SS_ENA_INCR16_I_WIDTH 1
#define USB_HOST_MAC_AHB_STRAP_CONTROL__SS_ENA_INCR16_I_RESET_VAL 0
#define USB_HOST_MAC_AHB_STRAP_CONTROL__SS_ENA_INCR16_I_RMASK 0x1
#define USB_HOST_MAC_AHB_STRAP_CONTROL__SS_ENA_INCR16_I_MASK  0x1
#define USB_HOST_MAC_AHB_STRAP_CONTROL__SS_ENA_INCR16_I_FIELD 0,0

#define USB_HOST_MAC_AHB_STRAP_CONTROL__SS_ENA_INCR8_I_SHIFT 1
#define USB_HOST_MAC_AHB_STRAP_CONTROL__SS_ENA_INCR8_I_WIDTH 1
#define USB_HOST_MAC_AHB_STRAP_CONTROL__SS_ENA_INCR8_I_RESET_VAL 0
#define USB_HOST_MAC_AHB_STRAP_CONTROL__SS_ENA_INCR8_I_RMASK 0x1
#define USB_HOST_MAC_AHB_STRAP_CONTROL__SS_ENA_INCR8_I_MASK  0x2
#define USB_HOST_MAC_AHB_STRAP_CONTROL__SS_ENA_INCR8_I_FIELD 1,1

#define USB_HOST_MAC_AHB_STRAP_CONTROL__SS_ENA_INCR4_I_SHIFT 2
#define USB_HOST_MAC_AHB_STRAP_CONTROL__SS_ENA_INCR4_I_WIDTH 1
#define USB_HOST_MAC_AHB_STRAP_CONTROL__SS_ENA_INCR4_I_RESET_VAL 0
#define USB_HOST_MAC_AHB_STRAP_CONTROL__SS_ENA_INCR4_I_RMASK 0x1
#define USB_HOST_MAC_AHB_STRAP_CONTROL__SS_ENA_INCR4_I_MASK  0x4
#define USB_HOST_MAC_AHB_STRAP_CONTROL__SS_ENA_INCR4_I_FIELD 2,2

#define USB_HOST_MAC_AHB_STRAP_CONTROL__SS_ENA_INCRX_ALIGN_I_SHIFT 3
#define USB_HOST_MAC_AHB_STRAP_CONTROL__SS_ENA_INCRX_ALIGN_I_WIDTH 1
#define USB_HOST_MAC_AHB_STRAP_CONTROL__SS_ENA_INCRX_ALIGN_I_RESET_VAL 0
#define USB_HOST_MAC_AHB_STRAP_CONTROL__SS_ENA_INCRX_ALIGN_I_RMASK 0x1
#define USB_HOST_MAC_AHB_STRAP_CONTROL__SS_ENA_INCRX_ALIGN_I_MASK  0x8
#define USB_HOST_MAC_AHB_STRAP_CONTROL__SS_ENA_INCRX_ALIGN_I_FIELD 3,3

#define USB_HOST_MAC_AHB_STRAP_CONTROL__SS_EHCI64BIT_EN_I_SHIFT 4
#define USB_HOST_MAC_AHB_STRAP_CONTROL__SS_EHCI64BIT_EN_I_WIDTH 1
#define USB_HOST_MAC_AHB_STRAP_CONTROL__SS_EHCI64BIT_EN_I_RESET_VAL 1
#define USB_HOST_MAC_AHB_STRAP_CONTROL__SS_EHCI64BIT_EN_I_RMASK 0x1
#define USB_HOST_MAC_AHB_STRAP_CONTROL__SS_EHCI64BIT_EN_I_MASK  0x10
#define USB_HOST_MAC_AHB_STRAP_CONTROL__SS_EHCI64BIT_EN_I_FIELD 4,4


/*
 * MAC_EHCI_INTERRUPT_STATUS.
 * EHCI Host Controller Interrupt Status
 */
#define USB_HOST_MAC_EHCI_INTERRUPT_STATUS 0x1030

#define USB_HOST_MAC_EHCI_INTERRUPT_STATUS__EHCI_INTERRUPT_O_SHIFT 0
#define USB_HOST_MAC_EHCI_INTERRUPT_STATUS__EHCI_INTERRUPT_O_WIDTH 1
#define USB_HOST_MAC_EHCI_INTERRUPT_STATUS__EHCI_INTERRUPT_O_RESET_VAL 0
#define USB_HOST_MAC_EHCI_INTERRUPT_STATUS__EHCI_INTERRUPT_O_RMASK 0x1
#define USB_HOST_MAC_EHCI_INTERRUPT_STATUS__EHCI_INTERRUPT_O_MASK  0x1
#define USB_HOST_MAC_EHCI_INTERRUPT_STATUS__EHCI_INTERRUPT_O_FIELD 0,0


/*
 * MAC_EHCI_SIDEBAND_STATUS.
 * EHCI Host Controller Status
 */
#define USB_HOST_MAC_EHCI_SIDEBAND_STATUS 0x1038

#define USB_HOST_MAC_EHCI_SIDEBAND_STATUS__EHCI_PRT_PWR_O_SHIFT 0
#define USB_HOST_MAC_EHCI_SIDEBAND_STATUS__EHCI_PRT_PWR_O_WIDTH 1
#define USB_HOST_MAC_EHCI_SIDEBAND_STATUS__EHCI_PRT_PWR_O_RESET_VAL 0
#define USB_HOST_MAC_EHCI_SIDEBAND_STATUS__EHCI_PRT_PWR_O_RMASK 0x1
#define USB_HOST_MAC_EHCI_SIDEBAND_STATUS__EHCI_PRT_PWR_O_MASK  0x1
#define USB_HOST_MAC_EHCI_SIDEBAND_STATUS__EHCI_PRT_PWR_O_FIELD 0,0

#define USB_HOST_MAC_EHCI_SIDEBAND_STATUS__EHCI_XFER_CNT_O_SHIFT 1
#define USB_HOST_MAC_EHCI_SIDEBAND_STATUS__EHCI_XFER_CNT_O_WIDTH 11
#define USB_HOST_MAC_EHCI_SIDEBAND_STATUS__EHCI_XFER_CNT_O_RESET_VAL 0
#define USB_HOST_MAC_EHCI_SIDEBAND_STATUS__EHCI_XFER_CNT_O_RMASK 0x7ff
#define USB_HOST_MAC_EHCI_SIDEBAND_STATUS__EHCI_XFER_CNT_O_MASK  0xffe
#define USB_HOST_MAC_EHCI_SIDEBAND_STATUS__EHCI_XFER_CNT_O_FIELD 1,11

#define USB_HOST_MAC_EHCI_SIDEBAND_STATUS__EHCI_XFER_PRDC_O_SHIFT 12
#define USB_HOST_MAC_EHCI_SIDEBAND_STATUS__EHCI_XFER_PRDC_O_WIDTH 1
#define USB_HOST_MAC_EHCI_SIDEBAND_STATUS__EHCI_XFER_PRDC_O_RESET_VAL 0
#define USB_HOST_MAC_EHCI_SIDEBAND_STATUS__EHCI_XFER_PRDC_O_RMASK 0x1
#define USB_HOST_MAC_EHCI_SIDEBAND_STATUS__EHCI_XFER_PRDC_O_MASK  0x1000
#define USB_HOST_MAC_EHCI_SIDEBAND_STATUS__EHCI_XFER_PRDC_O_FIELD 12,12

#define USB_HOST_MAC_EHCI_SIDEBAND_STATUS__EHCI_BUFACC_O_SHIFT 13
#define USB_HOST_MAC_EHCI_SIDEBAND_STATUS__EHCI_BUFACC_O_WIDTH 1
#define USB_HOST_MAC_EHCI_SIDEBAND_STATUS__EHCI_BUFACC_O_RESET_VAL 0
#define USB_HOST_MAC_EHCI_SIDEBAND_STATUS__EHCI_BUFACC_O_RMASK 0x1
#define USB_HOST_MAC_EHCI_SIDEBAND_STATUS__EHCI_BUFACC_O_MASK  0x2000
#define USB_HOST_MAC_EHCI_SIDEBAND_STATUS__EHCI_BUFACC_O_FIELD 13,13

#define USB_HOST_MAC_EHCI_SIDEBAND_STATUS__EHCI_USBSTS_O_SHIFT 14
#define USB_HOST_MAC_EHCI_SIDEBAND_STATUS__EHCI_USBSTS_O_WIDTH 6
#define USB_HOST_MAC_EHCI_SIDEBAND_STATUS__EHCI_USBSTS_O_RESET_VAL 0
#define USB_HOST_MAC_EHCI_SIDEBAND_STATUS__EHCI_USBSTS_O_RMASK 0x3f
#define USB_HOST_MAC_EHCI_SIDEBAND_STATUS__EHCI_USBSTS_O_MASK  0xfc000
#define USB_HOST_MAC_EHCI_SIDEBAND_STATUS__EHCI_USBSTS_O_FIELD 14,19

#define USB_HOST_MAC_EHCI_SIDEBAND_STATUS__EHCI_LPSMC_STATE_O_SHIFT 20
#define USB_HOST_MAC_EHCI_SIDEBAND_STATUS__EHCI_LPSMC_STATE_O_WIDTH 4
#define USB_HOST_MAC_EHCI_SIDEBAND_STATUS__EHCI_LPSMC_STATE_O_RESET_VAL 0
#define USB_HOST_MAC_EHCI_SIDEBAND_STATUS__EHCI_LPSMC_STATE_O_RMASK 0xf
#define USB_HOST_MAC_EHCI_SIDEBAND_STATUS__EHCI_LPSMC_STATE_O_MASK  0xf00000
#define USB_HOST_MAC_EHCI_SIDEBAND_STATUS__EHCI_LPSMC_STATE_O_FIELD 20,23


/*
 * MAC_EHCI_STRAP_CONTROL.
 * The EHCI Strap signals configure the power state and the Frame Length
 * Adjustment register (FLADJ), and
 * display USB status.
 */
#define USB_HOST_MAC_EHCI_STRAP_CONTROL 0x1010

#define USB_HOST_MAC_EHCI_STRAP_CONTROL__SS_SIMULATION_MODE_I_SHIFT 0
#define USB_HOST_MAC_EHCI_STRAP_CONTROL__SS_SIMULATION_MODE_I_WIDTH 1
#define USB_HOST_MAC_EHCI_STRAP_CONTROL__SS_SIMULATION_MODE_I_RESET_VAL 0
#define USB_HOST_MAC_EHCI_STRAP_CONTROL__SS_SIMULATION_MODE_I_RMASK 0x1
#define USB_HOST_MAC_EHCI_STRAP_CONTROL__SS_SIMULATION_MODE_I_MASK  0x1
#define USB_HOST_MAC_EHCI_STRAP_CONTROL__SS_SIMULATION_MODE_I_FIELD 0,0

#define USB_HOST_MAC_EHCI_STRAP_CONTROL__SS_FLADJ_VAL_HOST_I_SHIFT 1
#define USB_HOST_MAC_EHCI_STRAP_CONTROL__SS_FLADJ_VAL_HOST_I_WIDTH 6
#define USB_HOST_MAC_EHCI_STRAP_CONTROL__SS_FLADJ_VAL_HOST_I_RESET_VAL 32
#define USB_HOST_MAC_EHCI_STRAP_CONTROL__SS_FLADJ_VAL_HOST_I_RMASK 0x3f
#define USB_HOST_MAC_EHCI_STRAP_CONTROL__SS_FLADJ_VAL_HOST_I_MASK  0x7e
#define USB_HOST_MAC_EHCI_STRAP_CONTROL__SS_FLADJ_VAL_HOST_I_FIELD 1,6

#define USB_HOST_MAC_EHCI_STRAP_CONTROL__SS_FLADJ_VAL_0_I_SHIFT 7
#define USB_HOST_MAC_EHCI_STRAP_CONTROL__SS_FLADJ_VAL_0_I_WIDTH 1
#define USB_HOST_MAC_EHCI_STRAP_CONTROL__SS_FLADJ_VAL_0_I_RESET_VAL 0
#define USB_HOST_MAC_EHCI_STRAP_CONTROL__SS_FLADJ_VAL_0_I_RMASK 0x1
#define USB_HOST_MAC_EHCI_STRAP_CONTROL__SS_FLADJ_VAL_0_I_MASK  0x80
#define USB_HOST_MAC_EHCI_STRAP_CONTROL__SS_FLADJ_VAL_0_I_FIELD 7,7

#define USB_HOST_MAC_EHCI_STRAP_CONTROL__SS_FLADJ_VAL_1_I_SHIFT 8
#define USB_HOST_MAC_EHCI_STRAP_CONTROL__SS_FLADJ_VAL_1_I_WIDTH 1
#define USB_HOST_MAC_EHCI_STRAP_CONTROL__SS_FLADJ_VAL_1_I_RESET_VAL 0
#define USB_HOST_MAC_EHCI_STRAP_CONTROL__SS_FLADJ_VAL_1_I_RMASK 0x1
#define USB_HOST_MAC_EHCI_STRAP_CONTROL__SS_FLADJ_VAL_1_I_MASK  0x100
#define USB_HOST_MAC_EHCI_STRAP_CONTROL__SS_FLADJ_VAL_1_I_FIELD 8,8

#define USB_HOST_MAC_EHCI_STRAP_CONTROL__SS_FLADJ_VAL_2_I_SHIFT 9
#define USB_HOST_MAC_EHCI_STRAP_CONTROL__SS_FLADJ_VAL_2_I_WIDTH 1
#define USB_HOST_MAC_EHCI_STRAP_CONTROL__SS_FLADJ_VAL_2_I_RESET_VAL 0
#define USB_HOST_MAC_EHCI_STRAP_CONTROL__SS_FLADJ_VAL_2_I_RMASK 0x1
#define USB_HOST_MAC_EHCI_STRAP_CONTROL__SS_FLADJ_VAL_2_I_MASK  0x200
#define USB_HOST_MAC_EHCI_STRAP_CONTROL__SS_FLADJ_VAL_2_I_FIELD 9,9

#define USB_HOST_MAC_EHCI_STRAP_CONTROL__SS_FLADJ_VAL_3_I_SHIFT 10
#define USB_HOST_MAC_EHCI_STRAP_CONTROL__SS_FLADJ_VAL_3_I_WIDTH 1
#define USB_HOST_MAC_EHCI_STRAP_CONTROL__SS_FLADJ_VAL_3_I_RESET_VAL 0
#define USB_HOST_MAC_EHCI_STRAP_CONTROL__SS_FLADJ_VAL_3_I_RMASK 0x1
#define USB_HOST_MAC_EHCI_STRAP_CONTROL__SS_FLADJ_VAL_3_I_MASK  0x400
#define USB_HOST_MAC_EHCI_STRAP_CONTROL__SS_FLADJ_VAL_3_I_FIELD 10,10

#define USB_HOST_MAC_EHCI_STRAP_CONTROL__SS_FLADJ_VAL_4_I_SHIFT 11
#define USB_HOST_MAC_EHCI_STRAP_CONTROL__SS_FLADJ_VAL_4_I_WIDTH 1
#define USB_HOST_MAC_EHCI_STRAP_CONTROL__SS_FLADJ_VAL_4_I_RESET_VAL 0
#define USB_HOST_MAC_EHCI_STRAP_CONTROL__SS_FLADJ_VAL_4_I_RMASK 0x1
#define USB_HOST_MAC_EHCI_STRAP_CONTROL__SS_FLADJ_VAL_4_I_MASK  0x800
#define USB_HOST_MAC_EHCI_STRAP_CONTROL__SS_FLADJ_VAL_4_I_FIELD 11,11

#define USB_HOST_MAC_EHCI_STRAP_CONTROL__SS_FLADJ_VAL_5_I_SHIFT 12
#define USB_HOST_MAC_EHCI_STRAP_CONTROL__SS_FLADJ_VAL_5_I_WIDTH 1
#define USB_HOST_MAC_EHCI_STRAP_CONTROL__SS_FLADJ_VAL_5_I_RESET_VAL 1
#define USB_HOST_MAC_EHCI_STRAP_CONTROL__SS_FLADJ_VAL_5_I_RMASK 0x1
#define USB_HOST_MAC_EHCI_STRAP_CONTROL__SS_FLADJ_VAL_5_I_MASK  0x1000
#define USB_HOST_MAC_EHCI_STRAP_CONTROL__SS_FLADJ_VAL_5_I_FIELD 12,12


/*
 * MAC_OHCI_INTERFACE_CONTROL.
 * OHCI Host Controller Controls
 */
#define USB_HOST_MAC_OHCI_INTERFACE_CONTROL 0x1020

#define USB_HOST_MAC_OHCI_INTERFACE_CONTROL__OHCI_SUSP_LGCY_I_SHIFT 0
#define USB_HOST_MAC_OHCI_INTERFACE_CONTROL__OHCI_SUSP_LGCY_I_WIDTH 1
#define USB_HOST_MAC_OHCI_INTERFACE_CONTROL__OHCI_SUSP_LGCY_I_RESET_VAL 0
#define USB_HOST_MAC_OHCI_INTERFACE_CONTROL__OHCI_SUSP_LGCY_I_RMASK 0x1
#define USB_HOST_MAC_OHCI_INTERFACE_CONTROL__OHCI_SUSP_LGCY_I_MASK  0x1
#define USB_HOST_MAC_OHCI_INTERFACE_CONTROL__OHCI_SUSP_LGCY_I_FIELD 0,0

#define USB_HOST_MAC_OHCI_INTERFACE_CONTROL__APP_START_CLK_I_SHIFT 1
#define USB_HOST_MAC_OHCI_INTERFACE_CONTROL__APP_START_CLK_I_WIDTH 1
#define USB_HOST_MAC_OHCI_INTERFACE_CONTROL__APP_START_CLK_I_RESET_VAL 0
#define USB_HOST_MAC_OHCI_INTERFACE_CONTROL__APP_START_CLK_I_RMASK 0x1
#define USB_HOST_MAC_OHCI_INTERFACE_CONTROL__APP_START_CLK_I_MASK  0x2
#define USB_HOST_MAC_OHCI_INTERFACE_CONTROL__APP_START_CLK_I_FIELD 1,1

#define USB_HOST_MAC_OHCI_INTERFACE_CONTROL__OHCI_CNTSEL_I_N_SHIFT 2
#define USB_HOST_MAC_OHCI_INTERFACE_CONTROL__OHCI_CNTSEL_I_N_WIDTH 1
#define USB_HOST_MAC_OHCI_INTERFACE_CONTROL__OHCI_CNTSEL_I_N_RESET_VAL 0
#define USB_HOST_MAC_OHCI_INTERFACE_CONTROL__OHCI_CNTSEL_I_N_RMASK 0x1
#define USB_HOST_MAC_OHCI_INTERFACE_CONTROL__OHCI_CNTSEL_I_N_MASK  0x4
#define USB_HOST_MAC_OHCI_INTERFACE_CONTROL__OHCI_CNTSEL_I_N_FIELD 2,2

#define USB_HOST_MAC_OHCI_INTERFACE_CONTROL__SS_HUBSETUP_MIN_I_SHIFT 3
#define USB_HOST_MAC_OHCI_INTERFACE_CONTROL__SS_HUBSETUP_MIN_I_WIDTH 1
#define USB_HOST_MAC_OHCI_INTERFACE_CONTROL__SS_HUBSETUP_MIN_I_RESET_VAL 0
#define USB_HOST_MAC_OHCI_INTERFACE_CONTROL__SS_HUBSETUP_MIN_I_RMASK 0x1
#define USB_HOST_MAC_OHCI_INTERFACE_CONTROL__SS_HUBSETUP_MIN_I_MASK  0x8
#define USB_HOST_MAC_OHCI_INTERFACE_CONTROL__SS_HUBSETUP_MIN_I_FIELD 3,3


/*
 * MAC_OHCI_LEGACY_CONTROL.
 * OHCI Host Controller Legacy Controls
 */
#define USB_HOST_MAC_OHCI_LEGACY_CONTROL 0x1028

#define USB_HOST_MAC_OHCI_LEGACY_CONTROL__OHCI_0_APP_IO_HIT_I_SHIFT 0
#define USB_HOST_MAC_OHCI_LEGACY_CONTROL__OHCI_0_APP_IO_HIT_I_WIDTH 1
#define USB_HOST_MAC_OHCI_LEGACY_CONTROL__OHCI_0_APP_IO_HIT_I_RESET_VAL 0
#define USB_HOST_MAC_OHCI_LEGACY_CONTROL__OHCI_0_APP_IO_HIT_I_RMASK 0x1
#define USB_HOST_MAC_OHCI_LEGACY_CONTROL__OHCI_0_APP_IO_HIT_I_MASK  0x1
#define USB_HOST_MAC_OHCI_LEGACY_CONTROL__OHCI_0_APP_IO_HIT_I_FIELD 0,0

#define USB_HOST_MAC_OHCI_LEGACY_CONTROL__OHCI_0_APP_IRQ1_I_SHIFT 1
#define USB_HOST_MAC_OHCI_LEGACY_CONTROL__OHCI_0_APP_IRQ1_I_WIDTH 1
#define USB_HOST_MAC_OHCI_LEGACY_CONTROL__OHCI_0_APP_IRQ1_I_RESET_VAL 0
#define USB_HOST_MAC_OHCI_LEGACY_CONTROL__OHCI_0_APP_IRQ1_I_RMASK 0x1
#define USB_HOST_MAC_OHCI_LEGACY_CONTROL__OHCI_0_APP_IRQ1_I_MASK  0x2
#define USB_HOST_MAC_OHCI_LEGACY_CONTROL__OHCI_0_APP_IRQ1_I_FIELD 1,1

#define USB_HOST_MAC_OHCI_LEGACY_CONTROL__OHCI_0_APP_IRQ12_I_SHIFT 2
#define USB_HOST_MAC_OHCI_LEGACY_CONTROL__OHCI_0_APP_IRQ12_I_WIDTH 1
#define USB_HOST_MAC_OHCI_LEGACY_CONTROL__OHCI_0_APP_IRQ12_I_RESET_VAL 0
#define USB_HOST_MAC_OHCI_LEGACY_CONTROL__OHCI_0_APP_IRQ12_I_RMASK 0x1
#define USB_HOST_MAC_OHCI_LEGACY_CONTROL__OHCI_0_APP_IRQ12_I_MASK  0x4
#define USB_HOST_MAC_OHCI_LEGACY_CONTROL__OHCI_0_APP_IRQ12_I_FIELD 2,2


/*
 * MAC_OHCI_LEGACY_STATUS.
 * OHCI Host Controller Legacy Status
 */
#define USB_HOST_MAC_OHCI_LEGACY_STATUS 0x1048

#define USB_HOST_MAC_OHCI_LEGACY_STATUS__OHCI_0_LGCY_IRQ1_O_SHIFT 0
#define USB_HOST_MAC_OHCI_LEGACY_STATUS__OHCI_0_LGCY_IRQ1_O_WIDTH 1
#define USB_HOST_MAC_OHCI_LEGACY_STATUS__OHCI_0_LGCY_IRQ1_O_RESET_VAL 0
#define USB_HOST_MAC_OHCI_LEGACY_STATUS__OHCI_0_LGCY_IRQ1_O_RMASK 0x1
#define USB_HOST_MAC_OHCI_LEGACY_STATUS__OHCI_0_LGCY_IRQ1_O_MASK  0x1
#define USB_HOST_MAC_OHCI_LEGACY_STATUS__OHCI_0_LGCY_IRQ1_O_FIELD 0,0

#define USB_HOST_MAC_OHCI_LEGACY_STATUS__OHCI_0_LGCY_IRQ12_O_SHIFT 1
#define USB_HOST_MAC_OHCI_LEGACY_STATUS__OHCI_0_LGCY_IRQ12_O_WIDTH 1
#define USB_HOST_MAC_OHCI_LEGACY_STATUS__OHCI_0_LGCY_IRQ12_O_RESET_VAL 0
#define USB_HOST_MAC_OHCI_LEGACY_STATUS__OHCI_0_LGCY_IRQ12_O_RMASK 0x1
#define USB_HOST_MAC_OHCI_LEGACY_STATUS__OHCI_0_LGCY_IRQ12_O_MASK  0x2
#define USB_HOST_MAC_OHCI_LEGACY_STATUS__OHCI_0_LGCY_IRQ12_O_FIELD 1,1

#define USB_HOST_MAC_OHCI_LEGACY_STATUS__OHCI_0_LGCY_EMU_EN_O_SHIFT 2
#define USB_HOST_MAC_OHCI_LEGACY_STATUS__OHCI_0_LGCY_EMU_EN_O_WIDTH 1
#define USB_HOST_MAC_OHCI_LEGACY_STATUS__OHCI_0_LGCY_EMU_EN_O_RESET_VAL 0
#define USB_HOST_MAC_OHCI_LEGACY_STATUS__OHCI_0_LGCY_EMU_EN_O_RMASK 0x1
#define USB_HOST_MAC_OHCI_LEGACY_STATUS__OHCI_0_LGCY_EMU_EN_O_MASK  0x4
#define USB_HOST_MAC_OHCI_LEGACY_STATUS__OHCI_0_LGCY_EMU_EN_O_FIELD 2,2


/*
 * MAC_OHCI_STATUS.
 * OHCI Host Controller Status
 */
#define USB_HOST_MAC_OHCI_STATUS 0x1040

#define USB_HOST_MAC_OHCI_STATUS__OHCI_0_SPEED_O_SHIFT 0
#define USB_HOST_MAC_OHCI_STATUS__OHCI_0_SPEED_O_WIDTH 1
#define USB_HOST_MAC_OHCI_STATUS__OHCI_0_SPEED_O_RESET_VAL 0
#define USB_HOST_MAC_OHCI_STATUS__OHCI_0_SPEED_O_RMASK 0x1
#define USB_HOST_MAC_OHCI_STATUS__OHCI_0_SPEED_O_MASK  0x1
#define USB_HOST_MAC_OHCI_STATUS__OHCI_0_SPEED_O_FIELD 0,0

#define USB_HOST_MAC_OHCI_STATUS__OHCI_0_SUSPEND_O_SHIFT 1
#define USB_HOST_MAC_OHCI_STATUS__OHCI_0_SUSPEND_O_WIDTH 1
#define USB_HOST_MAC_OHCI_STATUS__OHCI_0_SUSPEND_O_RESET_VAL 0
#define USB_HOST_MAC_OHCI_STATUS__OHCI_0_SUSPEND_O_RMASK 0x1
#define USB_HOST_MAC_OHCI_STATUS__OHCI_0_SUSPEND_O_MASK  0x2
#define USB_HOST_MAC_OHCI_STATUS__OHCI_0_SUSPEND_O_FIELD 1,1

#define USB_HOST_MAC_OHCI_STATUS__OHCI_0_GLOBALSUSPEND_O_SHIFT 2
#define USB_HOST_MAC_OHCI_STATUS__OHCI_0_GLOBALSUSPEND_O_WIDTH 1
#define USB_HOST_MAC_OHCI_STATUS__OHCI_0_GLOBALSUSPEND_O_RESET_VAL 0
#define USB_HOST_MAC_OHCI_STATUS__OHCI_0_GLOBALSUSPEND_O_RMASK 0x1
#define USB_HOST_MAC_OHCI_STATUS__OHCI_0_GLOBALSUSPEND_O_MASK  0x4
#define USB_HOST_MAC_OHCI_STATUS__OHCI_0_GLOBALSUSPEND_O_FIELD 2,2

#define USB_HOST_MAC_OHCI_STATUS__OHCI_0_RWE_O_SHIFT 3
#define USB_HOST_MAC_OHCI_STATUS__OHCI_0_RWE_O_WIDTH 1
#define USB_HOST_MAC_OHCI_STATUS__OHCI_0_RWE_O_RESET_VAL 0
#define USB_HOST_MAC_OHCI_STATUS__OHCI_0_RWE_O_RMASK 0x1
#define USB_HOST_MAC_OHCI_STATUS__OHCI_0_RWE_O_MASK  0x8
#define USB_HOST_MAC_OHCI_STATUS__OHCI_0_RWE_O_FIELD 3,3

#define USB_HOST_MAC_OHCI_STATUS__OHCI_0_RMTWKP_O_SHIFT 4
#define USB_HOST_MAC_OHCI_STATUS__OHCI_0_RMTWKP_O_WIDTH 1
#define USB_HOST_MAC_OHCI_STATUS__OHCI_0_RMTWKP_O_RESET_VAL 0
#define USB_HOST_MAC_OHCI_STATUS__OHCI_0_RMTWKP_O_RMASK 0x1
#define USB_HOST_MAC_OHCI_STATUS__OHCI_0_RMTWKP_O_MASK  0x10
#define USB_HOST_MAC_OHCI_STATUS__OHCI_0_RMTWKP_O_FIELD 4,4

#define USB_HOST_MAC_OHCI_STATUS__OHCI_0_DRWE_O_SHIFT 5
#define USB_HOST_MAC_OHCI_STATUS__OHCI_0_DRWE_O_WIDTH 1
#define USB_HOST_MAC_OHCI_STATUS__OHCI_0_DRWE_O_RESET_VAL 0
#define USB_HOST_MAC_OHCI_STATUS__OHCI_0_DRWE_O_RMASK 0x1
#define USB_HOST_MAC_OHCI_STATUS__OHCI_0_DRWE_O_MASK  0x20
#define USB_HOST_MAC_OHCI_STATUS__OHCI_0_DRWE_O_FIELD 5,5

#define USB_HOST_MAC_OHCI_STATUS__OHCI_0_CCS_O_SHIFT 6
#define USB_HOST_MAC_OHCI_STATUS__OHCI_0_CCS_O_WIDTH 1
#define USB_HOST_MAC_OHCI_STATUS__OHCI_0_CCS_O_RESET_VAL 0
#define USB_HOST_MAC_OHCI_STATUS__OHCI_0_CCS_O_RMASK 0x1
#define USB_HOST_MAC_OHCI_STATUS__OHCI_0_CCS_O_MASK  0x40
#define USB_HOST_MAC_OHCI_STATUS__OHCI_0_CCS_O_FIELD 6,6

#define USB_HOST_MAC_OHCI_STATUS__OHCI_0_SOF_O_N_SHIFT 7
#define USB_HOST_MAC_OHCI_STATUS__OHCI_0_SOF_O_N_WIDTH 1
#define USB_HOST_MAC_OHCI_STATUS__OHCI_0_SOF_O_N_RESET_VAL 0
#define USB_HOST_MAC_OHCI_STATUS__OHCI_0_SOF_O_N_RMASK 0x1
#define USB_HOST_MAC_OHCI_STATUS__OHCI_0_SOF_O_N_MASK  0x80
#define USB_HOST_MAC_OHCI_STATUS__OHCI_0_SOF_O_N_FIELD 7,7

#define USB_HOST_MAC_OHCI_STATUS__OHCI_0_BUFACC_O_SHIFT 8
#define USB_HOST_MAC_OHCI_STATUS__OHCI_0_BUFACC_O_WIDTH 1
#define USB_HOST_MAC_OHCI_STATUS__OHCI_0_BUFACC_O_RESET_VAL 0
#define USB_HOST_MAC_OHCI_STATUS__OHCI_0_BUFACC_O_RMASK 0x1
#define USB_HOST_MAC_OHCI_STATUS__OHCI_0_BUFACC_O_MASK  0x100
#define USB_HOST_MAC_OHCI_STATUS__OHCI_0_BUFACC_O_FIELD 8,8

#define USB_HOST_MAC_OHCI_STATUS__OHCI_0_SMI_O_N_SHIFT 9
#define USB_HOST_MAC_OHCI_STATUS__OHCI_0_SMI_O_N_WIDTH 1
#define USB_HOST_MAC_OHCI_STATUS__OHCI_0_SMI_O_N_RESET_VAL 0
#define USB_HOST_MAC_OHCI_STATUS__OHCI_0_SMI_O_N_RMASK 0x1
#define USB_HOST_MAC_OHCI_STATUS__OHCI_0_SMI_O_N_MASK  0x200
#define USB_HOST_MAC_OHCI_STATUS__OHCI_0_SMI_O_N_FIELD 9,9

#define USB_HOST_MAC_OHCI_STATUS__OHCI_0_IRQ_O_N_SHIFT 10
#define USB_HOST_MAC_OHCI_STATUS__OHCI_0_IRQ_O_N_WIDTH 1
#define USB_HOST_MAC_OHCI_STATUS__OHCI_0_IRQ_O_N_RESET_VAL 0
#define USB_HOST_MAC_OHCI_STATUS__OHCI_0_IRQ_O_N_RMASK 0x1
#define USB_HOST_MAC_OHCI_STATUS__OHCI_0_IRQ_O_N_MASK  0x400
#define USB_HOST_MAC_OHCI_STATUS__OHCI_0_IRQ_O_N_FIELD 10,10


/*
 * MAC_SYS_INTERRUPT_CONTROL.
 * MAC system interrupt signal
 */
#define USB_HOST_MAC_SYS_INTERRUPT_CONTROL 0x1000

#define USB_HOST_MAC_SYS_INTERRUPT_CONTROL__SYS_INTERRUPT_I_SHIFT 0
#define USB_HOST_MAC_SYS_INTERRUPT_CONTROL__SYS_INTERRUPT_I_WIDTH 1
#define USB_HOST_MAC_SYS_INTERRUPT_CONTROL__SYS_INTERRUPT_I_RESET_VAL 0
#define USB_HOST_MAC_SYS_INTERRUPT_CONTROL__SYS_INTERRUPT_I_RMASK 0x1
#define USB_HOST_MAC_SYS_INTERRUPT_CONTROL__SYS_INTERRUPT_I_MASK  0x1
#define USB_HOST_MAC_SYS_INTERRUPT_CONTROL__SYS_INTERRUPT_I_FIELD 0,0


/*
 * MAC_ULPI_STRAP_CONTROL.
 * ULPI strap signal
 */
#define USB_HOST_MAC_ULPI_STRAP_CONTROL 0x1018

#define USB_HOST_MAC_ULPI_STRAP_CONTROL__SS_ULPI_PP2VBUS_I_SHIFT 0
#define USB_HOST_MAC_ULPI_STRAP_CONTROL__SS_ULPI_PP2VBUS_I_WIDTH 1
#define USB_HOST_MAC_ULPI_STRAP_CONTROL__SS_ULPI_PP2VBUS_I_RESET_VAL 0
#define USB_HOST_MAC_ULPI_STRAP_CONTROL__SS_ULPI_PP2VBUS_I_RMASK 0x1
#define USB_HOST_MAC_ULPI_STRAP_CONTROL__SS_ULPI_PP2VBUS_I_MASK  0x1
#define USB_HOST_MAC_ULPI_STRAP_CONTROL__SS_ULPI_PP2VBUS_I_FIELD 0,0


/*
 * Memory Info.
 * This register provides information about memory setup required for this
 * device.
 */
#define USB_HOST_MEM_INFO 0x0018

#define USB_HOST_MEM_INFO__REQ_PORTS_SHIFT 0
#define USB_HOST_MEM_INFO__REQ_PORTS_WIDTH 32
#define USB_HOST_MEM_INFO__REQ_PORTS_RESET_VAL 32768
#define USB_HOST_MEM_INFO__REQ_PORTS_RMASK 0xffffffff
#define USB_HOST_MEM_INFO__REQ_PORTS_MASK  0xffffffff
#define USB_HOST_MEM_INFO__REQ_PORTS_FIELD 0,31

#define USB_HOST_MEM_INFO__NUM_HFH_TBL_SHIFT 32
#define USB_HOST_MEM_INFO__NUM_HFH_TBL_WIDTH 4
#define USB_HOST_MEM_INFO__NUM_HFH_TBL_RESET_VAL 1
#define USB_HOST_MEM_INFO__NUM_HFH_TBL_RMASK 0xf
#define USB_HOST_MEM_INFO__NUM_HFH_TBL_MASK  _64bit(0xf00000000)
#define USB_HOST_MEM_INFO__NUM_HFH_TBL_FIELD 32,35

#define USB_HOST_MEM_INFO__NUM_ASIDS_SHIFT 40
#define USB_HOST_MEM_INFO__NUM_ASIDS_WIDTH 8
#define USB_HOST_MEM_INFO__NUM_ASIDS_RESET_VAL 1
#define USB_HOST_MEM_INFO__NUM_ASIDS_RMASK 0xff
#define USB_HOST_MEM_INFO__NUM_ASIDS_MASK  _64bit(0xff0000000000)
#define USB_HOST_MEM_INFO__NUM_ASIDS_FIELD 40,47

#define USB_HOST_MEM_INFO__NUM_TLB_ENT_SHIFT 48
#define USB_HOST_MEM_INFO__NUM_TLB_ENT_WIDTH 8
#define USB_HOST_MEM_INFO__NUM_TLB_ENT_RESET_VAL 16
#define USB_HOST_MEM_INFO__NUM_TLB_ENT_RMASK 0xff
#define USB_HOST_MEM_INFO__NUM_TLB_ENT_MASK  _64bit(0xff000000000000)
#define USB_HOST_MEM_INFO__NUM_TLB_ENT_FIELD 48,55


/*
 * MMIO Error Information.
 * Provides diagnostics information when an MMIO error occurs.  Captured
 * whenever the MMIO_ERROR interrupt condition occurs which includes size
 * errors, read/write errors, and protection errors.
 */
#define USB_HOST_MMIO_ERROR_INFO 0x0218

#define USB_HOST_MMIO_ERROR_INFO__SRC_SHIFT 0
#define USB_HOST_MMIO_ERROR_INFO__SRC_WIDTH 8
#define USB_HOST_MMIO_ERROR_INFO__SRC_RESET_VAL 0
#define USB_HOST_MMIO_ERROR_INFO__SRC_RMASK 0xff
#define USB_HOST_MMIO_ERROR_INFO__SRC_MASK  0xff
#define USB_HOST_MMIO_ERROR_INFO__SRC_FIELD 0,7

#define USB_HOST_MMIO_ERROR_INFO__SIZE_SHIFT 8
#define USB_HOST_MMIO_ERROR_INFO__SIZE_WIDTH 4
#define USB_HOST_MMIO_ERROR_INFO__SIZE_RESET_VAL 0
#define USB_HOST_MMIO_ERROR_INFO__SIZE_RMASK 0xf
#define USB_HOST_MMIO_ERROR_INFO__SIZE_MASK  0xf00
#define USB_HOST_MMIO_ERROR_INFO__SIZE_FIELD 8,11

#define USB_HOST_MMIO_ERROR_INFO__PA_SHIFT 12
#define USB_HOST_MMIO_ERROR_INFO__PA_WIDTH 42
#define USB_HOST_MMIO_ERROR_INFO__PA_RESET_VAL 0
#define USB_HOST_MMIO_ERROR_INFO__PA_RMASK _64bit(0x3ffffffffff)
#define USB_HOST_MMIO_ERROR_INFO__PA_MASK  _64bit(0x3ffffffffff000)
#define USB_HOST_MMIO_ERROR_INFO__PA_FIELD 12,53

#define USB_HOST_MMIO_ERROR_INFO__OPC_SHIFT 54
#define USB_HOST_MMIO_ERROR_INFO__OPC_WIDTH 5
#define USB_HOST_MMIO_ERROR_INFO__OPC_RESET_VAL 0
#define USB_HOST_MMIO_ERROR_INFO__OPC_RMASK 0x1f
#define USB_HOST_MMIO_ERROR_INFO__OPC_MASK  _64bit(0x7c0000000000000)
#define USB_HOST_MMIO_ERROR_INFO__OPC_FIELD 54,58


/*
 * MMIO Info.
 * This register provides information about how the physical address is
 * interpreted by the IO device.  The PA is divided into
 * {CHANNEL,SVC_DOM,IGNORED,REGION,OFFSET}.  The values in this register
 * define the size of each of these fields.
 */
#define USB_HOST_MMIO_INFO 0x0010

#define USB_HOST_MMIO_INFO__CH_WIDTH_SHIFT 0
#define USB_HOST_MMIO_INFO__CH_WIDTH_WIDTH 4
#define USB_HOST_MMIO_INFO__CH_WIDTH_RESET_VAL 2
#define USB_HOST_MMIO_INFO__CH_WIDTH_RMASK 0xf
#define USB_HOST_MMIO_INFO__CH_WIDTH_MASK  0xf
#define USB_HOST_MMIO_INFO__CH_WIDTH_FIELD 0,3

#define USB_HOST_MMIO_INFO__NUM_CH_SHIFT 4
#define USB_HOST_MMIO_INFO__NUM_CH_WIDTH 15
#define USB_HOST_MMIO_INFO__NUM_CH_RESET_VAL 3
#define USB_HOST_MMIO_INFO__NUM_CH_RMASK 0x7fff
#define USB_HOST_MMIO_INFO__NUM_CH_MASK  0x7fff0
#define USB_HOST_MMIO_INFO__NUM_CH_FIELD 4,18

#define USB_HOST_MMIO_INFO__SVC_DOM_WIDTH_SHIFT 19
#define USB_HOST_MMIO_INFO__SVC_DOM_WIDTH_WIDTH 3
#define USB_HOST_MMIO_INFO__SVC_DOM_WIDTH_RESET_VAL 0
#define USB_HOST_MMIO_INFO__SVC_DOM_WIDTH_RMASK 0x7
#define USB_HOST_MMIO_INFO__SVC_DOM_WIDTH_MASK  0x380000
#define USB_HOST_MMIO_INFO__SVC_DOM_WIDTH_FIELD 19,21

#define USB_HOST_MMIO_INFO__NUM_SVC_DOM_SHIFT 22
#define USB_HOST_MMIO_INFO__NUM_SVC_DOM_WIDTH 7
#define USB_HOST_MMIO_INFO__NUM_SVC_DOM_RESET_VAL 0
#define USB_HOST_MMIO_INFO__NUM_SVC_DOM_RMASK 0x7f
#define USB_HOST_MMIO_INFO__NUM_SVC_DOM_MASK  0x1fc00000
#define USB_HOST_MMIO_INFO__NUM_SVC_DOM_FIELD 22,28

#define USB_HOST_MMIO_INFO__OFFSET_WIDTH_SHIFT 29
#define USB_HOST_MMIO_INFO__OFFSET_WIDTH_WIDTH 6
#define USB_HOST_MMIO_INFO__OFFSET_WIDTH_RESET_VAL 18
#define USB_HOST_MMIO_INFO__OFFSET_WIDTH_RMASK 0x3f
#define USB_HOST_MMIO_INFO__OFFSET_WIDTH_MASK  _64bit(0x7e0000000)
#define USB_HOST_MMIO_INFO__OFFSET_WIDTH_FIELD 29,34

#define USB_HOST_MMIO_INFO__REGION_WIDTH_SHIFT 35
#define USB_HOST_MMIO_INFO__REGION_WIDTH_WIDTH 6
#define USB_HOST_MMIO_INFO__REGION_WIDTH_RESET_VAL 0
#define USB_HOST_MMIO_INFO__REGION_WIDTH_RMASK 0x3f
#define USB_HOST_MMIO_INFO__REGION_WIDTH_MASK  _64bit(0x1f800000000)
#define USB_HOST_MMIO_INFO__REGION_WIDTH_FIELD 35,40


/*
 * OHCD_HC_BULK_CURRENT_ED_REG.
 * see OHCI Specification
 */
#define USB_HOST_OHCD_HC_BULK_CURRENT_ED_REG 0x3002c

#define USB_HOST_OHCD_HC_BULK_CURRENT_ED_REG__OHCD_HC_BULK_CURRENT_ED_REG_SHIFT 0
#define USB_HOST_OHCD_HC_BULK_CURRENT_ED_REG__OHCD_HC_BULK_CURRENT_ED_REG_WIDTH 32
#define USB_HOST_OHCD_HC_BULK_CURRENT_ED_REG__OHCD_HC_BULK_CURRENT_ED_REG_RESET_VAL 0
#define USB_HOST_OHCD_HC_BULK_CURRENT_ED_REG__OHCD_HC_BULK_CURRENT_ED_REG_RMASK 0xffffffff
#define USB_HOST_OHCD_HC_BULK_CURRENT_ED_REG__OHCD_HC_BULK_CURRENT_ED_REG_MASK  0xffffffff
#define USB_HOST_OHCD_HC_BULK_CURRENT_ED_REG__OHCD_HC_BULK_CURRENT_ED_REG_FIELD 0,31


/*
 * OHCD_HC_BULK_HEAD_ED_REG.
 * see OHCI Specification
 */
#define USB_HOST_OHCD_HC_BULK_HEAD_ED_REG 0x30028

#define USB_HOST_OHCD_HC_BULK_HEAD_ED_REG__OHCD_HC_BULK_HEAD_ED_REG_SHIFT 0
#define USB_HOST_OHCD_HC_BULK_HEAD_ED_REG__OHCD_HC_BULK_HEAD_ED_REG_WIDTH 32
#define USB_HOST_OHCD_HC_BULK_HEAD_ED_REG__OHCD_HC_BULK_HEAD_ED_REG_RESET_VAL 0
#define USB_HOST_OHCD_HC_BULK_HEAD_ED_REG__OHCD_HC_BULK_HEAD_ED_REG_RMASK 0xffffffff
#define USB_HOST_OHCD_HC_BULK_HEAD_ED_REG__OHCD_HC_BULK_HEAD_ED_REG_MASK  0xffffffff
#define USB_HOST_OHCD_HC_BULK_HEAD_ED_REG__OHCD_HC_BULK_HEAD_ED_REG_FIELD 0,31


/*
 * OHCD_HC_COMMAND_STATUS_REG.
 * see OHCI Specification
 */
#define USB_HOST_OHCD_HC_COMMAND_STATUS_REG 0x30008

#define USB_HOST_OHCD_HC_COMMAND_STATUS_REG__OHCD_HC_COMMAND_STATUS_REG_SHIFT 0
#define USB_HOST_OHCD_HC_COMMAND_STATUS_REG__OHCD_HC_COMMAND_STATUS_REG_WIDTH 32
#define USB_HOST_OHCD_HC_COMMAND_STATUS_REG__OHCD_HC_COMMAND_STATUS_REG_RESET_VAL 0
#define USB_HOST_OHCD_HC_COMMAND_STATUS_REG__OHCD_HC_COMMAND_STATUS_REG_RMASK 0xffffffff
#define USB_HOST_OHCD_HC_COMMAND_STATUS_REG__OHCD_HC_COMMAND_STATUS_REG_MASK  0xffffffff
#define USB_HOST_OHCD_HC_COMMAND_STATUS_REG__OHCD_HC_COMMAND_STATUS_REG_FIELD 0,31


/*
 * OHCD_HC_CONTROL_CURRENT_ED_REG.
 * see OHCI Specification
 */
#define USB_HOST_OHCD_HC_CONTROL_CURRENT_ED_REG 0x30024

#define USB_HOST_OHCD_HC_CONTROL_CURRENT_ED_REG__OHCD_HC_CONTROL_CURRENT_ED_REG_SHIFT 0
#define USB_HOST_OHCD_HC_CONTROL_CURRENT_ED_REG__OHCD_HC_CONTROL_CURRENT_ED_REG_WIDTH 32
#define USB_HOST_OHCD_HC_CONTROL_CURRENT_ED_REG__OHCD_HC_CONTROL_CURRENT_ED_REG_RESET_VAL 0
#define USB_HOST_OHCD_HC_CONTROL_CURRENT_ED_REG__OHCD_HC_CONTROL_CURRENT_ED_REG_RMASK 0xffffffff
#define USB_HOST_OHCD_HC_CONTROL_CURRENT_ED_REG__OHCD_HC_CONTROL_CURRENT_ED_REG_MASK  0xffffffff
#define USB_HOST_OHCD_HC_CONTROL_CURRENT_ED_REG__OHCD_HC_CONTROL_CURRENT_ED_REG_FIELD 0,31


/*
 * OHCD_HC_CONTROL_HEAD_ED_REG.
 * see OHCI Specification
 */
#define USB_HOST_OHCD_HC_CONTROL_HEAD_ED_REG 0x30020

#define USB_HOST_OHCD_HC_CONTROL_HEAD_ED_REG__OHCD_HC_CONTROL_HEAD_ED_REG_SHIFT 0
#define USB_HOST_OHCD_HC_CONTROL_HEAD_ED_REG__OHCD_HC_CONTROL_HEAD_ED_REG_WIDTH 32
#define USB_HOST_OHCD_HC_CONTROL_HEAD_ED_REG__OHCD_HC_CONTROL_HEAD_ED_REG_RESET_VAL 0
#define USB_HOST_OHCD_HC_CONTROL_HEAD_ED_REG__OHCD_HC_CONTROL_HEAD_ED_REG_RMASK 0xffffffff
#define USB_HOST_OHCD_HC_CONTROL_HEAD_ED_REG__OHCD_HC_CONTROL_HEAD_ED_REG_MASK  0xffffffff
#define USB_HOST_OHCD_HC_CONTROL_HEAD_ED_REG__OHCD_HC_CONTROL_HEAD_ED_REG_FIELD 0,31


/*
 * OHCD_HC_CONTROL_REG.
 * see OHCI Specification
 */
#define USB_HOST_OHCD_HC_CONTROL_REG 0x30004

#define USB_HOST_OHCD_HC_CONTROL_REG__OHCD_HC_CONTROL_REG_SHIFT 0
#define USB_HOST_OHCD_HC_CONTROL_REG__OHCD_HC_CONTROL_REG_WIDTH 32
#define USB_HOST_OHCD_HC_CONTROL_REG__OHCD_HC_CONTROL_REG_RESET_VAL 0
#define USB_HOST_OHCD_HC_CONTROL_REG__OHCD_HC_CONTROL_REG_RMASK 0xffffffff
#define USB_HOST_OHCD_HC_CONTROL_REG__OHCD_HC_CONTROL_REG_MASK  0xffffffff
#define USB_HOST_OHCD_HC_CONTROL_REG__OHCD_HC_CONTROL_REG_FIELD 0,31


/*
 * OHCD_HC_DONE_HEAD_REG.
 * see OHCI Specification
 */
#define USB_HOST_OHCD_HC_DONE_HEAD_REG 0x30030

#define USB_HOST_OHCD_HC_DONE_HEAD_REG__OHCD_HC_DONE_HEAD_REG_SHIFT 0
#define USB_HOST_OHCD_HC_DONE_HEAD_REG__OHCD_HC_DONE_HEAD_REG_WIDTH 32
#define USB_HOST_OHCD_HC_DONE_HEAD_REG__OHCD_HC_DONE_HEAD_REG_RESET_VAL 0
#define USB_HOST_OHCD_HC_DONE_HEAD_REG__OHCD_HC_DONE_HEAD_REG_RMASK 0xffffffff
#define USB_HOST_OHCD_HC_DONE_HEAD_REG__OHCD_HC_DONE_HEAD_REG_MASK  0xffffffff
#define USB_HOST_OHCD_HC_DONE_HEAD_REG__OHCD_HC_DONE_HEAD_REG_FIELD 0,31


/*
 * OHCD_HC_FM_INTERVAL_REG.
 * see OHCI Specification
 */
#define USB_HOST_OHCD_HC_FM_INTERVAL_REG 0x30034

#define USB_HOST_OHCD_HC_FM_INTERVAL_REG__OHCD_HC_FM_INTERVAL_REG_SHIFT 0
#define USB_HOST_OHCD_HC_FM_INTERVAL_REG__OHCD_HC_FM_INTERVAL_REG_WIDTH 32
#define USB_HOST_OHCD_HC_FM_INTERVAL_REG__OHCD_HC_FM_INTERVAL_REG_RESET_VAL 0
#define USB_HOST_OHCD_HC_FM_INTERVAL_REG__OHCD_HC_FM_INTERVAL_REG_RMASK 0xffffffff
#define USB_HOST_OHCD_HC_FM_INTERVAL_REG__OHCD_HC_FM_INTERVAL_REG_MASK  0xffffffff
#define USB_HOST_OHCD_HC_FM_INTERVAL_REG__OHCD_HC_FM_INTERVAL_REG_FIELD 0,31


/*
 * OHCD_HC_FM_NUMBER_REG.
 * see OHCI Specification
 */
#define USB_HOST_OHCD_HC_FM_NUMBER_REG 0x3003c

#define USB_HOST_OHCD_HC_FM_NUMBER_REG__OHCD_HC_FM_NUMBER_REG_SHIFT 0
#define USB_HOST_OHCD_HC_FM_NUMBER_REG__OHCD_HC_FM_NUMBER_REG_WIDTH 32
#define USB_HOST_OHCD_HC_FM_NUMBER_REG__OHCD_HC_FM_NUMBER_REG_RESET_VAL 0
#define USB_HOST_OHCD_HC_FM_NUMBER_REG__OHCD_HC_FM_NUMBER_REG_RMASK 0xffffffff
#define USB_HOST_OHCD_HC_FM_NUMBER_REG__OHCD_HC_FM_NUMBER_REG_MASK  0xffffffff
#define USB_HOST_OHCD_HC_FM_NUMBER_REG__OHCD_HC_FM_NUMBER_REG_FIELD 0,31


/*
 * OHCD_HC_FM_REMAINING_REG.
 * see OHCI Specification
 */
#define USB_HOST_OHCD_HC_FM_REMAINING_REG 0x30038

#define USB_HOST_OHCD_HC_FM_REMAINING_REG__OHCD_HC_FM_REMAINING_REG_SHIFT 0
#define USB_HOST_OHCD_HC_FM_REMAINING_REG__OHCD_HC_FM_REMAINING_REG_WIDTH 32
#define USB_HOST_OHCD_HC_FM_REMAINING_REG__OHCD_HC_FM_REMAINING_REG_RESET_VAL 0
#define USB_HOST_OHCD_HC_FM_REMAINING_REG__OHCD_HC_FM_REMAINING_REG_RMASK 0xffffffff
#define USB_HOST_OHCD_HC_FM_REMAINING_REG__OHCD_HC_FM_REMAINING_REG_MASK  0xffffffff
#define USB_HOST_OHCD_HC_FM_REMAINING_REG__OHCD_HC_FM_REMAINING_REG_FIELD 0,31


/*
 * OHCD_HC_HCCA_REG.
 * see OHCI Specification
 */
#define USB_HOST_OHCD_HC_HCCA_REG 0x30018

#define USB_HOST_OHCD_HC_HCCA_REG__OHCD_HC_HCCA_REG_SHIFT 0
#define USB_HOST_OHCD_HC_HCCA_REG__OHCD_HC_HCCA_REG_WIDTH 32
#define USB_HOST_OHCD_HC_HCCA_REG__OHCD_HC_HCCA_REG_RESET_VAL 0
#define USB_HOST_OHCD_HC_HCCA_REG__OHCD_HC_HCCA_REG_RMASK 0xffffffff
#define USB_HOST_OHCD_HC_HCCA_REG__OHCD_HC_HCCA_REG_MASK  0xffffffff
#define USB_HOST_OHCD_HC_HCCA_REG__OHCD_HC_HCCA_REG_FIELD 0,31


/*
 * OHCD_HC_INTERRUPT_DISABLE_REG.
 * see OHCI Specification
 */
#define USB_HOST_OHCD_HC_INTERRUPT_DISABLE_REG 0x30014

#define USB_HOST_OHCD_HC_INTERRUPT_DISABLE_REG__OHCD_HC_INTERRUPT_DISABLE_REG_SHIFT 0
#define USB_HOST_OHCD_HC_INTERRUPT_DISABLE_REG__OHCD_HC_INTERRUPT_DISABLE_REG_WIDTH 32
#define USB_HOST_OHCD_HC_INTERRUPT_DISABLE_REG__OHCD_HC_INTERRUPT_DISABLE_REG_RESET_VAL 0
#define USB_HOST_OHCD_HC_INTERRUPT_DISABLE_REG__OHCD_HC_INTERRUPT_DISABLE_REG_RMASK 0xffffffff
#define USB_HOST_OHCD_HC_INTERRUPT_DISABLE_REG__OHCD_HC_INTERRUPT_DISABLE_REG_MASK  0xffffffff
#define USB_HOST_OHCD_HC_INTERRUPT_DISABLE_REG__OHCD_HC_INTERRUPT_DISABLE_REG_FIELD 0,31


/*
 * OHCD_HC_INTERRUPT_ENABLE_REG.
 * see OHCI Specification
 */
#define USB_HOST_OHCD_HC_INTERRUPT_ENABLE_REG 0x30010

#define USB_HOST_OHCD_HC_INTERRUPT_ENABLE_REG__OHCD_HC_INTERRUPT_ENABLE_REG_SHIFT 0
#define USB_HOST_OHCD_HC_INTERRUPT_ENABLE_REG__OHCD_HC_INTERRUPT_ENABLE_REG_WIDTH 32
#define USB_HOST_OHCD_HC_INTERRUPT_ENABLE_REG__OHCD_HC_INTERRUPT_ENABLE_REG_RESET_VAL 0
#define USB_HOST_OHCD_HC_INTERRUPT_ENABLE_REG__OHCD_HC_INTERRUPT_ENABLE_REG_RMASK 0xffffffff
#define USB_HOST_OHCD_HC_INTERRUPT_ENABLE_REG__OHCD_HC_INTERRUPT_ENABLE_REG_MASK  0xffffffff
#define USB_HOST_OHCD_HC_INTERRUPT_ENABLE_REG__OHCD_HC_INTERRUPT_ENABLE_REG_FIELD 0,31


/*
 * OHCD_HC_INTERRUPT_STATUS_REG.
 * see OHCI Specification
 */
#define USB_HOST_OHCD_HC_INTERRUPT_STATUS_REG 0x3000c

#define USB_HOST_OHCD_HC_INTERRUPT_STATUS_REG__OHCD_HC_INTERRUPT_STATUS_REG_SHIFT 0
#define USB_HOST_OHCD_HC_INTERRUPT_STATUS_REG__OHCD_HC_INTERRUPT_STATUS_REG_WIDTH 32
#define USB_HOST_OHCD_HC_INTERRUPT_STATUS_REG__OHCD_HC_INTERRUPT_STATUS_REG_RESET_VAL 0
#define USB_HOST_OHCD_HC_INTERRUPT_STATUS_REG__OHCD_HC_INTERRUPT_STATUS_REG_RMASK 0xffffffff
#define USB_HOST_OHCD_HC_INTERRUPT_STATUS_REG__OHCD_HC_INTERRUPT_STATUS_REG_MASK  0xffffffff
#define USB_HOST_OHCD_HC_INTERRUPT_STATUS_REG__OHCD_HC_INTERRUPT_STATUS_REG_FIELD 0,31


/*
 * OHCD_HC_LS_THRESHOLD_REG.
 * see OHCI Specification
 */
#define USB_HOST_OHCD_HC_LS_THRESHOLD_REG 0x30044

#define USB_HOST_OHCD_HC_LS_THRESHOLD_REG__OHCD_HC_LS_THRESHOLD_REG_SHIFT 0
#define USB_HOST_OHCD_HC_LS_THRESHOLD_REG__OHCD_HC_LS_THRESHOLD_REG_WIDTH 32
#define USB_HOST_OHCD_HC_LS_THRESHOLD_REG__OHCD_HC_LS_THRESHOLD_REG_RESET_VAL 0
#define USB_HOST_OHCD_HC_LS_THRESHOLD_REG__OHCD_HC_LS_THRESHOLD_REG_RMASK 0xffffffff
#define USB_HOST_OHCD_HC_LS_THRESHOLD_REG__OHCD_HC_LS_THRESHOLD_REG_MASK  0xffffffff
#define USB_HOST_OHCD_HC_LS_THRESHOLD_REG__OHCD_HC_LS_THRESHOLD_REG_FIELD 0,31


/*
 * OHCD_HC_PERIODIC_START_REG.
 * see OHCI Specification
 */
#define USB_HOST_OHCD_HC_PERIODIC_START_REG 0x30040

#define USB_HOST_OHCD_HC_PERIODIC_START_REG__OHCD_HC_PERIODIC_START_REG_SHIFT 0
#define USB_HOST_OHCD_HC_PERIODIC_START_REG__OHCD_HC_PERIODIC_START_REG_WIDTH 32
#define USB_HOST_OHCD_HC_PERIODIC_START_REG__OHCD_HC_PERIODIC_START_REG_RESET_VAL 0
#define USB_HOST_OHCD_HC_PERIODIC_START_REG__OHCD_HC_PERIODIC_START_REG_RMASK 0xffffffff
#define USB_HOST_OHCD_HC_PERIODIC_START_REG__OHCD_HC_PERIODIC_START_REG_MASK  0xffffffff
#define USB_HOST_OHCD_HC_PERIODIC_START_REG__OHCD_HC_PERIODIC_START_REG_FIELD 0,31


/*
 * OHCD_HC_PERIOD_CURRENT_ED_REG.
 * see OHCI Specification
 */
#define USB_HOST_OHCD_HC_PERIOD_CURRENT_ED_REG 0x3001c

#define USB_HOST_OHCD_HC_PERIOD_CURRENT_ED_REG__OHCD_HC_PERIOD_CURRENT_ED_REG_SHIFT 0
#define USB_HOST_OHCD_HC_PERIOD_CURRENT_ED_REG__OHCD_HC_PERIOD_CURRENT_ED_REG_WIDTH 32
#define USB_HOST_OHCD_HC_PERIOD_CURRENT_ED_REG__OHCD_HC_PERIOD_CURRENT_ED_REG_RESET_VAL 0
#define USB_HOST_OHCD_HC_PERIOD_CURRENT_ED_REG__OHCD_HC_PERIOD_CURRENT_ED_REG_RMASK 0xffffffff
#define USB_HOST_OHCD_HC_PERIOD_CURRENT_ED_REG__OHCD_HC_PERIOD_CURRENT_ED_REG_MASK  0xffffffff
#define USB_HOST_OHCD_HC_PERIOD_CURRENT_ED_REG__OHCD_HC_PERIOD_CURRENT_ED_REG_FIELD 0,31


/*
 * OHCD_HC_REVISION_REG.
 * OHCI Revision
 */
#define USB_HOST_OHCD_HC_REVISION_REG 0x30000

#define USB_HOST_OHCD_HC_REVISION_REG__OHCD_HC_REVISION_REG_SHIFT 0
#define USB_HOST_OHCD_HC_REVISION_REG__OHCD_HC_REVISION_REG_WIDTH 32
#define USB_HOST_OHCD_HC_REVISION_REG__OHCD_HC_REVISION_REG_RESET_VAL 0
#define USB_HOST_OHCD_HC_REVISION_REG__OHCD_HC_REVISION_REG_RMASK 0xffffffff
#define USB_HOST_OHCD_HC_REVISION_REG__OHCD_HC_REVISION_REG_MASK  0xffffffff
#define USB_HOST_OHCD_HC_REVISION_REG__OHCD_HC_REVISION_REG_FIELD 0,31


/*
 * OHCD_HC_RH_DESCRIPTOR_A.
 * see OHCI Specification
 */
#define USB_HOST_OHCD_HC_RH_DESCRIPTOR_A 0x30048

#define USB_HOST_OHCD_HC_RH_DESCRIPTOR_A__OHCD_HC_RH_DESCRIPTOR_A_SHIFT 0
#define USB_HOST_OHCD_HC_RH_DESCRIPTOR_A__OHCD_HC_RH_DESCRIPTOR_A_WIDTH 32
#define USB_HOST_OHCD_HC_RH_DESCRIPTOR_A__OHCD_HC_RH_DESCRIPTOR_A_RESET_VAL 0
#define USB_HOST_OHCD_HC_RH_DESCRIPTOR_A__OHCD_HC_RH_DESCRIPTOR_A_RMASK 0xffffffff
#define USB_HOST_OHCD_HC_RH_DESCRIPTOR_A__OHCD_HC_RH_DESCRIPTOR_A_MASK  0xffffffff
#define USB_HOST_OHCD_HC_RH_DESCRIPTOR_A__OHCD_HC_RH_DESCRIPTOR_A_FIELD 0,31


/*
 * OHCD_HC_RH_DESCRIPTOR_B.
 * see OHCI Specification
 */
#define USB_HOST_OHCD_HC_RH_DESCRIPTOR_B 0x3004c

#define USB_HOST_OHCD_HC_RH_DESCRIPTOR_B__OHCD_HC_RH_DESCRIPTOR_B_SHIFT 0
#define USB_HOST_OHCD_HC_RH_DESCRIPTOR_B__OHCD_HC_RH_DESCRIPTOR_B_WIDTH 32
#define USB_HOST_OHCD_HC_RH_DESCRIPTOR_B__OHCD_HC_RH_DESCRIPTOR_B_RESET_VAL 0
#define USB_HOST_OHCD_HC_RH_DESCRIPTOR_B__OHCD_HC_RH_DESCRIPTOR_B_RMASK 0xffffffff
#define USB_HOST_OHCD_HC_RH_DESCRIPTOR_B__OHCD_HC_RH_DESCRIPTOR_B_MASK  0xffffffff
#define USB_HOST_OHCD_HC_RH_DESCRIPTOR_B__OHCD_HC_RH_DESCRIPTOR_B_FIELD 0,31


/*
 * OHCD_HC_RH_STATUS.
 * see OHCI Specification
 */
#define USB_HOST_OHCD_HC_RH_STATUS 0x30050

#define USB_HOST_OHCD_HC_RH_STATUS__OHCD_HC_RH_STATUS_SHIFT 0
#define USB_HOST_OHCD_HC_RH_STATUS__OHCD_HC_RH_STATUS_WIDTH 32
#define USB_HOST_OHCD_HC_RH_STATUS__OHCD_HC_RH_STATUS_RESET_VAL 0
#define USB_HOST_OHCD_HC_RH_STATUS__OHCD_HC_RH_STATUS_RMASK 0xffffffff
#define USB_HOST_OHCD_HC_RH_STATUS__OHCD_HC_RH_STATUS_MASK  0xffffffff
#define USB_HOST_OHCD_HC_RH_STATUS__OHCD_HC_RH_STATUS_FIELD 0,31


/*
 * PERIODICLISTBASE_REG.
 * Periodic Frame List Base Address Register
 */
#define USB_HOST_PERIODICLISTBASE_REG 0x10024

#define USB_HOST_PERIODICLISTBASE_REG__PERIODICLISTBASE_REG_SHIFT 0
#define USB_HOST_PERIODICLISTBASE_REG__PERIODICLISTBASE_REG_WIDTH 32
#define USB_HOST_PERIODICLISTBASE_REG__PERIODICLISTBASE_REG_RESET_VAL 0
#define USB_HOST_PERIODICLISTBASE_REG__PERIODICLISTBASE_REG_RMASK 0xffffffff
#define USB_HOST_PERIODICLISTBASE_REG__PERIODICLISTBASE_REG_MASK  0xffffffff
#define USB_HOST_PERIODICLISTBASE_REG__PERIODICLISTBASE_REG_FIELD 0,31


/*
 * PORTSC_REG.
 * Port Status/Control
 */
#define USB_HOST_PORTSC_REG 0x10054

#define USB_HOST_PORTSC_REG__PORTSC_REG_SHIFT 0
#define USB_HOST_PORTSC_REG__PORTSC_REG_WIDTH 32
#define USB_HOST_PORTSC_REG__PORTSC_REG_RESET_VAL 0
#define USB_HOST_PORTSC_REG__PORTSC_REG_RMASK 0xffffffff
#define USB_HOST_PORTSC_REG__PORTSC_REG_MASK  0xffffffff
#define USB_HOST_PORTSC_REG__PORTSC_REG_FIELD 0,31


/*
 * USB Host Reset Control.
 * Control USB Host reset
 */
#define USB_HOST_RESET_CONTROL 0x0600

#define USB_HOST_RESET_CONTROL__PHY_RESET_MODE_SHIFT 0
#define USB_HOST_RESET_CONTROL__PHY_RESET_MODE_WIDTH 2
#define USB_HOST_RESET_CONTROL__PHY_RESET_MODE_RESET_VAL 0
#define USB_HOST_RESET_CONTROL__PHY_RESET_MODE_RMASK 0x3
#define USB_HOST_RESET_CONTROL__PHY_RESET_MODE_MASK  0x3
#define USB_HOST_RESET_CONTROL__PHY_RESET_MODE_FIELD 0,1
#define USB_HOST_RESET_CONTROL__PHY_RESET_MODE_VAL_AUTO 0x0
#define USB_HOST_RESET_CONTROL__PHY_RESET_MODE_VAL_RESET_ASSERT 0x1
#define USB_HOST_RESET_CONTROL__PHY_RESET_MODE_VAL_RESET_DEASSERT 0x3

#define USB_HOST_RESET_CONTROL__MAC_RESET_MODE_SHIFT 2
#define USB_HOST_RESET_CONTROL__MAC_RESET_MODE_WIDTH 2
#define USB_HOST_RESET_CONTROL__MAC_RESET_MODE_RESET_VAL 0
#define USB_HOST_RESET_CONTROL__MAC_RESET_MODE_RMASK 0x3
#define USB_HOST_RESET_CONTROL__MAC_RESET_MODE_MASK  0xc
#define USB_HOST_RESET_CONTROL__MAC_RESET_MODE_FIELD 2,3
#define USB_HOST_RESET_CONTROL__MAC_RESET_MODE_VAL_AUTO 0x0
#define USB_HOST_RESET_CONTROL__MAC_RESET_MODE_VAL_RESET_ASSERT 0x1
#define USB_HOST_RESET_CONTROL__MAC_RESET_MODE_VAL_RESET_DEASSERT 0x3

#define USB_HOST_RESET_CONTROL__MAC_AUX_WELL_RESET_MODE_SHIFT 4
#define USB_HOST_RESET_CONTROL__MAC_AUX_WELL_RESET_MODE_WIDTH 2
#define USB_HOST_RESET_CONTROL__MAC_AUX_WELL_RESET_MODE_RESET_VAL 0
#define USB_HOST_RESET_CONTROL__MAC_AUX_WELL_RESET_MODE_RMASK 0x3
#define USB_HOST_RESET_CONTROL__MAC_AUX_WELL_RESET_MODE_MASK  0x30
#define USB_HOST_RESET_CONTROL__MAC_AUX_WELL_RESET_MODE_FIELD 4,5
#define USB_HOST_RESET_CONTROL__MAC_AUX_WELL_RESET_MODE_VAL_AUTO 0x0
#define USB_HOST_RESET_CONTROL__MAC_AUX_WELL_RESET_MODE_VAL_RESET_ASSERT 0x1
#define USB_HOST_RESET_CONTROL__MAC_AUX_WELL_RESET_MODE_VAL_RESET_DEASSERT 0x3


/* Scratchpad. */
#define USB_HOST_SCRATCHPAD 0x0020

#define USB_HOST_SCRATCHPAD__SCRATCHPAD_SHIFT 0
#define USB_HOST_SCRATCHPAD__SCRATCHPAD_WIDTH 64
#define USB_HOST_SCRATCHPAD__SCRATCHPAD_RESET_VAL 0
#define USB_HOST_SCRATCHPAD__SCRATCHPAD_RMASK _64bit(0xffffffffffffffff)
#define USB_HOST_SCRATCHPAD__SCRATCHPAD_MASK  _64bit(0xffffffffffffffff)
#define USB_HOST_SCRATCHPAD__SCRATCHPAD_FIELD 0,63


/*
 * Semaphore0.
 * Semaphore
 */
#define USB_HOST_SEMAPHORE0 0x0028

#define USB_HOST_SEMAPHORE0__VAL_SHIFT 0
#define USB_HOST_SEMAPHORE0__VAL_WIDTH 1
#define USB_HOST_SEMAPHORE0__VAL_RESET_VAL 0
#define USB_HOST_SEMAPHORE0__VAL_RMASK 0x1
#define USB_HOST_SEMAPHORE0__VAL_MASK  0x1
#define USB_HOST_SEMAPHORE0__VAL_FIELD 0,0


/*
 * Semaphore1.
 * Semaphore
 */
#define USB_HOST_SEMAPHORE1 0x0030

#define USB_HOST_SEMAPHORE1__VAL_SHIFT 0
#define USB_HOST_SEMAPHORE1__VAL_WIDTH 1
#define USB_HOST_SEMAPHORE1__VAL_RESET_VAL 0
#define USB_HOST_SEMAPHORE1__VAL_RMASK 0x1
#define USB_HOST_SEMAPHORE1__VAL_MASK  0x1
#define USB_HOST_SEMAPHORE1__VAL_FIELD 0,0


/*
 * USBCMD_REG.
 * USB Command
 */
#define USB_HOST_USBCMD_REG 0x10010

#define USB_HOST_USBCMD_REG__USBCMD_REG_SHIFT 0
#define USB_HOST_USBCMD_REG__USBCMD_REG_WIDTH 32
#define USB_HOST_USBCMD_REG__USBCMD_REG_RESET_VAL 0
#define USB_HOST_USBCMD_REG__USBCMD_REG_RMASK 0xffffffff
#define USB_HOST_USBCMD_REG__USBCMD_REG_MASK  0xffffffff
#define USB_HOST_USBCMD_REG__USBCMD_REG_FIELD 0,31


/*
 * USBINTR_REG.
 * USB Interrupt Enable
 */
#define USB_HOST_USBINTR_REG 0x10018

#define USB_HOST_USBINTR_REG__USBINTR_REG_SHIFT 0
#define USB_HOST_USBINTR_REG__USBINTR_REG_WIDTH 32
#define USB_HOST_USBINTR_REG__USBINTR_REG_RESET_VAL 0
#define USB_HOST_USBINTR_REG__USBINTR_REG_RMASK 0xffffffff
#define USB_HOST_USBINTR_REG__USBINTR_REG_MASK  0xffffffff
#define USB_HOST_USBINTR_REG__USBINTR_REG_FIELD 0,31


/*
 * USBSTS_REG.
 * USB Status
 */
#define USB_HOST_USBSTS_REG 0x10014

#define USB_HOST_USBSTS_REG__USBSTS_REG_SHIFT 0
#define USB_HOST_USBSTS_REG__USBSTS_REG_WIDTH 32
#define USB_HOST_USBSTS_REG__USBSTS_REG_RESET_VAL 0
#define USB_HOST_USBSTS_REG__USBSTS_REG_RMASK 0xffffffff
#define USB_HOST_USBSTS_REG__USBSTS_REG_MASK  0xffffffff
#define USB_HOST_USBSTS_REG__USBSTS_REG_FIELD 0,31



#endif /* !defined(__ARCH_USB_HOST_DEF_H__) */

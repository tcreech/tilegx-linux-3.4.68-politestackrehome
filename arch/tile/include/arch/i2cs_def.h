/*
 * Copyright 2013 Tilera Corporation. All Rights Reserved.
 *
 *   This program is free software; you can redistribute it and/or
 *   modify it under the terms of the GNU General Public License
 *   as published by the Free Software Foundation, version 2.
 *
 *   This program is distributed in the hope that it will be useful, but
 *   WITHOUT ANY WARRANTY; without even the implied warranty of
 *   MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, GOOD TITLE or
 *   NON INFRINGEMENT.  See the GNU General Public License for
 *   more details.
 */

#ifndef __ARCH_I2CS_DEF_H__
#define __ARCH_I2CS_DEF_H__

#ifdef __ASSEMBLER__
#define _64bit(x) x
#else /* __ASSEMBLER__ */
#ifdef __tile__
#define _64bit(x) x ## UL
#else /* __tile__ */
#define _64bit(x) x ## ULL
#endif /* __tile__ */
#endif /* __ASSEMBLER */





/* Ack Control. */
#define I2CS_ACK_CTL 0x01a8

#define I2CS_ACK_CTL__WRITE_ACK_SHIFT 0
#define I2CS_ACK_CTL__WRITE_ACK_WIDTH 1
#define I2CS_ACK_CTL__WRITE_ACK_RESET_VAL 0
#define I2CS_ACK_CTL__WRITE_ACK_RMASK 0x1
#define I2CS_ACK_CTL__WRITE_ACK_MASK  0x1
#define I2CS_ACK_CTL__WRITE_ACK_FIELD 0,0

#define I2CS_ACK_CTL__READ_ACK_SHIFT 1
#define I2CS_ACK_CTL__READ_ACK_WIDTH 1
#define I2CS_ACK_CTL__READ_ACK_RESET_VAL 0
#define I2CS_ACK_CTL__READ_ACK_RMASK 0x1
#define I2CS_ACK_CTL__READ_ACK_MASK  0x2
#define I2CS_ACK_CTL__READ_ACK_FIELD 1,1


/* Address Phase Control. */
#define I2CS_ADDR_PHASE 0x01a0

#define I2CS_ADDR_PHASE__DISABLE_SHIFT 0
#define I2CS_ADDR_PHASE__DISABLE_WIDTH 1
#define I2CS_ADDR_PHASE__DISABLE_RESET_VAL 0
#define I2CS_ADDR_PHASE__DISABLE_RMASK 0x1
#define I2CS_ADDR_PHASE__DISABLE_MASK  0x1
#define I2CS_ADDR_PHASE__DISABLE_FIELD 0,0


/* Baseline Control. */
#define I2CS_BASELINE_CTL 0x0100

#define I2CS_BASELINE_CTL__ENABLE_SHIFT 0
#define I2CS_BASELINE_CTL__ENABLE_WIDTH 1
#define I2CS_BASELINE_CTL__ENABLE_RESET_VAL 1
#define I2CS_BASELINE_CTL__ENABLE_RMASK 0x1
#define I2CS_BASELINE_CTL__ENABLE_MASK  0x1
#define I2CS_BASELINE_CTL__ENABLE_FIELD 0,0


/* Boot Revision ID. */
#define I2CS_BOOT_REVISION_ID 0x0120

#define I2CS_BOOT_REVISION_ID__REV_ID_SHIFT 0
#define I2CS_BOOT_REVISION_ID__REV_ID_WIDTH 8
#define I2CS_BOOT_REVISION_ID__REV_ID_RESET_VAL 0
#define I2CS_BOOT_REVISION_ID__REV_ID_RMASK 0xff
#define I2CS_BOOT_REVISION_ID__REV_ID_MASK  0xff
#define I2CS_BOOT_REVISION_ID__REV_ID_FIELD 0,7


/* Clock Count. */
#define I2CS_CLOCK_COUNT 0x0038

#define I2CS_CLOCK_COUNT__RUN_SHIFT 0
#define I2CS_CLOCK_COUNT__RUN_WIDTH 1
#define I2CS_CLOCK_COUNT__RUN_RESET_VAL 0
#define I2CS_CLOCK_COUNT__RUN_RMASK 0x1
#define I2CS_CLOCK_COUNT__RUN_MASK  0x1
#define I2CS_CLOCK_COUNT__RUN_FIELD 0,0

#define I2CS_CLOCK_COUNT__COUNT_SHIFT 1
#define I2CS_CLOCK_COUNT__COUNT_WIDTH 15
#define I2CS_CLOCK_COUNT__COUNT_RESET_VAL 0
#define I2CS_CLOCK_COUNT__COUNT_RMASK 0x7fff
#define I2CS_CLOCK_COUNT__COUNT_MASK  0xfffe
#define I2CS_CLOCK_COUNT__COUNT_FIELD 1,15


/*
 * Device Control.
 * This register provides general device control.
 */
#define I2CS_DEV_CTL 0x0008

#define I2CS_DEV_CTL__RDN_ROUTE_ORDER_SHIFT 2
#define I2CS_DEV_CTL__RDN_ROUTE_ORDER_WIDTH 1
#define I2CS_DEV_CTL__RDN_ROUTE_ORDER_RESET_VAL 1
#define I2CS_DEV_CTL__RDN_ROUTE_ORDER_RMASK 0x1
#define I2CS_DEV_CTL__RDN_ROUTE_ORDER_MASK  0x4
#define I2CS_DEV_CTL__RDN_ROUTE_ORDER_FIELD 2,2

#define I2CS_DEV_CTL__SDN_ROUTE_ORDER_SHIFT 3
#define I2CS_DEV_CTL__SDN_ROUTE_ORDER_WIDTH 1
#define I2CS_DEV_CTL__SDN_ROUTE_ORDER_RESET_VAL 0
#define I2CS_DEV_CTL__SDN_ROUTE_ORDER_RMASK 0x1
#define I2CS_DEV_CTL__SDN_ROUTE_ORDER_MASK  0x8
#define I2CS_DEV_CTL__SDN_ROUTE_ORDER_FIELD 3,3


/*
 * Device Info.
 * This register provides general information about the device attached to
 * this port and channel.
 */
#define I2CS_DEV_INFO 0x0000

#define I2CS_DEV_INFO__TYPE_SHIFT 0
#define I2CS_DEV_INFO__TYPE_WIDTH 12
#define I2CS_DEV_INFO__TYPE_RESET_VAL 38
#define I2CS_DEV_INFO__TYPE_RMASK 0xfff
#define I2CS_DEV_INFO__TYPE_MASK  0xfff
#define I2CS_DEV_INFO__TYPE_FIELD 0,11
#define I2CS_DEV_INFO__TYPE_VAL_PCIE 0x1
#define I2CS_DEV_INFO__TYPE_VAL_GBE 0x10
#define I2CS_DEV_INFO__TYPE_VAL_XGBE 0x11
#define I2CS_DEV_INFO__TYPE_VAL_MPIPE 0x13
#define I2CS_DEV_INFO__TYPE_VAL_TRIO 0x14
#define I2CS_DEV_INFO__TYPE_VAL_CRYPTO 0x16
#define I2CS_DEV_INFO__TYPE_VAL_COMPRESSION 0x18
#define I2CS_DEV_INFO__TYPE_VAL_GPIO 0x20
#define I2CS_DEV_INFO__TYPE_VAL_RSHIM 0x21
#define I2CS_DEV_INFO__TYPE_VAL_SROM 0x22
#define I2CS_DEV_INFO__TYPE_VAL_I2CM 0x25
#define I2CS_DEV_INFO__TYPE_VAL_I2CS 0x26
#define I2CS_DEV_INFO__TYPE_VAL_UART 0x28
#define I2CS_DEV_INFO__TYPE_VAL_USBH 0x29
#define I2CS_DEV_INFO__TYPE_VAL_USBS 0x2a
#define I2CS_DEV_INFO__TYPE_VAL_USBHS 0x2b
#define I2CS_DEV_INFO__TYPE_VAL_DDR2 0x40
#define I2CS_DEV_INFO__TYPE_VAL_DDR3 0x42
#define I2CS_DEV_INFO__TYPE_VAL_DIAG_SNP 0x80
#define I2CS_DEV_INFO__TYPE_VAL_IPIC 0x81

#define I2CS_DEV_INFO__DEVICE_REV_SHIFT 16
#define I2CS_DEV_INFO__DEVICE_REV_WIDTH 8
#define I2CS_DEV_INFO__DEVICE_REV_RMASK 0xff
#define I2CS_DEV_INFO__DEVICE_REV_MASK  0xff0000
#define I2CS_DEV_INFO__DEVICE_REV_FIELD 16,23

#define I2CS_DEV_INFO__REGISTER_REV_SHIFT 24
#define I2CS_DEV_INFO__REGISTER_REV_WIDTH 4
#define I2CS_DEV_INFO__REGISTER_REV_RESET_VAL 0
#define I2CS_DEV_INFO__REGISTER_REV_RMASK 0xf
#define I2CS_DEV_INFO__REGISTER_REV_MASK  0xf000000
#define I2CS_DEV_INFO__REGISTER_REV_FIELD 24,27

#define I2CS_DEV_INFO__INSTANCE_SHIFT 32
#define I2CS_DEV_INFO__INSTANCE_WIDTH 4
#define I2CS_DEV_INFO__INSTANCE_RMASK 0xf
#define I2CS_DEV_INFO__INSTANCE_MASK  _64bit(0xf00000000)
#define I2CS_DEV_INFO__INSTANCE_FIELD 32,35


/* Electrical Control. */
#define I2CS_ELECTRICAL_CONTROL 0x0118

#define I2CS_ELECTRICAL_CONTROL__ELEC_STRENGTH_SHIFT 0
#define I2CS_ELECTRICAL_CONTROL__ELEC_STRENGTH_WIDTH 3
#define I2CS_ELECTRICAL_CONTROL__ELEC_STRENGTH_RESET_VAL 1
#define I2CS_ELECTRICAL_CONTROL__ELEC_STRENGTH_RMASK 0x7
#define I2CS_ELECTRICAL_CONTROL__ELEC_STRENGTH_MASK  0x7
#define I2CS_ELECTRICAL_CONTROL__ELEC_STRENGTH_FIELD 0,2

#define I2CS_ELECTRICAL_CONTROL__ELEC_SUSTAIN_SHIFT 3
#define I2CS_ELECTRICAL_CONTROL__ELEC_SUSTAIN_WIDTH 1
#define I2CS_ELECTRICAL_CONTROL__ELEC_SUSTAIN_RESET_VAL 0
#define I2CS_ELECTRICAL_CONTROL__ELEC_SUSTAIN_RMASK 0x1
#define I2CS_ELECTRICAL_CONTROL__ELEC_SUSTAIN_MASK  0x8
#define I2CS_ELECTRICAL_CONTROL__ELEC_SUSTAIN_FIELD 3,3

#define I2CS_ELECTRICAL_CONTROL__ELEC_SLEW_SHIFT 4
#define I2CS_ELECTRICAL_CONTROL__ELEC_SLEW_WIDTH 2
#define I2CS_ELECTRICAL_CONTROL__ELEC_SLEW_RESET_VAL 3
#define I2CS_ELECTRICAL_CONTROL__ELEC_SLEW_RMASK 0x3
#define I2CS_ELECTRICAL_CONTROL__ELEC_SLEW_MASK  0x30
#define I2CS_ELECTRICAL_CONTROL__ELEC_SLEW_FIELD 4,5

#define I2CS_ELECTRICAL_CONTROL__ELEC_PULLUP_SHIFT 6
#define I2CS_ELECTRICAL_CONTROL__ELEC_PULLUP_WIDTH 1
#define I2CS_ELECTRICAL_CONTROL__ELEC_PULLUP_RESET_VAL 0
#define I2CS_ELECTRICAL_CONTROL__ELEC_PULLUP_RMASK 0x1
#define I2CS_ELECTRICAL_CONTROL__ELEC_PULLUP_MASK  0x40
#define I2CS_ELECTRICAL_CONTROL__ELEC_PULLUP_FIELD 6,6

#define I2CS_ELECTRICAL_CONTROL__ELEC_PULLDOWN_SHIFT 7
#define I2CS_ELECTRICAL_CONTROL__ELEC_PULLDOWN_WIDTH 1
#define I2CS_ELECTRICAL_CONTROL__ELEC_PULLDOWN_RESET_VAL 0
#define I2CS_ELECTRICAL_CONTROL__ELEC_PULLDOWN_RMASK 0x1
#define I2CS_ELECTRICAL_CONTROL__ELEC_PULLDOWN_MASK  0x80
#define I2CS_ELECTRICAL_CONTROL__ELEC_PULLDOWN_FIELD 7,7

#define I2CS_ELECTRICAL_CONTROL__ELEC_SCHM_SHIFT 8
#define I2CS_ELECTRICAL_CONTROL__ELEC_SCHM_WIDTH 2
#define I2CS_ELECTRICAL_CONTROL__ELEC_SCHM_RESET_VAL 3
#define I2CS_ELECTRICAL_CONTROL__ELEC_SCHM_RMASK 0x3
#define I2CS_ELECTRICAL_CONTROL__ELEC_SCHM_MASK  0x300
#define I2CS_ELECTRICAL_CONTROL__ELEC_SCHM_FIELD 8,9


/* FIFO Count. */
#define I2CS_FIFO_COUNT 0x0110

#define I2CS_FIFO_COUNT__RFIFO_COUNT_SHIFT 0
#define I2CS_FIFO_COUNT__RFIFO_COUNT_WIDTH 4
#define I2CS_FIFO_COUNT__RFIFO_COUNT_RESET_VAL 0
#define I2CS_FIFO_COUNT__RFIFO_COUNT_RMASK 0xf
#define I2CS_FIFO_COUNT__RFIFO_COUNT_MASK  0xf
#define I2CS_FIFO_COUNT__RFIFO_COUNT_FIELD 0,3

#define I2CS_FIFO_COUNT__TFIFO_COUNT_SHIFT 16
#define I2CS_FIFO_COUNT__TFIFO_COUNT_WIDTH 4
#define I2CS_FIFO_COUNT__TFIFO_COUNT_RESET_VAL 0
#define I2CS_FIFO_COUNT__TFIFO_COUNT_RMASK 0xf
#define I2CS_FIFO_COUNT__TFIFO_COUNT_MASK  0xf0000
#define I2CS_FIFO_COUNT__TFIFO_COUNT_FIELD 16,19

#define I2CS_FIFO_COUNT__BFIFO_COUNT_SHIFT 24
#define I2CS_FIFO_COUNT__BFIFO_COUNT_WIDTH 2
#define I2CS_FIFO_COUNT__BFIFO_COUNT_RESET_VAL 0
#define I2CS_FIFO_COUNT__BFIFO_COUNT_RMASK 0x3
#define I2CS_FIFO_COUNT__BFIFO_COUNT_MASK  0x3000000
#define I2CS_FIFO_COUNT__BFIFO_COUNT_FIELD 24,25


/* FLAG. */
#define I2CS_FLAG 0x0108

#define I2CS_FLAG__BUSY_SHIFT 0
#define I2CS_FLAG__BUSY_WIDTH 1
#define I2CS_FLAG__BUSY_RESET_VAL 0
#define I2CS_FLAG__BUSY_RMASK 0x1
#define I2CS_FLAG__BUSY_MASK  0x1
#define I2CS_FLAG__BUSY_FIELD 0,0

#define I2CS_FLAG__RFIFO_EMPTY_SHIFT 1
#define I2CS_FLAG__RFIFO_EMPTY_WIDTH 1
#define I2CS_FLAG__RFIFO_EMPTY_RESET_VAL 1
#define I2CS_FLAG__RFIFO_EMPTY_RMASK 0x1
#define I2CS_FLAG__RFIFO_EMPTY_MASK  0x2
#define I2CS_FLAG__RFIFO_EMPTY_FIELD 1,1

#define I2CS_FLAG__TFIFO_EMPTY_SHIFT 2
#define I2CS_FLAG__TFIFO_EMPTY_WIDTH 1
#define I2CS_FLAG__TFIFO_EMPTY_RESET_VAL 1
#define I2CS_FLAG__TFIFO_EMPTY_RMASK 0x1
#define I2CS_FLAG__TFIFO_EMPTY_MASK  0x4
#define I2CS_FLAG__TFIFO_EMPTY_FIELD 2,2

#define I2CS_FLAG__BFIFO_EMPTY_SHIFT 3
#define I2CS_FLAG__BFIFO_EMPTY_WIDTH 1
#define I2CS_FLAG__BFIFO_EMPTY_RESET_VAL 1
#define I2CS_FLAG__BFIFO_EMPTY_RMASK 0x1
#define I2CS_FLAG__BFIFO_EMPTY_MASK  0x8
#define I2CS_FLAG__BFIFO_EMPTY_FIELD 3,3

#define I2CS_FLAG__RFIFO_FULL_SHIFT 4
#define I2CS_FLAG__RFIFO_FULL_WIDTH 1
#define I2CS_FLAG__RFIFO_FULL_RESET_VAL 0
#define I2CS_FLAG__RFIFO_FULL_RMASK 0x1
#define I2CS_FLAG__RFIFO_FULL_MASK  0x10
#define I2CS_FLAG__RFIFO_FULL_FIELD 4,4

#define I2CS_FLAG__TFIFO_FULL_SHIFT 5
#define I2CS_FLAG__TFIFO_FULL_WIDTH 1
#define I2CS_FLAG__TFIFO_FULL_RESET_VAL 0
#define I2CS_FLAG__TFIFO_FULL_RMASK 0x1
#define I2CS_FLAG__TFIFO_FULL_MASK  0x20
#define I2CS_FLAG__TFIFO_FULL_FIELD 5,5

#define I2CS_FLAG__BFIFO_FULL_SHIFT 6
#define I2CS_FLAG__BFIFO_FULL_WIDTH 1
#define I2CS_FLAG__BFIFO_FULL_RESET_VAL 0
#define I2CS_FLAG__BFIFO_FULL_RMASK 0x1
#define I2CS_FLAG__BFIFO_FULL_MASK  0x40
#define I2CS_FLAG__BFIFO_FULL_FIELD 6,6


/* Glitch Mask. */
#define I2CS_GLITCH_MASK 0x0170

#define I2CS_GLITCH_MASK__CYCLE_SHIFT 0
#define I2CS_GLITCH_MASK__CYCLE_WIDTH 6
#define I2CS_GLITCH_MASK__CYCLE_RESET_VAL 0
#define I2CS_GLITCH_MASK__CYCLE_RMASK 0x3f
#define I2CS_GLITCH_MASK__CYCLE_MASK  0x3f
#define I2CS_GLITCH_MASK__CYCLE_FIELD 0,5


/*
 * Interrupt Vector Mask.
 * Each bit in this register corresponds to a specific interrupt. When set,
 * the associated interrupt will not be dispatched.
 */
#define I2CS_INT_VEC_MASK 0x0208

#define I2CS_INT_VEC_MASK__RFIFO_WRITE_SHIFT 0
#define I2CS_INT_VEC_MASK__RFIFO_WRITE_WIDTH 1
#define I2CS_INT_VEC_MASK__RFIFO_WRITE_RESET_VAL 1
#define I2CS_INT_VEC_MASK__RFIFO_WRITE_RMASK 0x1
#define I2CS_INT_VEC_MASK__RFIFO_WRITE_MASK  0x1
#define I2CS_INT_VEC_MASK__RFIFO_WRITE_FIELD 0,0

#define I2CS_INT_VEC_MASK__RDAT_ERR_SHIFT 1
#define I2CS_INT_VEC_MASK__RDAT_ERR_WIDTH 1
#define I2CS_INT_VEC_MASK__RDAT_ERR_RESET_VAL 1
#define I2CS_INT_VEC_MASK__RDAT_ERR_RMASK 0x1
#define I2CS_INT_VEC_MASK__RDAT_ERR_MASK  0x2
#define I2CS_INT_VEC_MASK__RDAT_ERR_FIELD 1,1

#define I2CS_INT_VEC_MASK__RFIFO_ERR_SHIFT 2
#define I2CS_INT_VEC_MASK__RFIFO_ERR_WIDTH 1
#define I2CS_INT_VEC_MASK__RFIFO_ERR_RESET_VAL 1
#define I2CS_INT_VEC_MASK__RFIFO_ERR_RMASK 0x1
#define I2CS_INT_VEC_MASK__RFIFO_ERR_MASK  0x4
#define I2CS_INT_VEC_MASK__RFIFO_ERR_FIELD 2,2

#define I2CS_INT_VEC_MASK__TFIFO_READ_SHIFT 3
#define I2CS_INT_VEC_MASK__TFIFO_READ_WIDTH 1
#define I2CS_INT_VEC_MASK__TFIFO_READ_RESET_VAL 1
#define I2CS_INT_VEC_MASK__TFIFO_READ_RMASK 0x1
#define I2CS_INT_VEC_MASK__TFIFO_READ_MASK  0x8
#define I2CS_INT_VEC_MASK__TFIFO_READ_FIELD 3,3

#define I2CS_INT_VEC_MASK__TFIFO_RERR_SHIFT 4
#define I2CS_INT_VEC_MASK__TFIFO_RERR_WIDTH 1
#define I2CS_INT_VEC_MASK__TFIFO_RERR_RESET_VAL 1
#define I2CS_INT_VEC_MASK__TFIFO_RERR_RMASK 0x1
#define I2CS_INT_VEC_MASK__TFIFO_RERR_MASK  0x10
#define I2CS_INT_VEC_MASK__TFIFO_RERR_FIELD 4,4

#define I2CS_INT_VEC_MASK__TFIFO_WERR_SHIFT 5
#define I2CS_INT_VEC_MASK__TFIFO_WERR_WIDTH 1
#define I2CS_INT_VEC_MASK__TFIFO_WERR_RESET_VAL 1
#define I2CS_INT_VEC_MASK__TFIFO_WERR_RMASK 0x1
#define I2CS_INT_VEC_MASK__TFIFO_WERR_MASK  0x20
#define I2CS_INT_VEC_MASK__TFIFO_WERR_FIELD 5,5

#define I2CS_INT_VEC_MASK__WACK_ERR_SHIFT 6
#define I2CS_INT_VEC_MASK__WACK_ERR_WIDTH 1
#define I2CS_INT_VEC_MASK__WACK_ERR_RESET_VAL 1
#define I2CS_INT_VEC_MASK__WACK_ERR_RMASK 0x1
#define I2CS_INT_VEC_MASK__WACK_ERR_MASK  0x40
#define I2CS_INT_VEC_MASK__WACK_ERR_FIELD 6,6

#define I2CS_INT_VEC_MASK__TIMEOUT_SHIFT 7
#define I2CS_INT_VEC_MASK__TIMEOUT_WIDTH 1
#define I2CS_INT_VEC_MASK__TIMEOUT_RESET_VAL 1
#define I2CS_INT_VEC_MASK__TIMEOUT_RMASK 0x1
#define I2CS_INT_VEC_MASK__TIMEOUT_MASK  0x80
#define I2CS_INT_VEC_MASK__TIMEOUT_FIELD 7,7


/*
 * Interrupt Vector, write-one-to-clear.
 * Each bit in this register corresponds to a specific interrupt. Hardware
 * sets the bit when the associated condition has occurred. Writing a 1
 * clears the status bit.
 */
#define I2CS_INT_VEC_W1TC 0x0200

#define I2CS_INT_VEC_W1TC__RFIFO_WRITE_SHIFT 0
#define I2CS_INT_VEC_W1TC__RFIFO_WRITE_WIDTH 1
#define I2CS_INT_VEC_W1TC__RFIFO_WRITE_RESET_VAL 0
#define I2CS_INT_VEC_W1TC__RFIFO_WRITE_RMASK 0x1
#define I2CS_INT_VEC_W1TC__RFIFO_WRITE_MASK  0x1
#define I2CS_INT_VEC_W1TC__RFIFO_WRITE_FIELD 0,0

#define I2CS_INT_VEC_W1TC__RDAT_ERR_SHIFT 1
#define I2CS_INT_VEC_W1TC__RDAT_ERR_WIDTH 1
#define I2CS_INT_VEC_W1TC__RDAT_ERR_RESET_VAL 0
#define I2CS_INT_VEC_W1TC__RDAT_ERR_RMASK 0x1
#define I2CS_INT_VEC_W1TC__RDAT_ERR_MASK  0x2
#define I2CS_INT_VEC_W1TC__RDAT_ERR_FIELD 1,1

#define I2CS_INT_VEC_W1TC__RFIFO_ERR_SHIFT 2
#define I2CS_INT_VEC_W1TC__RFIFO_ERR_WIDTH 1
#define I2CS_INT_VEC_W1TC__RFIFO_ERR_RESET_VAL 0
#define I2CS_INT_VEC_W1TC__RFIFO_ERR_RMASK 0x1
#define I2CS_INT_VEC_W1TC__RFIFO_ERR_MASK  0x4
#define I2CS_INT_VEC_W1TC__RFIFO_ERR_FIELD 2,2

#define I2CS_INT_VEC_W1TC__TFIFO_READ_SHIFT 3
#define I2CS_INT_VEC_W1TC__TFIFO_READ_WIDTH 1
#define I2CS_INT_VEC_W1TC__TFIFO_READ_RESET_VAL 0
#define I2CS_INT_VEC_W1TC__TFIFO_READ_RMASK 0x1
#define I2CS_INT_VEC_W1TC__TFIFO_READ_MASK  0x8
#define I2CS_INT_VEC_W1TC__TFIFO_READ_FIELD 3,3

#define I2CS_INT_VEC_W1TC__TFIFO_RERR_SHIFT 4
#define I2CS_INT_VEC_W1TC__TFIFO_RERR_WIDTH 1
#define I2CS_INT_VEC_W1TC__TFIFO_RERR_RESET_VAL 0
#define I2CS_INT_VEC_W1TC__TFIFO_RERR_RMASK 0x1
#define I2CS_INT_VEC_W1TC__TFIFO_RERR_MASK  0x10
#define I2CS_INT_VEC_W1TC__TFIFO_RERR_FIELD 4,4

#define I2CS_INT_VEC_W1TC__TFIFO_WERR_SHIFT 5
#define I2CS_INT_VEC_W1TC__TFIFO_WERR_WIDTH 1
#define I2CS_INT_VEC_W1TC__TFIFO_WERR_RESET_VAL 0
#define I2CS_INT_VEC_W1TC__TFIFO_WERR_RMASK 0x1
#define I2CS_INT_VEC_W1TC__TFIFO_WERR_MASK  0x20
#define I2CS_INT_VEC_W1TC__TFIFO_WERR_FIELD 5,5

#define I2CS_INT_VEC_W1TC__WACK_ERR_SHIFT 6
#define I2CS_INT_VEC_W1TC__WACK_ERR_WIDTH 1
#define I2CS_INT_VEC_W1TC__WACK_ERR_RESET_VAL 0
#define I2CS_INT_VEC_W1TC__WACK_ERR_RMASK 0x1
#define I2CS_INT_VEC_W1TC__WACK_ERR_MASK  0x40
#define I2CS_INT_VEC_W1TC__WACK_ERR_FIELD 6,6

#define I2CS_INT_VEC_W1TC__TIMEOUT_SHIFT 7
#define I2CS_INT_VEC_W1TC__TIMEOUT_WIDTH 1
#define I2CS_INT_VEC_W1TC__TIMEOUT_RESET_VAL 0
#define I2CS_INT_VEC_W1TC__TIMEOUT_RMASK 0x1
#define I2CS_INT_VEC_W1TC__TIMEOUT_MASK  0x80
#define I2CS_INT_VEC_W1TC__TIMEOUT_FIELD 7,7


/*
 * Memory Info.
 * This register provides information about memory setup required for this
 * device.
 */
#define I2CS_MEM_INFO 0x0018

#define I2CS_MEM_INFO__REQ_PORTS_SHIFT 0
#define I2CS_MEM_INFO__REQ_PORTS_WIDTH 32
#define I2CS_MEM_INFO__REQ_PORTS_RESET_VAL 32768
#define I2CS_MEM_INFO__REQ_PORTS_RMASK 0xffffffff
#define I2CS_MEM_INFO__REQ_PORTS_MASK  0xffffffff
#define I2CS_MEM_INFO__REQ_PORTS_FIELD 0,31

#define I2CS_MEM_INFO__NUM_HFH_TBL_SHIFT 32
#define I2CS_MEM_INFO__NUM_HFH_TBL_WIDTH 4
#define I2CS_MEM_INFO__NUM_HFH_TBL_RESET_VAL 0
#define I2CS_MEM_INFO__NUM_HFH_TBL_RMASK 0xf
#define I2CS_MEM_INFO__NUM_HFH_TBL_MASK  _64bit(0xf00000000)
#define I2CS_MEM_INFO__NUM_HFH_TBL_FIELD 32,35

#define I2CS_MEM_INFO__NUM_ASIDS_SHIFT 40
#define I2CS_MEM_INFO__NUM_ASIDS_WIDTH 8
#define I2CS_MEM_INFO__NUM_ASIDS_RESET_VAL 0
#define I2CS_MEM_INFO__NUM_ASIDS_RMASK 0xff
#define I2CS_MEM_INFO__NUM_ASIDS_MASK  _64bit(0xff0000000000)
#define I2CS_MEM_INFO__NUM_ASIDS_FIELD 40,47

#define I2CS_MEM_INFO__NUM_TLB_ENT_SHIFT 48
#define I2CS_MEM_INFO__NUM_TLB_ENT_WIDTH 8
#define I2CS_MEM_INFO__NUM_TLB_ENT_RESET_VAL 0
#define I2CS_MEM_INFO__NUM_TLB_ENT_RMASK 0xff
#define I2CS_MEM_INFO__NUM_TLB_ENT_MASK  _64bit(0xff000000000000)
#define I2CS_MEM_INFO__NUM_TLB_ENT_FIELD 48,55


/*
 * MMIO Info.
 * This register provides information about how the physical address is
 * interpreted by the IO device.  The PA is divided into
 * {CHANNEL,SVC_DOM,IGNORED,REGION,OFFSET}.  The values in this register
 * define the size of each of these fields.
 */
#define I2CS_MMIO_INFO 0x0010

#define I2CS_MMIO_INFO__CH_WIDTH_SHIFT 0
#define I2CS_MMIO_INFO__CH_WIDTH_WIDTH 4
#define I2CS_MMIO_INFO__CH_WIDTH_RESET_VAL 4
#define I2CS_MMIO_INFO__CH_WIDTH_RMASK 0xf
#define I2CS_MMIO_INFO__CH_WIDTH_MASK  0xf
#define I2CS_MMIO_INFO__CH_WIDTH_FIELD 0,3

#define I2CS_MMIO_INFO__NUM_CH_SHIFT 4
#define I2CS_MMIO_INFO__NUM_CH_WIDTH 15
#define I2CS_MMIO_INFO__NUM_CH_RESET_VAL 8
#define I2CS_MMIO_INFO__NUM_CH_RMASK 0x7fff
#define I2CS_MMIO_INFO__NUM_CH_MASK  0x7fff0
#define I2CS_MMIO_INFO__NUM_CH_FIELD 4,18

#define I2CS_MMIO_INFO__SVC_DOM_WIDTH_SHIFT 19
#define I2CS_MMIO_INFO__SVC_DOM_WIDTH_WIDTH 3
#define I2CS_MMIO_INFO__SVC_DOM_WIDTH_RESET_VAL 0
#define I2CS_MMIO_INFO__SVC_DOM_WIDTH_RMASK 0x7
#define I2CS_MMIO_INFO__SVC_DOM_WIDTH_MASK  0x380000
#define I2CS_MMIO_INFO__SVC_DOM_WIDTH_FIELD 19,21

#define I2CS_MMIO_INFO__NUM_SVC_DOM_SHIFT 22
#define I2CS_MMIO_INFO__NUM_SVC_DOM_WIDTH 7
#define I2CS_MMIO_INFO__NUM_SVC_DOM_RESET_VAL 0
#define I2CS_MMIO_INFO__NUM_SVC_DOM_RMASK 0x7f
#define I2CS_MMIO_INFO__NUM_SVC_DOM_MASK  0x1fc00000
#define I2CS_MMIO_INFO__NUM_SVC_DOM_FIELD 22,28

#define I2CS_MMIO_INFO__OFFSET_WIDTH_SHIFT 29
#define I2CS_MMIO_INFO__OFFSET_WIDTH_WIDTH 6
#define I2CS_MMIO_INFO__OFFSET_WIDTH_RESET_VAL 16
#define I2CS_MMIO_INFO__OFFSET_WIDTH_RMASK 0x3f
#define I2CS_MMIO_INFO__OFFSET_WIDTH_MASK  _64bit(0x7e0000000)
#define I2CS_MMIO_INFO__OFFSET_WIDTH_FIELD 29,34

#define I2CS_MMIO_INFO__REGION_WIDTH_SHIFT 35
#define I2CS_MMIO_INFO__REGION_WIDTH_WIDTH 6
#define I2CS_MMIO_INFO__REGION_WIDTH_RESET_VAL 0
#define I2CS_MMIO_INFO__REGION_WIDTH_RMASK 0x3f
#define I2CS_MMIO_INFO__REGION_WIDTH_MASK  _64bit(0x1f800000000)
#define I2CS_MMIO_INFO__REGION_WIDTH_FIELD 35,40


/* I2C Prescaler. */
#define I2CS_PRESCALER 0x0168

#define I2CS_PRESCALER__PRESCALER_SHIFT 0
#define I2CS_PRESCALER__PRESCALER_WIDTH 12
#define I2CS_PRESCALER__PRESCALER_RESET_VAL 152
#define I2CS_PRESCALER__PRESCALER_RMASK 0xfff
#define I2CS_PRESCALER__PRESCALER_MASK  0xfff
#define I2CS_PRESCALER__PRESCALER_FIELD 0,11


/* RSHIM Device Word Read. */
#define I2CS_RDEV_ACCESS 0x0190

#define I2CS_RDEV_ACCESS__WORD_READ_SHIFT 0
#define I2CS_RDEV_ACCESS__WORD_READ_WIDTH 1
#define I2CS_RDEV_ACCESS__WORD_READ_RESET_VAL 1
#define I2CS_RDEV_ACCESS__WORD_READ_RMASK 0x1
#define I2CS_RDEV_ACCESS__WORD_READ_MASK  0x1
#define I2CS_RDEV_ACCESS__WORD_READ_FIELD 0,0


/* RSHIM Device Address High. */
#define I2CS_RDEV_ADDR 0x0188

#define I2CS_RDEV_ADDR__HIGH_SHIFT 0
#define I2CS_RDEV_ADDR__HIGH_WIDTH 4
#define I2CS_RDEV_ADDR__HIGH_RESET_VAL 0
#define I2CS_RDEV_ADDR__HIGH_RMASK 0xf
#define I2CS_RDEV_ADDR__HIGH_MASK  0xf
#define I2CS_RDEV_ADDR__HIGH_FIELD 0,3


/* I2C RFIFO Read Data. */
#define I2CS_READ_DATA 0x0138

#define I2CS_READ_DATA__RDAT_SHIFT 0
#define I2CS_READ_DATA__RDAT_WIDTH 64
#define I2CS_READ_DATA__RDAT_RESET_VAL 0
#define I2CS_READ_DATA__RDAT_RMASK _64bit(0xffffffffffffffff)
#define I2CS_READ_DATA__RDAT_MASK  _64bit(0xffffffffffffffff)
#define I2CS_READ_DATA__RDAT_FIELD 0,63


/* Scratchpad. */
#define I2CS_SCRATCHPAD 0x0020

#define I2CS_SCRATCHPAD__SCRATCHPAD_SHIFT 0
#define I2CS_SCRATCHPAD__SCRATCHPAD_WIDTH 64
#define I2CS_SCRATCHPAD__SCRATCHPAD_RESET_VAL 0
#define I2CS_SCRATCHPAD__SCRATCHPAD_RMASK _64bit(0xffffffffffffffff)
#define I2CS_SCRATCHPAD__SCRATCHPAD_MASK  _64bit(0xffffffffffffffff)
#define I2CS_SCRATCHPAD__SCRATCHPAD_FIELD 0,63


/*
 * Semaphore0.
 * Semaphore
 */
#define I2CS_SEMAPHORE0 0x0028

#define I2CS_SEMAPHORE0__VAL_SHIFT 0
#define I2CS_SEMAPHORE0__VAL_WIDTH 1
#define I2CS_SEMAPHORE0__VAL_RESET_VAL 0
#define I2CS_SEMAPHORE0__VAL_RMASK 0x1
#define I2CS_SEMAPHORE0__VAL_MASK  0x1
#define I2CS_SEMAPHORE0__VAL_FIELD 0,0


/*
 * Semaphore1.
 * Semaphore
 */
#define I2CS_SEMAPHORE1 0x0030

#define I2CS_SEMAPHORE1__VAL_SHIFT 0
#define I2CS_SEMAPHORE1__VAL_WIDTH 1
#define I2CS_SEMAPHORE1__VAL_RESET_VAL 0
#define I2CS_SEMAPHORE1__VAL_RMASK 0x1
#define I2CS_SEMAPHORE1__VAL_MASK  0x1
#define I2CS_SEMAPHORE1__VAL_FIELD 0,0


/*
 * I2C Slave Address.
 * I2C 7-bit Slave Address
 */
#define I2CS_SLAVE_ADDRESS 0x0158

#define I2CS_SLAVE_ADDRESS__ADDR_SHIFT 1
#define I2CS_SLAVE_ADDRESS__ADDR_WIDTH 7
#define I2CS_SLAVE_ADDRESS__ADDR_RESET_VAL 16
#define I2CS_SLAVE_ADDRESS__ADDR_RMASK 0x7f
#define I2CS_SLAVE_ADDRESS__ADDR_MASK  0xfe
#define I2CS_SLAVE_ADDRESS__ADDR_FIELD 1,7


/* I2C TFIFO Read Data. */
#define I2CS_TFIFO_READ_DATA 0x0148

#define I2CS_TFIFO_READ_DATA__RDAT_SHIFT 0
#define I2CS_TFIFO_READ_DATA__RDAT_WIDTH 64
#define I2CS_TFIFO_READ_DATA__RDAT_RESET_VAL 0
#define I2CS_TFIFO_READ_DATA__RDAT_RMASK _64bit(0xffffffffffffffff)
#define I2CS_TFIFO_READ_DATA__RDAT_MASK  _64bit(0xffffffffffffffff)
#define I2CS_TFIFO_READ_DATA__RDAT_FIELD 0,63


/* I2C TFIFO Write Data. */
#define I2CS_TFIFO_WRITE_DATA 0x0140

#define I2CS_TFIFO_WRITE_DATA__WDAT_SHIFT 0
#define I2CS_TFIFO_WRITE_DATA__WDAT_WIDTH 64
#define I2CS_TFIFO_WRITE_DATA__WDAT_RESET_VAL 0
#define I2CS_TFIFO_WRITE_DATA__WDAT_RMASK _64bit(0xffffffffffffffff)
#define I2CS_TFIFO_WRITE_DATA__WDAT_MASK  _64bit(0xffffffffffffffff)
#define I2CS_TFIFO_WRITE_DATA__WDAT_FIELD 0,63


/* I2C RFIFO Write Data. */
#define I2CS_WRITE_DATA 0x0130

#define I2CS_WRITE_DATA__I2C_WDAT_SHIFT 0
#define I2CS_WRITE_DATA__I2C_WDAT_WIDTH 64
#define I2CS_WRITE_DATA__I2C_WDAT_RESET_VAL 0
#define I2CS_WRITE_DATA__I2C_WDAT_RMASK _64bit(0xffffffffffffffff)
#define I2CS_WRITE_DATA__I2C_WDAT_MASK  _64bit(0xffffffffffffffff)
#define I2CS_WRITE_DATA__I2C_WDAT_FIELD 0,63



#endif /* !defined(__ARCH_I2CS_DEF_H__) */

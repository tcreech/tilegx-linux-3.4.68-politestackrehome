/*
 * Copyright 2013 Tilera Corporation. All Rights Reserved.
 *
 *   This program is free software; you can redistribute it and/or
 *   modify it under the terms of the GNU General Public License
 *   as published by the Free Software Foundation, version 2.
 *
 *   This program is distributed in the hope that it will be useful, but
 *   WITHOUT ANY WARRANTY; without even the implied warranty of
 *   MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, GOOD TITLE or
 *   NON INFRINGEMENT.  See the GNU General Public License for
 *   more details.
 */

#ifndef __ARCH_MICA_CRYPTO_CTX_USER_DEF_H__
#define __ARCH_MICA_CRYPTO_CTX_USER_DEF_H__

#ifdef __ASSEMBLER__
#define _64bit(x) x
#else /* __ASSEMBLER__ */
#ifdef __tile__
#define _64bit(x) x ## UL
#else /* __tile__ */
#define _64bit(x) x ## ULL
#endif /* __tile__ */
#endif /* __ASSEMBLER */





/*
 * Context Status.
 * This Context User register specifies status about an operation.  It is
 * written by HW when the operation completes or has an error.  Specific
 * engines (e.g. crypto, inflate, deflate) may provide additional
 * customization of this register.
 */
#define MICA_CRYPTO_CTX_USER_CONTEXT_STATUS 0x0028

#define MICA_CRYPTO_CTX_USER_CONTEXT_STATUS__SIZE_SHIFT 0
#define MICA_CRYPTO_CTX_USER_CONTEXT_STATUS__SIZE_WIDTH 32
#define MICA_CRYPTO_CTX_USER_CONTEXT_STATUS__SIZE_RESET_VAL 0
#define MICA_CRYPTO_CTX_USER_CONTEXT_STATUS__SIZE_RMASK 0xffffffff
#define MICA_CRYPTO_CTX_USER_CONTEXT_STATUS__SIZE_MASK  0xffffffff
#define MICA_CRYPTO_CTX_USER_CONTEXT_STATUS__SIZE_FIELD 0,31

#define MICA_CRYPTO_CTX_USER_CONTEXT_STATUS__BAD_DST_BD_SHIFT 58
#define MICA_CRYPTO_CTX_USER_CONTEXT_STATUS__BAD_DST_BD_WIDTH 1
#define MICA_CRYPTO_CTX_USER_CONTEXT_STATUS__BAD_DST_BD_RESET_VAL 0
#define MICA_CRYPTO_CTX_USER_CONTEXT_STATUS__BAD_DST_BD_RMASK 0x1
#define MICA_CRYPTO_CTX_USER_CONTEXT_STATUS__BAD_DST_BD_MASK  _64bit(0x400000000000000)
#define MICA_CRYPTO_CTX_USER_CONTEXT_STATUS__BAD_DST_BD_FIELD 58,58

#define MICA_CRYPTO_CTX_USER_CONTEXT_STATUS__BAD_SRC_BD_SHIFT 59
#define MICA_CRYPTO_CTX_USER_CONTEXT_STATUS__BAD_SRC_BD_WIDTH 1
#define MICA_CRYPTO_CTX_USER_CONTEXT_STATUS__BAD_SRC_BD_RESET_VAL 0
#define MICA_CRYPTO_CTX_USER_CONTEXT_STATUS__BAD_SRC_BD_RMASK 0x1
#define MICA_CRYPTO_CTX_USER_CONTEXT_STATUS__BAD_SRC_BD_MASK  _64bit(0x800000000000000)
#define MICA_CRYPTO_CTX_USER_CONTEXT_STATUS__BAD_SRC_BD_FIELD 59,59

#define MICA_CRYPTO_CTX_USER_CONTEXT_STATUS__BAD_BD_LIST_SHIFT 60
#define MICA_CRYPTO_CTX_USER_CONTEXT_STATUS__BAD_BD_LIST_WIDTH 1
#define MICA_CRYPTO_CTX_USER_CONTEXT_STATUS__BAD_BD_LIST_RESET_VAL 0
#define MICA_CRYPTO_CTX_USER_CONTEXT_STATUS__BAD_BD_LIST_RMASK 0x1
#define MICA_CRYPTO_CTX_USER_CONTEXT_STATUS__BAD_BD_LIST_MASK  _64bit(0x1000000000000000)
#define MICA_CRYPTO_CTX_USER_CONTEXT_STATUS__BAD_BD_LIST_FIELD 60,60

#define MICA_CRYPTO_CTX_USER_CONTEXT_STATUS__BAD_ED_LIST_SHIFT 61
#define MICA_CRYPTO_CTX_USER_CONTEXT_STATUS__BAD_ED_LIST_WIDTH 1
#define MICA_CRYPTO_CTX_USER_CONTEXT_STATUS__BAD_ED_LIST_RESET_VAL 0
#define MICA_CRYPTO_CTX_USER_CONTEXT_STATUS__BAD_ED_LIST_RMASK 0x1
#define MICA_CRYPTO_CTX_USER_CONTEXT_STATUS__BAD_ED_LIST_MASK  _64bit(0x2000000000000000)
#define MICA_CRYPTO_CTX_USER_CONTEXT_STATUS__BAD_ED_LIST_FIELD 61,61

#define MICA_CRYPTO_CTX_USER_CONTEXT_STATUS__DST_OVF_SHIFT 62
#define MICA_CRYPTO_CTX_USER_CONTEXT_STATUS__DST_OVF_WIDTH 1
#define MICA_CRYPTO_CTX_USER_CONTEXT_STATUS__DST_OVF_RESET_VAL 0
#define MICA_CRYPTO_CTX_USER_CONTEXT_STATUS__DST_OVF_RMASK 0x1
#define MICA_CRYPTO_CTX_USER_CONTEXT_STATUS__DST_OVF_MASK  _64bit(0x4000000000000000)
#define MICA_CRYPTO_CTX_USER_CONTEXT_STATUS__DST_OVF_FIELD 62,62

#define MICA_CRYPTO_CTX_USER_CONTEXT_STATUS__RESET_PENDING_SHIFT 63
#define MICA_CRYPTO_CTX_USER_CONTEXT_STATUS__RESET_PENDING_WIDTH 1
#define MICA_CRYPTO_CTX_USER_CONTEXT_STATUS__RESET_PENDING_RESET_VAL 0
#define MICA_CRYPTO_CTX_USER_CONTEXT_STATUS__RESET_PENDING_RMASK 0x1
#define MICA_CRYPTO_CTX_USER_CONTEXT_STATUS__RESET_PENDING_MASK  _64bit(0x8000000000000000)
#define MICA_CRYPTO_CTX_USER_CONTEXT_STATUS__RESET_PENDING_FIELD 63,63


/*
 * Destination Data.
 * This Context User register specifies where destination data is located.
 */
#define MICA_CRYPTO_CTX_USER_DEST_DATA 0x0008

#define MICA_CRYPTO_CTX_USER_DEST_DATA__OFF_SHIFT 0
#define MICA_CRYPTO_CTX_USER_DEST_DATA__OFF_WIDTH 7
#define MICA_CRYPTO_CTX_USER_DEST_DATA__OFF_RESET_VAL 0
#define MICA_CRYPTO_CTX_USER_DEST_DATA__OFF_RMASK 0x7f
#define MICA_CRYPTO_CTX_USER_DEST_DATA__OFF_MASK  0x7f
#define MICA_CRYPTO_CTX_USER_DEST_DATA__OFF_FIELD 0,6

#define MICA_CRYPTO_CTX_USER_DEST_DATA__VA_SHIFT 7
#define MICA_CRYPTO_CTX_USER_DEST_DATA__VA_WIDTH 35
#define MICA_CRYPTO_CTX_USER_DEST_DATA__VA_RESET_VAL 0
#define MICA_CRYPTO_CTX_USER_DEST_DATA__VA_RMASK _64bit(0x7ffffffff)
#define MICA_CRYPTO_CTX_USER_DEST_DATA__VA_MASK  _64bit(0x3ffffffff80)
#define MICA_CRYPTO_CTX_USER_DEST_DATA__VA_FIELD 7,41

#define MICA_CRYPTO_CTX_USER_DEST_DATA__SIZE_SHIFT 59
#define MICA_CRYPTO_CTX_USER_DEST_DATA__SIZE_WIDTH 3
#define MICA_CRYPTO_CTX_USER_DEST_DATA__SIZE_RESET_VAL 0
#define MICA_CRYPTO_CTX_USER_DEST_DATA__SIZE_RMASK 0x7
#define MICA_CRYPTO_CTX_USER_DEST_DATA__SIZE_MASK  _64bit(0x3800000000000000)
#define MICA_CRYPTO_CTX_USER_DEST_DATA__SIZE_FIELD 59,61

#define MICA_CRYPTO_CTX_USER_DEST_DATA__CHAIN_SHIFT 62
#define MICA_CRYPTO_CTX_USER_DEST_DATA__CHAIN_WIDTH 2
#define MICA_CRYPTO_CTX_USER_DEST_DATA__CHAIN_RESET_VAL 0
#define MICA_CRYPTO_CTX_USER_DEST_DATA__CHAIN_RMASK 0x3
#define MICA_CRYPTO_CTX_USER_DEST_DATA__CHAIN_MASK  _64bit(0xc000000000000000)
#define MICA_CRYPTO_CTX_USER_DEST_DATA__CHAIN_FIELD 62,63


/*
 * Extra Data Pointer.
 * This Context User register contains the Virtual Address pointer to Extra
 * Data, if any, associated with the operation.
 */
#define MICA_CRYPTO_CTX_USER_EXTRA_DATA_PTR 0x0010

#define MICA_CRYPTO_CTX_USER_EXTRA_DATA_PTR__VA_SHIFT 0
#define MICA_CRYPTO_CTX_USER_EXTRA_DATA_PTR__VA_WIDTH 42
#define MICA_CRYPTO_CTX_USER_EXTRA_DATA_PTR__VA_RESET_VAL 0
#define MICA_CRYPTO_CTX_USER_EXTRA_DATA_PTR__VA_RMASK _64bit(0x3ffffffffff)
#define MICA_CRYPTO_CTX_USER_EXTRA_DATA_PTR__VA_MASK  _64bit(0x3ffffffffff)
#define MICA_CRYPTO_CTX_USER_EXTRA_DATA_PTR__VA_FIELD 0,41


/*
 * Context In Use.
 * This Context User register is used to provide the status of a Context.  It
 * can be used for polling for completion.
 */
#define MICA_CRYPTO_CTX_USER_IN_USE 0x0020

#define MICA_CRYPTO_CTX_USER_IN_USE__DONE_SHIFT 0
#define MICA_CRYPTO_CTX_USER_IN_USE__DONE_WIDTH 1
#define MICA_CRYPTO_CTX_USER_IN_USE__DONE_RESET_VAL 0
#define MICA_CRYPTO_CTX_USER_IN_USE__DONE_RMASK 0x1
#define MICA_CRYPTO_CTX_USER_IN_USE__DONE_MASK  0x1
#define MICA_CRYPTO_CTX_USER_IN_USE__DONE_FIELD 0,0

#define MICA_CRYPTO_CTX_USER_IN_USE__IN_USE_SHIFT 1
#define MICA_CRYPTO_CTX_USER_IN_USE__IN_USE_WIDTH 1
#define MICA_CRYPTO_CTX_USER_IN_USE__IN_USE_RESET_VAL 0
#define MICA_CRYPTO_CTX_USER_IN_USE__IN_USE_RMASK 0x1
#define MICA_CRYPTO_CTX_USER_IN_USE__IN_USE_MASK  0x2
#define MICA_CRYPTO_CTX_USER_IN_USE__IN_USE_FIELD 1,1


/*
 * Opcode.
 * This Context User register specifies the operation to be performed.
 */
#define MICA_CRYPTO_CTX_USER_OPCODE 0x0018

#define MICA_CRYPTO_CTX_USER_OPCODE__SIZE_SHIFT 0
#define MICA_CRYPTO_CTX_USER_OPCODE__SIZE_WIDTH 30
#define MICA_CRYPTO_CTX_USER_OPCODE__SIZE_RESET_VAL 0
#define MICA_CRYPTO_CTX_USER_OPCODE__SIZE_RMASK 0x3fffffff
#define MICA_CRYPTO_CTX_USER_OPCODE__SIZE_MASK  0x3fffffff
#define MICA_CRYPTO_CTX_USER_OPCODE__SIZE_FIELD 0,29

#define MICA_CRYPTO_CTX_USER_OPCODE__PRIORITY_SHIFT 30
#define MICA_CRYPTO_CTX_USER_OPCODE__PRIORITY_WIDTH 2
#define MICA_CRYPTO_CTX_USER_OPCODE__PRIORITY_RESET_VAL 0
#define MICA_CRYPTO_CTX_USER_OPCODE__PRIORITY_RMASK 0x3
#define MICA_CRYPTO_CTX_USER_OPCODE__PRIORITY_MASK  0xc0000000
#define MICA_CRYPTO_CTX_USER_OPCODE__PRIORITY_FIELD 30,31

#define MICA_CRYPTO_CTX_USER_OPCODE__ENGINE_TYPE_SHIFT 32
#define MICA_CRYPTO_CTX_USER_OPCODE__ENGINE_TYPE_WIDTH 3
#define MICA_CRYPTO_CTX_USER_OPCODE__ENGINE_TYPE_RESET_VAL 0
#define MICA_CRYPTO_CTX_USER_OPCODE__ENGINE_TYPE_RMASK 0x7
#define MICA_CRYPTO_CTX_USER_OPCODE__ENGINE_TYPE_MASK  _64bit(0x700000000)
#define MICA_CRYPTO_CTX_USER_OPCODE__ENGINE_TYPE_FIELD 32,34
#define MICA_CRYPTO_CTX_USER_OPCODE__ENGINE_TYPE_VAL_MEM_CPY 0x0
#define MICA_CRYPTO_CTX_USER_OPCODE__ENGINE_TYPE_VAL_MEM_CPY_INVERT 0x1
#define MICA_CRYPTO_CTX_USER_OPCODE__ENGINE_TYPE_VAL_PP 0x2
#define MICA_CRYPTO_CTX_USER_OPCODE__ENGINE_TYPE_VAL_KASUMI 0x4
#define MICA_CRYPTO_CTX_USER_OPCODE__ENGINE_TYPE_VAL_SNOW3G 0x5

#define MICA_CRYPTO_CTX_USER_OPCODE__SRC_MODE_SHIFT 35
#define MICA_CRYPTO_CTX_USER_OPCODE__SRC_MODE_WIDTH 1
#define MICA_CRYPTO_CTX_USER_OPCODE__SRC_MODE_RESET_VAL 0
#define MICA_CRYPTO_CTX_USER_OPCODE__SRC_MODE_RMASK 0x1
#define MICA_CRYPTO_CTX_USER_OPCODE__SRC_MODE_MASK  _64bit(0x800000000)
#define MICA_CRYPTO_CTX_USER_OPCODE__SRC_MODE_FIELD 35,35
#define MICA_CRYPTO_CTX_USER_OPCODE__SRC_MODE_VAL_SINGLE_BUFF_DESC 0x0
#define MICA_CRYPTO_CTX_USER_OPCODE__SRC_MODE_VAL_EDMA_DESC_LIST 0x1

#define MICA_CRYPTO_CTX_USER_OPCODE__DEST_MODE_SHIFT 36
#define MICA_CRYPTO_CTX_USER_OPCODE__DEST_MODE_WIDTH 2
#define MICA_CRYPTO_CTX_USER_OPCODE__DEST_MODE_RESET_VAL 0
#define MICA_CRYPTO_CTX_USER_OPCODE__DEST_MODE_RMASK 0x3
#define MICA_CRYPTO_CTX_USER_OPCODE__DEST_MODE_MASK  _64bit(0x3000000000)
#define MICA_CRYPTO_CTX_USER_OPCODE__DEST_MODE_FIELD 36,37
#define MICA_CRYPTO_CTX_USER_OPCODE__DEST_MODE_VAL_SINGLE_BUFF_DESC 0x0
#define MICA_CRYPTO_CTX_USER_OPCODE__DEST_MODE_VAL_OVERWRITE_SRC 0x1
#define MICA_CRYPTO_CTX_USER_OPCODE__DEST_MODE_VAL_BUFF_DESC_LIST 0x2

#define MICA_CRYPTO_CTX_USER_OPCODE__NUM_DEST_BD_SHIFT 38
#define MICA_CRYPTO_CTX_USER_OPCODE__NUM_DEST_BD_WIDTH 5
#define MICA_CRYPTO_CTX_USER_OPCODE__NUM_DEST_BD_RESET_VAL 0
#define MICA_CRYPTO_CTX_USER_OPCODE__NUM_DEST_BD_RMASK 0x1f
#define MICA_CRYPTO_CTX_USER_OPCODE__NUM_DEST_BD_MASK  _64bit(0x7c000000000)
#define MICA_CRYPTO_CTX_USER_OPCODE__NUM_DEST_BD_FIELD 38,42

#define MICA_CRYPTO_CTX_USER_OPCODE__EXTRA_DATA_SIZE_SHIFT 43
#define MICA_CRYPTO_CTX_USER_OPCODE__EXTRA_DATA_SIZE_WIDTH 6
#define MICA_CRYPTO_CTX_USER_OPCODE__EXTRA_DATA_SIZE_RESET_VAL 0
#define MICA_CRYPTO_CTX_USER_OPCODE__EXTRA_DATA_SIZE_RMASK 0x3f
#define MICA_CRYPTO_CTX_USER_OPCODE__EXTRA_DATA_SIZE_MASK  _64bit(0x1f80000000000)
#define MICA_CRYPTO_CTX_USER_OPCODE__EXTRA_DATA_SIZE_FIELD 43,48

#define MICA_CRYPTO_CTX_USER_OPCODE__DST_SIZE_SHIFT 49
#define MICA_CRYPTO_CTX_USER_OPCODE__DST_SIZE_WIDTH 4
#define MICA_CRYPTO_CTX_USER_OPCODE__DST_SIZE_RESET_VAL 0
#define MICA_CRYPTO_CTX_USER_OPCODE__DST_SIZE_RMASK 0xf
#define MICA_CRYPTO_CTX_USER_OPCODE__DST_SIZE_MASK  _64bit(0x1e000000000000)
#define MICA_CRYPTO_CTX_USER_OPCODE__DST_SIZE_FIELD 49,52

#define MICA_CRYPTO_CTX_USER_OPCODE__DM_SPECIFIC_SHIFT 53
#define MICA_CRYPTO_CTX_USER_OPCODE__DM_SPECIFIC_WIDTH 11
#define MICA_CRYPTO_CTX_USER_OPCODE__DM_SPECIFIC_RESET_VAL 0
#define MICA_CRYPTO_CTX_USER_OPCODE__DM_SPECIFIC_RMASK 0x7ff
#define MICA_CRYPTO_CTX_USER_OPCODE__DM_SPECIFIC_MASK  _64bit(0xffe0000000000000)
#define MICA_CRYPTO_CTX_USER_OPCODE__DM_SPECIFIC_FIELD 53,63


/*
 * Source Data.
 * This Context User register specifies where source data is located.
 */
#define MICA_CRYPTO_CTX_USER_SRC_DATA 0x0000

#define MICA_CRYPTO_CTX_USER_SRC_DATA__OFF_SHIFT 0
#define MICA_CRYPTO_CTX_USER_SRC_DATA__OFF_WIDTH 7
#define MICA_CRYPTO_CTX_USER_SRC_DATA__OFF_RESET_VAL 0
#define MICA_CRYPTO_CTX_USER_SRC_DATA__OFF_RMASK 0x7f
#define MICA_CRYPTO_CTX_USER_SRC_DATA__OFF_MASK  0x7f
#define MICA_CRYPTO_CTX_USER_SRC_DATA__OFF_FIELD 0,6

#define MICA_CRYPTO_CTX_USER_SRC_DATA__VA_SHIFT 7
#define MICA_CRYPTO_CTX_USER_SRC_DATA__VA_WIDTH 35
#define MICA_CRYPTO_CTX_USER_SRC_DATA__VA_RESET_VAL 0
#define MICA_CRYPTO_CTX_USER_SRC_DATA__VA_RMASK _64bit(0x7ffffffff)
#define MICA_CRYPTO_CTX_USER_SRC_DATA__VA_MASK  _64bit(0x3ffffffff80)
#define MICA_CRYPTO_CTX_USER_SRC_DATA__VA_FIELD 7,41

#define MICA_CRYPTO_CTX_USER_SRC_DATA__SIZE_SHIFT 59
#define MICA_CRYPTO_CTX_USER_SRC_DATA__SIZE_WIDTH 3
#define MICA_CRYPTO_CTX_USER_SRC_DATA__SIZE_RESET_VAL 0
#define MICA_CRYPTO_CTX_USER_SRC_DATA__SIZE_RMASK 0x7
#define MICA_CRYPTO_CTX_USER_SRC_DATA__SIZE_MASK  _64bit(0x3800000000000000)
#define MICA_CRYPTO_CTX_USER_SRC_DATA__SIZE_FIELD 59,61

#define MICA_CRYPTO_CTX_USER_SRC_DATA__CHAIN_SHIFT 62
#define MICA_CRYPTO_CTX_USER_SRC_DATA__CHAIN_WIDTH 2
#define MICA_CRYPTO_CTX_USER_SRC_DATA__CHAIN_RESET_VAL 0
#define MICA_CRYPTO_CTX_USER_SRC_DATA__CHAIN_RMASK 0x3
#define MICA_CRYPTO_CTX_USER_SRC_DATA__CHAIN_MASK  _64bit(0xc000000000000000)
#define MICA_CRYPTO_CTX_USER_SRC_DATA__CHAIN_FIELD 62,63



#endif /* !defined(__ARCH_MICA_CRYPTO_CTX_USER_DEF_H__) */

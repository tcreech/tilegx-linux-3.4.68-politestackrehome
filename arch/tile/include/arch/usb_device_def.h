/*
 * Copyright 2013 Tilera Corporation. All Rights Reserved.
 *
 *   This program is free software; you can redistribute it and/or
 *   modify it under the terms of the GNU General Public License
 *   as published by the Free Software Foundation, version 2.
 *
 *   This program is distributed in the hope that it will be useful, but
 *   WITHOUT ANY WARRANTY; without even the implied warranty of
 *   MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, GOOD TITLE or
 *   NON INFRINGEMENT.  See the GNU General Public License for
 *   more details.
 */

#ifndef __ARCH_USB_DEVICE_DEF_H__
#define __ARCH_USB_DEVICE_DEF_H__

#ifdef __ASSEMBLER__
#define _64bit(x) x
#else /* __ASSEMBLER__ */
#ifdef __tile__
#define _64bit(x) x ## UL
#else /* __tile__ */
#define _64bit(x) x ## ULL
#endif /* __tile__ */
#endif /* __ASSEMBLER */





/*
 * MMIO Address Space.
 * The MMIO physical address space for the USB is described below.  This is a
 * general description of the MMIO space as opposed to a register description
 */
#define USB_DEVICE_MMIO_ADDRESS_SPACE__FIRST_WORD 0x0000
#define USB_DEVICE_MMIO_ADDRESS_SPACE__LAST_WORD 0xfffffffff8

#define USB_DEVICE_MMIO_ADDRESS_SPACE__OFFSET_SHIFT 0
#define USB_DEVICE_MMIO_ADDRESS_SPACE__OFFSET_WIDTH 18
#define USB_DEVICE_MMIO_ADDRESS_SPACE__OFFSET_RESET_VAL 0
#define USB_DEVICE_MMIO_ADDRESS_SPACE__OFFSET_RMASK 0x3ffff
#define USB_DEVICE_MMIO_ADDRESS_SPACE__OFFSET_MASK  0x3ffff
#define USB_DEVICE_MMIO_ADDRESS_SPACE__OFFSET_FIELD 0,17

#define USB_DEVICE_MMIO_ADDRESS_SPACE__PROT_SHIFT 18
#define USB_DEVICE_MMIO_ADDRESS_SPACE__PROT_WIDTH 2
#define USB_DEVICE_MMIO_ADDRESS_SPACE__PROT_RESET_VAL 0
#define USB_DEVICE_MMIO_ADDRESS_SPACE__PROT_RMASK 0x3
#define USB_DEVICE_MMIO_ADDRESS_SPACE__PROT_MASK  0xc0000
#define USB_DEVICE_MMIO_ADDRESS_SPACE__PROT_FIELD 18,19

#define USB_DEVICE_MMIO_ADDRESS_SPACE__CHANNEL_SHIFT 38
#define USB_DEVICE_MMIO_ADDRESS_SPACE__CHANNEL_WIDTH 2
#define USB_DEVICE_MMIO_ADDRESS_SPACE__CHANNEL_RESET_VAL 0
#define USB_DEVICE_MMIO_ADDRESS_SPACE__CHANNEL_RMASK 0x3
#define USB_DEVICE_MMIO_ADDRESS_SPACE__CHANNEL_MASK  _64bit(0xc000000000)
#define USB_DEVICE_MMIO_ADDRESS_SPACE__CHANNEL_FIELD 38,39
#define USB_DEVICE_MMIO_ADDRESS_SPACE__CHANNEL_VAL_USBS0 0x0
#define USB_DEVICE_MMIO_ADDRESS_SPACE__CHANNEL_VAL_USBH0 0x1
#define USB_DEVICE_MMIO_ADDRESS_SPACE__CHANNEL_VAL_USBH1 0x2


/*
 * Clock Control.
 * Provides control over core PLL
 */
#define USB_DEVICE_CLOCK_CONTROL 0x0500

#define USB_DEVICE_CLOCK_CONTROL__ENA_SHIFT 0
#define USB_DEVICE_CLOCK_CONTROL__ENA_WIDTH 1
#define USB_DEVICE_CLOCK_CONTROL__ENA_RMASK 0x1
#define USB_DEVICE_CLOCK_CONTROL__ENA_MASK  0x1
#define USB_DEVICE_CLOCK_CONTROL__ENA_FIELD 0,0

#define USB_DEVICE_CLOCK_CONTROL__PLL_RANGE_SHIFT 1
#define USB_DEVICE_CLOCK_CONTROL__PLL_RANGE_WIDTH 3
#define USB_DEVICE_CLOCK_CONTROL__PLL_RANGE_RESET_VAL 3
#define USB_DEVICE_CLOCK_CONTROL__PLL_RANGE_RMASK 0x7
#define USB_DEVICE_CLOCK_CONTROL__PLL_RANGE_MASK  0xe
#define USB_DEVICE_CLOCK_CONTROL__PLL_RANGE_FIELD 1,3
#define USB_DEVICE_CLOCK_CONTROL__PLL_RANGE_VAL_BYP 0x0
#define USB_DEVICE_CLOCK_CONTROL__PLL_RANGE_VAL_R14_16 0x1
#define USB_DEVICE_CLOCK_CONTROL__PLL_RANGE_VAL_R16_26 0x2
#define USB_DEVICE_CLOCK_CONTROL__PLL_RANGE_VAL_R26_42 0x3
#define USB_DEVICE_CLOCK_CONTROL__PLL_RANGE_VAL_R42_65 0x4
#define USB_DEVICE_CLOCK_CONTROL__PLL_RANGE_VAL_R65_104 0x5
#define USB_DEVICE_CLOCK_CONTROL__PLL_RANGE_VAL_R104_166 0x6
#define USB_DEVICE_CLOCK_CONTROL__PLL_RANGE_VAL_R166_200 0x7

#define USB_DEVICE_CLOCK_CONTROL__PLL_Q_SHIFT 4
#define USB_DEVICE_CLOCK_CONTROL__PLL_Q_WIDTH 3
#define USB_DEVICE_CLOCK_CONTROL__PLL_Q_RESET_VAL 3
#define USB_DEVICE_CLOCK_CONTROL__PLL_Q_RMASK 0x7
#define USB_DEVICE_CLOCK_CONTROL__PLL_Q_MASK  0x70
#define USB_DEVICE_CLOCK_CONTROL__PLL_Q_FIELD 4,6

#define USB_DEVICE_CLOCK_CONTROL__PLL_N_SHIFT 7
#define USB_DEVICE_CLOCK_CONTROL__PLL_N_WIDTH 6
#define USB_DEVICE_CLOCK_CONTROL__PLL_N_RESET_VAL 3
#define USB_DEVICE_CLOCK_CONTROL__PLL_N_RMASK 0x3f
#define USB_DEVICE_CLOCK_CONTROL__PLL_N_MASK  0x1f80
#define USB_DEVICE_CLOCK_CONTROL__PLL_N_FIELD 7,12

#define USB_DEVICE_CLOCK_CONTROL__PLL_M_SHIFT 13
#define USB_DEVICE_CLOCK_CONTROL__PLL_M_WIDTH 8
#define USB_DEVICE_CLOCK_CONTROL__PLL_M_RESET_VAL 42
#define USB_DEVICE_CLOCK_CONTROL__PLL_M_RMASK 0xff
#define USB_DEVICE_CLOCK_CONTROL__PLL_M_MASK  0x1fe000
#define USB_DEVICE_CLOCK_CONTROL__PLL_M_FIELD 13,20

#define USB_DEVICE_CLOCK_CONTROL__CLOCK_READY_SHIFT 31
#define USB_DEVICE_CLOCK_CONTROL__CLOCK_READY_WIDTH 1
#define USB_DEVICE_CLOCK_CONTROL__CLOCK_READY_RESET_VAL 0
#define USB_DEVICE_CLOCK_CONTROL__CLOCK_READY_RMASK 0x1
#define USB_DEVICE_CLOCK_CONTROL__CLOCK_READY_MASK  0x80000000
#define USB_DEVICE_CLOCK_CONTROL__CLOCK_READY_FIELD 31,31


/* Clock Count. */
#define USB_DEVICE_CLOCK_COUNT 0x0038

#define USB_DEVICE_CLOCK_COUNT__RUN_SHIFT 0
#define USB_DEVICE_CLOCK_COUNT__RUN_WIDTH 1
#define USB_DEVICE_CLOCK_COUNT__RUN_RESET_VAL 0
#define USB_DEVICE_CLOCK_COUNT__RUN_RMASK 0x1
#define USB_DEVICE_CLOCK_COUNT__RUN_MASK  0x1
#define USB_DEVICE_CLOCK_COUNT__RUN_FIELD 0,0

#define USB_DEVICE_CLOCK_COUNT__COUNT_SHIFT 1
#define USB_DEVICE_CLOCK_COUNT__COUNT_WIDTH 15
#define USB_DEVICE_CLOCK_COUNT__COUNT_RESET_VAL 0
#define USB_DEVICE_CLOCK_COUNT__COUNT_RMASK 0x7fff
#define USB_DEVICE_CLOCK_COUNT__COUNT_MASK  0xfffe
#define USB_DEVICE_CLOCK_COUNT__COUNT_FIELD 1,15


/*
 * Clock Divider Control.
 * Provides control over clock dividers
 */
#define USB_DEVICE_CLOCK_DIVIDER_CONTROL 0x0548

#define USB_DEVICE_CLOCK_DIVIDER_CONTROL__CLK48_CONFIG_SHIFT 0
#define USB_DEVICE_CLOCK_DIVIDER_CONTROL__CLK48_CONFIG_WIDTH 8
#define USB_DEVICE_CLOCK_DIVIDER_CONTROL__CLK48_CONFIG_RESET_VAL 6
#define USB_DEVICE_CLOCK_DIVIDER_CONTROL__CLK48_CONFIG_RMASK 0xff
#define USB_DEVICE_CLOCK_DIVIDER_CONTROL__CLK48_CONFIG_MASK  0xff
#define USB_DEVICE_CLOCK_DIVIDER_CONTROL__CLK48_CONFIG_FIELD 0,7

#define USB_DEVICE_CLOCK_DIVIDER_CONTROL__CLK12_CONFIG_SHIFT 8
#define USB_DEVICE_CLOCK_DIVIDER_CONTROL__CLK12_CONFIG_WIDTH 8
#define USB_DEVICE_CLOCK_DIVIDER_CONTROL__CLK12_CONFIG_RESET_VAL 27
#define USB_DEVICE_CLOCK_DIVIDER_CONTROL__CLK12_CONFIG_RMASK 0xff
#define USB_DEVICE_CLOCK_DIVIDER_CONTROL__CLK12_CONFIG_MASK  0xff00
#define USB_DEVICE_CLOCK_DIVIDER_CONTROL__CLK12_CONFIG_FIELD 8,15


/*
 * USB DEBUG Table Init Control.
 * Initialization control for the USB DEBUG tables.
 */
#define USB_DEVICE_DEBUG_INIT_CTL 0x0430

#define USB_DEVICE_DEBUG_INIT_CTL__IDX_SHIFT 0
#define USB_DEVICE_DEBUG_INIT_CTL__IDX_WIDTH 7
#define USB_DEVICE_DEBUG_INIT_CTL__IDX_RESET_VAL 0
#define USB_DEVICE_DEBUG_INIT_CTL__IDX_RMASK 0x7f
#define USB_DEVICE_DEBUG_INIT_CTL__IDX_MASK  0x7f
#define USB_DEVICE_DEBUG_INIT_CTL__IDX_FIELD 0,6


/*
 * DEBUG Table Data.
 * Read/Write data for USB DEBUG table
 */
#define USB_DEVICE_DEBUG_INIT_DAT 0x0438

#define USB_DEVICE_DEBUG_INIT_DAT__DAT_SHIFT 0
#define USB_DEVICE_DEBUG_INIT_DAT__DAT_WIDTH 64
#define USB_DEVICE_DEBUG_INIT_DAT__DAT_RMASK _64bit(0xffffffffffffffff)
#define USB_DEVICE_DEBUG_INIT_DAT__DAT_MASK  _64bit(0xffffffffffffffff)
#define USB_DEVICE_DEBUG_INIT_DAT__DAT_FIELD 0,63


/*
 * USB DES Table Init Control.
 * Initialization control for the USB DES tables.
 */
#define USB_DEVICE_DES_INIT_CTL 0x0420

#define USB_DEVICE_DES_INIT_CTL__IDX_SHIFT 0
#define USB_DEVICE_DES_INIT_CTL__IDX_WIDTH 6
#define USB_DEVICE_DES_INIT_CTL__IDX_RESET_VAL 0
#define USB_DEVICE_DES_INIT_CTL__IDX_RMASK 0x3f
#define USB_DEVICE_DES_INIT_CTL__IDX_MASK  0x3f
#define USB_DEVICE_DES_INIT_CTL__IDX_FIELD 0,5


/*
 * DES Table Data.
 * Read/Write data for USB DES table
 */
#define USB_DEVICE_DES_INIT_DAT 0x0428

#define USB_DEVICE_DES_INIT_DAT__DAT_SHIFT 0
#define USB_DEVICE_DES_INIT_DAT__DAT_WIDTH 64
#define USB_DEVICE_DES_INIT_DAT__DAT_RMASK _64bit(0xffffffffffffffff)
#define USB_DEVICE_DES_INIT_DAT__DAT_MASK  _64bit(0xffffffffffffffff)
#define USB_DEVICE_DES_INIT_DAT__DAT_FIELD 0,63


/*
 * Device Control.
 * This register provides general device control.
 */
#define USB_DEVICE_DEV_CTL 0x0008

#define USB_DEVICE_DEV_CTL__RDN_ROUTE_ORDER_SHIFT 2
#define USB_DEVICE_DEV_CTL__RDN_ROUTE_ORDER_WIDTH 1
#define USB_DEVICE_DEV_CTL__RDN_ROUTE_ORDER_RESET_VAL 1
#define USB_DEVICE_DEV_CTL__RDN_ROUTE_ORDER_RMASK 0x1
#define USB_DEVICE_DEV_CTL__RDN_ROUTE_ORDER_MASK  0x4
#define USB_DEVICE_DEV_CTL__RDN_ROUTE_ORDER_FIELD 2,2

#define USB_DEVICE_DEV_CTL__SDN_ROUTE_ORDER_SHIFT 3
#define USB_DEVICE_DEV_CTL__SDN_ROUTE_ORDER_WIDTH 1
#define USB_DEVICE_DEV_CTL__SDN_ROUTE_ORDER_RESET_VAL 0
#define USB_DEVICE_DEV_CTL__SDN_ROUTE_ORDER_RMASK 0x1
#define USB_DEVICE_DEV_CTL__SDN_ROUTE_ORDER_MASK  0x8
#define USB_DEVICE_DEV_CTL__SDN_ROUTE_ORDER_FIELD 3,3


/*
 * Device Info.
 * This register provides general information about the device attached to
 * this port and channel.
 */
#define USB_DEVICE_DEV_INFO 0x0000

#define USB_DEVICE_DEV_INFO__TYPE_SHIFT 0
#define USB_DEVICE_DEV_INFO__TYPE_WIDTH 12
#define USB_DEVICE_DEV_INFO__TYPE_RESET_VAL 42
#define USB_DEVICE_DEV_INFO__TYPE_RMASK 0xfff
#define USB_DEVICE_DEV_INFO__TYPE_MASK  0xfff
#define USB_DEVICE_DEV_INFO__TYPE_FIELD 0,11
#define USB_DEVICE_DEV_INFO__TYPE_VAL_PCIE 0x1
#define USB_DEVICE_DEV_INFO__TYPE_VAL_GBE 0x10
#define USB_DEVICE_DEV_INFO__TYPE_VAL_XGBE 0x11
#define USB_DEVICE_DEV_INFO__TYPE_VAL_MPIPE 0x13
#define USB_DEVICE_DEV_INFO__TYPE_VAL_TRIO 0x14
#define USB_DEVICE_DEV_INFO__TYPE_VAL_CRYPTO 0x16
#define USB_DEVICE_DEV_INFO__TYPE_VAL_COMPRESSION 0x18
#define USB_DEVICE_DEV_INFO__TYPE_VAL_GPIO 0x20
#define USB_DEVICE_DEV_INFO__TYPE_VAL_RSHIM 0x21
#define USB_DEVICE_DEV_INFO__TYPE_VAL_SROM 0x22
#define USB_DEVICE_DEV_INFO__TYPE_VAL_I2CM 0x25
#define USB_DEVICE_DEV_INFO__TYPE_VAL_I2CS 0x26
#define USB_DEVICE_DEV_INFO__TYPE_VAL_UART 0x28
#define USB_DEVICE_DEV_INFO__TYPE_VAL_USBH 0x29
#define USB_DEVICE_DEV_INFO__TYPE_VAL_USBS 0x2a
#define USB_DEVICE_DEV_INFO__TYPE_VAL_USBHS 0x2b
#define USB_DEVICE_DEV_INFO__TYPE_VAL_DDR2 0x40
#define USB_DEVICE_DEV_INFO__TYPE_VAL_DDR3 0x42
#define USB_DEVICE_DEV_INFO__TYPE_VAL_DIAG_SNP 0x80
#define USB_DEVICE_DEV_INFO__TYPE_VAL_IPIC 0x81

#define USB_DEVICE_DEV_INFO__DEVICE_REV_SHIFT 16
#define USB_DEVICE_DEV_INFO__DEVICE_REV_WIDTH 8
#define USB_DEVICE_DEV_INFO__DEVICE_REV_RMASK 0xff
#define USB_DEVICE_DEV_INFO__DEVICE_REV_MASK  0xff0000
#define USB_DEVICE_DEV_INFO__DEVICE_REV_FIELD 16,23

#define USB_DEVICE_DEV_INFO__REGISTER_REV_SHIFT 24
#define USB_DEVICE_DEV_INFO__REGISTER_REV_WIDTH 4
#define USB_DEVICE_DEV_INFO__REGISTER_REV_RESET_VAL 0
#define USB_DEVICE_DEV_INFO__REGISTER_REV_RMASK 0xf
#define USB_DEVICE_DEV_INFO__REGISTER_REV_MASK  0xf000000
#define USB_DEVICE_DEV_INFO__REGISTER_REV_FIELD 24,27

#define USB_DEVICE_DEV_INFO__INSTANCE_SHIFT 32
#define USB_DEVICE_DEV_INFO__INSTANCE_WIDTH 4
#define USB_DEVICE_DEV_INFO__INSTANCE_RMASK 0xf
#define USB_DEVICE_DEV_INFO__INSTANCE_MASK  _64bit(0xf00000000)
#define USB_DEVICE_DEV_INFO__INSTANCE_FIELD 32,35


/*
 * D_CFG_UDC_REG_ADDR.
 * This register configures the device. It is only set during initial
 * configuration or when there is a change in
 * the configuration.
 */
#define USB_DEVICE_D_CFG_UDC_REG 0x10400

#define USB_DEVICE_D_CFG_UDC_REG__SPD_SHIFT 0
#define USB_DEVICE_D_CFG_UDC_REG__SPD_WIDTH 2
#define USB_DEVICE_D_CFG_UDC_REG__SPD_RESET_VAL 0
#define USB_DEVICE_D_CFG_UDC_REG__SPD_RMASK 0x3
#define USB_DEVICE_D_CFG_UDC_REG__SPD_MASK  0x3
#define USB_DEVICE_D_CFG_UDC_REG__SPD_FIELD 0,1

#define USB_DEVICE_D_CFG_UDC_REG__RWKP_SHIFT 2
#define USB_DEVICE_D_CFG_UDC_REG__RWKP_WIDTH 1
#define USB_DEVICE_D_CFG_UDC_REG__RWKP_RESET_VAL 0
#define USB_DEVICE_D_CFG_UDC_REG__RWKP_RMASK 0x1
#define USB_DEVICE_D_CFG_UDC_REG__RWKP_MASK  0x4
#define USB_DEVICE_D_CFG_UDC_REG__RWKP_FIELD 2,2

#define USB_DEVICE_D_CFG_UDC_REG__SP_SHIFT 3
#define USB_DEVICE_D_CFG_UDC_REG__SP_WIDTH 1
#define USB_DEVICE_D_CFG_UDC_REG__SP_RESET_VAL 0
#define USB_DEVICE_D_CFG_UDC_REG__SP_RMASK 0x1
#define USB_DEVICE_D_CFG_UDC_REG__SP_MASK  0x8
#define USB_DEVICE_D_CFG_UDC_REG__SP_FIELD 3,3

#define USB_DEVICE_D_CFG_UDC_REG__SS_SHIFT 4
#define USB_DEVICE_D_CFG_UDC_REG__SS_WIDTH 1
#define USB_DEVICE_D_CFG_UDC_REG__SS_RESET_VAL 0
#define USB_DEVICE_D_CFG_UDC_REG__SS_RMASK 0x1
#define USB_DEVICE_D_CFG_UDC_REG__SS_MASK  0x10
#define USB_DEVICE_D_CFG_UDC_REG__SS_FIELD 4,4

#define USB_DEVICE_D_CFG_UDC_REG__PI_SHIFT 5
#define USB_DEVICE_D_CFG_UDC_REG__PI_WIDTH 1
#define USB_DEVICE_D_CFG_UDC_REG__PI_RESET_VAL 0
#define USB_DEVICE_D_CFG_UDC_REG__PI_RMASK 0x1
#define USB_DEVICE_D_CFG_UDC_REG__PI_MASK  0x20
#define USB_DEVICE_D_CFG_UDC_REG__PI_FIELD 5,5

#define USB_DEVICE_D_CFG_UDC_REG__DIR_SHIFT 6
#define USB_DEVICE_D_CFG_UDC_REG__DIR_WIDTH 1
#define USB_DEVICE_D_CFG_UDC_REG__DIR_RESET_VAL 0
#define USB_DEVICE_D_CFG_UDC_REG__DIR_RMASK 0x1
#define USB_DEVICE_D_CFG_UDC_REG__DIR_MASK  0x40
#define USB_DEVICE_D_CFG_UDC_REG__DIR_FIELD 6,6

#define USB_DEVICE_D_CFG_UDC_REG__STATUS_SHIFT 7
#define USB_DEVICE_D_CFG_UDC_REG__STATUS_WIDTH 1
#define USB_DEVICE_D_CFG_UDC_REG__STATUS_RESET_VAL 0
#define USB_DEVICE_D_CFG_UDC_REG__STATUS_RMASK 0x1
#define USB_DEVICE_D_CFG_UDC_REG__STATUS_MASK  0x80
#define USB_DEVICE_D_CFG_UDC_REG__STATUS_FIELD 7,7

#define USB_DEVICE_D_CFG_UDC_REG__STATUS_1_SHIFT 8
#define USB_DEVICE_D_CFG_UDC_REG__STATUS_1_WIDTH 1
#define USB_DEVICE_D_CFG_UDC_REG__STATUS_1_RESET_VAL 0
#define USB_DEVICE_D_CFG_UDC_REG__STATUS_1_RMASK 0x1
#define USB_DEVICE_D_CFG_UDC_REG__STATUS_1_MASK  0x100
#define USB_DEVICE_D_CFG_UDC_REG__STATUS_1_FIELD 8,8

#define USB_DEVICE_D_CFG_UDC_REG__PHY_ERROR_DETECT_SHIFT 9
#define USB_DEVICE_D_CFG_UDC_REG__PHY_ERROR_DETECT_WIDTH 1
#define USB_DEVICE_D_CFG_UDC_REG__PHY_ERROR_DETECT_RESET_VAL 0
#define USB_DEVICE_D_CFG_UDC_REG__PHY_ERROR_DETECT_RMASK 0x1
#define USB_DEVICE_D_CFG_UDC_REG__PHY_ERROR_DETECT_MASK  0x200
#define USB_DEVICE_D_CFG_UDC_REG__PHY_ERROR_DETECT_FIELD 9,9

#define USB_DEVICE_D_CFG_UDC_REG__FS_TIMEOUT_CALIB_SHIFT 10
#define USB_DEVICE_D_CFG_UDC_REG__FS_TIMEOUT_CALIB_WIDTH 3
#define USB_DEVICE_D_CFG_UDC_REG__FS_TIMEOUT_CALIB_RESET_VAL 0
#define USB_DEVICE_D_CFG_UDC_REG__FS_TIMEOUT_CALIB_RMASK 0x7
#define USB_DEVICE_D_CFG_UDC_REG__FS_TIMEOUT_CALIB_MASK  0x1c00
#define USB_DEVICE_D_CFG_UDC_REG__FS_TIMEOUT_CALIB_FIELD 10,12

#define USB_DEVICE_D_CFG_UDC_REG__HS_TIMEOUT_CALIB_SHIFT 13
#define USB_DEVICE_D_CFG_UDC_REG__HS_TIMEOUT_CALIB_WIDTH 3
#define USB_DEVICE_D_CFG_UDC_REG__HS_TIMEOUT_CALIB_RESET_VAL 0
#define USB_DEVICE_D_CFG_UDC_REG__HS_TIMEOUT_CALIB_RMASK 0x7
#define USB_DEVICE_D_CFG_UDC_REG__HS_TIMEOUT_CALIB_MASK  0xe000
#define USB_DEVICE_D_CFG_UDC_REG__HS_TIMEOUT_CALIB_FIELD 13,15

#define USB_DEVICE_D_CFG_UDC_REG__HALT_STATUS_SHIFT 16
#define USB_DEVICE_D_CFG_UDC_REG__HALT_STATUS_WIDTH 1
#define USB_DEVICE_D_CFG_UDC_REG__HALT_STATUS_RESET_VAL 0
#define USB_DEVICE_D_CFG_UDC_REG__HALT_STATUS_RMASK 0x1
#define USB_DEVICE_D_CFG_UDC_REG__HALT_STATUS_MASK  0x10000
#define USB_DEVICE_D_CFG_UDC_REG__HALT_STATUS_FIELD 16,16

#define USB_DEVICE_D_CFG_UDC_REG__CSR_PRG_SHIFT 17
#define USB_DEVICE_D_CFG_UDC_REG__CSR_PRG_WIDTH 1
#define USB_DEVICE_D_CFG_UDC_REG__CSR_PRG_RESET_VAL 0
#define USB_DEVICE_D_CFG_UDC_REG__CSR_PRG_RMASK 0x1
#define USB_DEVICE_D_CFG_UDC_REG__CSR_PRG_MASK  0x20000
#define USB_DEVICE_D_CFG_UDC_REG__CSR_PRG_FIELD 17,17

#define USB_DEVICE_D_CFG_UDC_REG__SET_DESC_SHIFT 18
#define USB_DEVICE_D_CFG_UDC_REG__SET_DESC_WIDTH 1
#define USB_DEVICE_D_CFG_UDC_REG__SET_DESC_RESET_VAL 0
#define USB_DEVICE_D_CFG_UDC_REG__SET_DESC_RMASK 0x1
#define USB_DEVICE_D_CFG_UDC_REG__SET_DESC_MASK  0x40000
#define USB_DEVICE_D_CFG_UDC_REG__SET_DESC_FIELD 18,18

#define USB_DEVICE_D_CFG_UDC_REG__DDR_SHIFT 19
#define USB_DEVICE_D_CFG_UDC_REG__DDR_WIDTH 1
#define USB_DEVICE_D_CFG_UDC_REG__DDR_RESET_VAL 0
#define USB_DEVICE_D_CFG_UDC_REG__DDR_RMASK 0x1
#define USB_DEVICE_D_CFG_UDC_REG__DDR_MASK  0x80000
#define USB_DEVICE_D_CFG_UDC_REG__DDR_FIELD 19,19

#define USB_DEVICE_D_CFG_UDC_REG__LPM_AUTO_SHIFT 20
#define USB_DEVICE_D_CFG_UDC_REG__LPM_AUTO_WIDTH 1
#define USB_DEVICE_D_CFG_UDC_REG__LPM_AUTO_RESET_VAL 0
#define USB_DEVICE_D_CFG_UDC_REG__LPM_AUTO_RMASK 0x1
#define USB_DEVICE_D_CFG_UDC_REG__LPM_AUTO_MASK  0x100000
#define USB_DEVICE_D_CFG_UDC_REG__LPM_AUTO_FIELD 20,20

#define USB_DEVICE_D_CFG_UDC_REG__LPM_EN_SHIFT 21
#define USB_DEVICE_D_CFG_UDC_REG__LPM_EN_WIDTH 1
#define USB_DEVICE_D_CFG_UDC_REG__LPM_EN_RESET_VAL 0
#define USB_DEVICE_D_CFG_UDC_REG__LPM_EN_RMASK 0x1
#define USB_DEVICE_D_CFG_UDC_REG__LPM_EN_MASK  0x200000
#define USB_DEVICE_D_CFG_UDC_REG__LPM_EN_FIELD 21,21


/*
 * D_CTRL_UDC_REG_ADDR.
 * This register is set at runtime and controls the device after device
 * configuration.
 */
#define USB_DEVICE_D_CTRL_UDC_REG 0x10404

#define USB_DEVICE_D_CTRL_UDC_REG__RES_SHIFT 0
#define USB_DEVICE_D_CTRL_UDC_REG__RES_WIDTH 1
#define USB_DEVICE_D_CTRL_UDC_REG__RES_RESET_VAL 0
#define USB_DEVICE_D_CTRL_UDC_REG__RES_RMASK 0x1
#define USB_DEVICE_D_CTRL_UDC_REG__RES_MASK  0x1
#define USB_DEVICE_D_CTRL_UDC_REG__RES_FIELD 0,0

#define USB_DEVICE_D_CTRL_UDC_REG__RDE_SHIFT 2
#define USB_DEVICE_D_CTRL_UDC_REG__RDE_WIDTH 1
#define USB_DEVICE_D_CTRL_UDC_REG__RDE_RESET_VAL 0
#define USB_DEVICE_D_CTRL_UDC_REG__RDE_RMASK 0x1
#define USB_DEVICE_D_CTRL_UDC_REG__RDE_MASK  0x4
#define USB_DEVICE_D_CTRL_UDC_REG__RDE_FIELD 2,2

#define USB_DEVICE_D_CTRL_UDC_REG__TDE_SHIFT 3
#define USB_DEVICE_D_CTRL_UDC_REG__TDE_WIDTH 1
#define USB_DEVICE_D_CTRL_UDC_REG__TDE_RESET_VAL 0
#define USB_DEVICE_D_CTRL_UDC_REG__TDE_RMASK 0x1
#define USB_DEVICE_D_CTRL_UDC_REG__TDE_MASK  0x8
#define USB_DEVICE_D_CTRL_UDC_REG__TDE_FIELD 3,3

#define USB_DEVICE_D_CTRL_UDC_REG__DU_SHIFT 4
#define USB_DEVICE_D_CTRL_UDC_REG__DU_WIDTH 1
#define USB_DEVICE_D_CTRL_UDC_REG__DU_RESET_VAL 0
#define USB_DEVICE_D_CTRL_UDC_REG__DU_RMASK 0x1
#define USB_DEVICE_D_CTRL_UDC_REG__DU_MASK  0x10
#define USB_DEVICE_D_CTRL_UDC_REG__DU_FIELD 4,4

#define USB_DEVICE_D_CTRL_UDC_REG__BE_SHIFT 5
#define USB_DEVICE_D_CTRL_UDC_REG__BE_WIDTH 1
#define USB_DEVICE_D_CTRL_UDC_REG__BE_RESET_VAL 0
#define USB_DEVICE_D_CTRL_UDC_REG__BE_RMASK 0x1
#define USB_DEVICE_D_CTRL_UDC_REG__BE_MASK  0x20
#define USB_DEVICE_D_CTRL_UDC_REG__BE_FIELD 5,5

#define USB_DEVICE_D_CTRL_UDC_REG__BF_SHIFT 6
#define USB_DEVICE_D_CTRL_UDC_REG__BF_WIDTH 1
#define USB_DEVICE_D_CTRL_UDC_REG__BF_RESET_VAL 0
#define USB_DEVICE_D_CTRL_UDC_REG__BF_RMASK 0x1
#define USB_DEVICE_D_CTRL_UDC_REG__BF_MASK  0x40
#define USB_DEVICE_D_CTRL_UDC_REG__BF_FIELD 6,6

#define USB_DEVICE_D_CTRL_UDC_REG__THE_SHIFT 7
#define USB_DEVICE_D_CTRL_UDC_REG__THE_WIDTH 1
#define USB_DEVICE_D_CTRL_UDC_REG__THE_RESET_VAL 0
#define USB_DEVICE_D_CTRL_UDC_REG__THE_RMASK 0x1
#define USB_DEVICE_D_CTRL_UDC_REG__THE_MASK  0x80
#define USB_DEVICE_D_CTRL_UDC_REG__THE_FIELD 7,7

#define USB_DEVICE_D_CTRL_UDC_REG__BREN_SHIFT 8
#define USB_DEVICE_D_CTRL_UDC_REG__BREN_WIDTH 1
#define USB_DEVICE_D_CTRL_UDC_REG__BREN_RESET_VAL 0
#define USB_DEVICE_D_CTRL_UDC_REG__BREN_RMASK 0x1
#define USB_DEVICE_D_CTRL_UDC_REG__BREN_MASK  0x100
#define USB_DEVICE_D_CTRL_UDC_REG__BREN_FIELD 8,8

#define USB_DEVICE_D_CTRL_UDC_REG__MODE_SHIFT 9
#define USB_DEVICE_D_CTRL_UDC_REG__MODE_WIDTH 1
#define USB_DEVICE_D_CTRL_UDC_REG__MODE_RESET_VAL 0
#define USB_DEVICE_D_CTRL_UDC_REG__MODE_RMASK 0x1
#define USB_DEVICE_D_CTRL_UDC_REG__MODE_MASK  0x200
#define USB_DEVICE_D_CTRL_UDC_REG__MODE_FIELD 9,9

#define USB_DEVICE_D_CTRL_UDC_REG__SD_SHIFT 10
#define USB_DEVICE_D_CTRL_UDC_REG__SD_WIDTH 1
#define USB_DEVICE_D_CTRL_UDC_REG__SD_RESET_VAL 0
#define USB_DEVICE_D_CTRL_UDC_REG__SD_RMASK 0x1
#define USB_DEVICE_D_CTRL_UDC_REG__SD_MASK  0x400
#define USB_DEVICE_D_CTRL_UDC_REG__SD_FIELD 10,10

#define USB_DEVICE_D_CTRL_UDC_REG__SCALE_SHIFT 11
#define USB_DEVICE_D_CTRL_UDC_REG__SCALE_WIDTH 1
#define USB_DEVICE_D_CTRL_UDC_REG__SCALE_RESET_VAL 0
#define USB_DEVICE_D_CTRL_UDC_REG__SCALE_RMASK 0x1
#define USB_DEVICE_D_CTRL_UDC_REG__SCALE_MASK  0x800
#define USB_DEVICE_D_CTRL_UDC_REG__SCALE_FIELD 11,11

#define USB_DEVICE_D_CTRL_UDC_REG__DEVNAK_SHIFT 12
#define USB_DEVICE_D_CTRL_UDC_REG__DEVNAK_WIDTH 1
#define USB_DEVICE_D_CTRL_UDC_REG__DEVNAK_RESET_VAL 0
#define USB_DEVICE_D_CTRL_UDC_REG__DEVNAK_RMASK 0x1
#define USB_DEVICE_D_CTRL_UDC_REG__DEVNAK_MASK  0x1000
#define USB_DEVICE_D_CTRL_UDC_REG__DEVNAK_FIELD 12,12

#define USB_DEVICE_D_CTRL_UDC_REG__CSR_DONE_SHIFT 13
#define USB_DEVICE_D_CTRL_UDC_REG__CSR_DONE_WIDTH 1
#define USB_DEVICE_D_CTRL_UDC_REG__CSR_DONE_RESET_VAL 0
#define USB_DEVICE_D_CTRL_UDC_REG__CSR_DONE_RMASK 0x1
#define USB_DEVICE_D_CTRL_UDC_REG__CSR_DONE_MASK  0x2000
#define USB_DEVICE_D_CTRL_UDC_REG__CSR_DONE_FIELD 13,13

#define USB_DEVICE_D_CTRL_UDC_REG__SRX_FLUSH_SHIFT 14
#define USB_DEVICE_D_CTRL_UDC_REG__SRX_FLUSH_WIDTH 1
#define USB_DEVICE_D_CTRL_UDC_REG__SRX_FLUSH_RESET_VAL 0
#define USB_DEVICE_D_CTRL_UDC_REG__SRX_FLUSH_RMASK 0x1
#define USB_DEVICE_D_CTRL_UDC_REG__SRX_FLUSH_MASK  0x4000
#define USB_DEVICE_D_CTRL_UDC_REG__SRX_FLUSH_FIELD 14,14

#define USB_DEVICE_D_CTRL_UDC_REG__BRLEN_SHIFT 16
#define USB_DEVICE_D_CTRL_UDC_REG__BRLEN_WIDTH 8
#define USB_DEVICE_D_CTRL_UDC_REG__BRLEN_RESET_VAL 0
#define USB_DEVICE_D_CTRL_UDC_REG__BRLEN_RMASK 0xff
#define USB_DEVICE_D_CTRL_UDC_REG__BRLEN_MASK  0xff0000
#define USB_DEVICE_D_CTRL_UDC_REG__BRLEN_FIELD 16,23

#define USB_DEVICE_D_CTRL_UDC_REG__THLEN_SHIFT 24
#define USB_DEVICE_D_CTRL_UDC_REG__THLEN_WIDTH 8
#define USB_DEVICE_D_CTRL_UDC_REG__THLEN_RESET_VAL 0
#define USB_DEVICE_D_CTRL_UDC_REG__THLEN_RMASK 0xff
#define USB_DEVICE_D_CTRL_UDC_REG__THLEN_MASK  0xff000000
#define USB_DEVICE_D_CTRL_UDC_REG__THLEN_FIELD 24,31


/*
 * D_INTR_MSK_UDC_REG_ADDR.
 * The device interrupt mask can be set for system-level interrupts using
 * this register. Programming 1b1 in
 * the appropriate bit position in the Interrupt Mask register masks the
 * designated interrupt. Once
 * masked, an interrupt signal does not reach the application, nor does its
 * interrupt bit get set.
 */
#define USB_DEVICE_D_INTR_MSK_UDC_REG 0x10410

#define USB_DEVICE_D_INTR_MSK_UDC_REG__MASK_SHIFT 0
#define USB_DEVICE_D_INTR_MSK_UDC_REG__MASK_WIDTH 8
#define USB_DEVICE_D_INTR_MSK_UDC_REG__MASK_RESET_VAL 0
#define USB_DEVICE_D_INTR_MSK_UDC_REG__MASK_RMASK 0xff
#define USB_DEVICE_D_INTR_MSK_UDC_REG__MASK_MASK  0xff
#define USB_DEVICE_D_INTR_MSK_UDC_REG__MASK_FIELD 0,7

#define USB_DEVICE_D_INTR_MSK_UDC_REG__LPM_TKN_SHIFT 8
#define USB_DEVICE_D_INTR_MSK_UDC_REG__LPM_TKN_WIDTH 1
#define USB_DEVICE_D_INTR_MSK_UDC_REG__LPM_TKN_RESET_VAL 0
#define USB_DEVICE_D_INTR_MSK_UDC_REG__LPM_TKN_RMASK 0x1
#define USB_DEVICE_D_INTR_MSK_UDC_REG__LPM_TKN_MASK  0x100
#define USB_DEVICE_D_INTR_MSK_UDC_REG__LPM_TKN_FIELD 8,8

#define USB_DEVICE_D_INTR_MSK_UDC_REG__SLEEP_SHIFT 9
#define USB_DEVICE_D_INTR_MSK_UDC_REG__SLEEP_WIDTH 1
#define USB_DEVICE_D_INTR_MSK_UDC_REG__SLEEP_RESET_VAL 0
#define USB_DEVICE_D_INTR_MSK_UDC_REG__SLEEP_RMASK 0x1
#define USB_DEVICE_D_INTR_MSK_UDC_REG__SLEEP_MASK  0x200
#define USB_DEVICE_D_INTR_MSK_UDC_REG__SLEEP_FIELD 9,9

#define USB_DEVICE_D_INTR_MSK_UDC_REG__EARLY_SLEEP_SHIFT 10
#define USB_DEVICE_D_INTR_MSK_UDC_REG__EARLY_SLEEP_WIDTH 1
#define USB_DEVICE_D_INTR_MSK_UDC_REG__EARLY_SLEEP_RESET_VAL 0
#define USB_DEVICE_D_INTR_MSK_UDC_REG__EARLY_SLEEP_RMASK 0x1
#define USB_DEVICE_D_INTR_MSK_UDC_REG__EARLY_SLEEP_MASK  0x400
#define USB_DEVICE_D_INTR_MSK_UDC_REG__EARLY_SLEEP_FIELD 10,10


/*
 * D_INTR_UDC_REG_ADDR.
 * Device interrupts are set when there are system-level events. Interrupts
 * are used by the application to
 * make system-level decisions. After checking the register, the application
 * must clear the interrupt by
 * writing a 1'b1 to the correct bit.
 */
#define USB_DEVICE_D_INTR_UDC_REG 0x1040c

#define USB_DEVICE_D_INTR_UDC_REG__SC_SHIFT 0
#define USB_DEVICE_D_INTR_UDC_REG__SC_WIDTH 1
#define USB_DEVICE_D_INTR_UDC_REG__SC_RESET_VAL 0
#define USB_DEVICE_D_INTR_UDC_REG__SC_RMASK 0x1
#define USB_DEVICE_D_INTR_UDC_REG__SC_MASK  0x1
#define USB_DEVICE_D_INTR_UDC_REG__SC_FIELD 0,0

#define USB_DEVICE_D_INTR_UDC_REG__SI_SHIFT 1
#define USB_DEVICE_D_INTR_UDC_REG__SI_WIDTH 1
#define USB_DEVICE_D_INTR_UDC_REG__SI_RESET_VAL 0
#define USB_DEVICE_D_INTR_UDC_REG__SI_RMASK 0x1
#define USB_DEVICE_D_INTR_UDC_REG__SI_MASK  0x2
#define USB_DEVICE_D_INTR_UDC_REG__SI_FIELD 1,1

#define USB_DEVICE_D_INTR_UDC_REG__ES_SHIFT 2
#define USB_DEVICE_D_INTR_UDC_REG__ES_WIDTH 1
#define USB_DEVICE_D_INTR_UDC_REG__ES_RESET_VAL 0
#define USB_DEVICE_D_INTR_UDC_REG__ES_RMASK 0x1
#define USB_DEVICE_D_INTR_UDC_REG__ES_MASK  0x4
#define USB_DEVICE_D_INTR_UDC_REG__ES_FIELD 2,2

#define USB_DEVICE_D_INTR_UDC_REG__UR_SHIFT 3
#define USB_DEVICE_D_INTR_UDC_REG__UR_WIDTH 1
#define USB_DEVICE_D_INTR_UDC_REG__UR_RESET_VAL 0
#define USB_DEVICE_D_INTR_UDC_REG__UR_RMASK 0x1
#define USB_DEVICE_D_INTR_UDC_REG__UR_MASK  0x8
#define USB_DEVICE_D_INTR_UDC_REG__UR_FIELD 3,3

#define USB_DEVICE_D_INTR_UDC_REG__US_SHIFT 4
#define USB_DEVICE_D_INTR_UDC_REG__US_WIDTH 1
#define USB_DEVICE_D_INTR_UDC_REG__US_RESET_VAL 0
#define USB_DEVICE_D_INTR_UDC_REG__US_RMASK 0x1
#define USB_DEVICE_D_INTR_UDC_REG__US_MASK  0x10
#define USB_DEVICE_D_INTR_UDC_REG__US_FIELD 4,4

#define USB_DEVICE_D_INTR_UDC_REG__SOF_SHIFT 5
#define USB_DEVICE_D_INTR_UDC_REG__SOF_WIDTH 1
#define USB_DEVICE_D_INTR_UDC_REG__SOF_RESET_VAL 0
#define USB_DEVICE_D_INTR_UDC_REG__SOF_RMASK 0x1
#define USB_DEVICE_D_INTR_UDC_REG__SOF_MASK  0x20
#define USB_DEVICE_D_INTR_UDC_REG__SOF_FIELD 5,5

#define USB_DEVICE_D_INTR_UDC_REG__ENUM_COMP_SHIFT 6
#define USB_DEVICE_D_INTR_UDC_REG__ENUM_COMP_WIDTH 1
#define USB_DEVICE_D_INTR_UDC_REG__ENUM_COMP_RESET_VAL 0
#define USB_DEVICE_D_INTR_UDC_REG__ENUM_COMP_RMASK 0x1
#define USB_DEVICE_D_INTR_UDC_REG__ENUM_COMP_MASK  0x40
#define USB_DEVICE_D_INTR_UDC_REG__ENUM_COMP_FIELD 6,6

#define USB_DEVICE_D_INTR_UDC_REG__RMTWKP_STATE_INT_SHIFT 7
#define USB_DEVICE_D_INTR_UDC_REG__RMTWKP_STATE_INT_WIDTH 1
#define USB_DEVICE_D_INTR_UDC_REG__RMTWKP_STATE_INT_RESET_VAL 0
#define USB_DEVICE_D_INTR_UDC_REG__RMTWKP_STATE_INT_RMASK 0x1
#define USB_DEVICE_D_INTR_UDC_REG__RMTWKP_STATE_INT_MASK  0x80
#define USB_DEVICE_D_INTR_UDC_REG__RMTWKP_STATE_INT_FIELD 7,7

#define USB_DEVICE_D_INTR_UDC_REG__LPM_TKN_SHIFT 8
#define USB_DEVICE_D_INTR_UDC_REG__LPM_TKN_WIDTH 1
#define USB_DEVICE_D_INTR_UDC_REG__LPM_TKN_RESET_VAL 0
#define USB_DEVICE_D_INTR_UDC_REG__LPM_TKN_RMASK 0x1
#define USB_DEVICE_D_INTR_UDC_REG__LPM_TKN_MASK  0x100
#define USB_DEVICE_D_INTR_UDC_REG__LPM_TKN_FIELD 8,8

#define USB_DEVICE_D_INTR_UDC_REG__SLEEP_SHIFT 9
#define USB_DEVICE_D_INTR_UDC_REG__SLEEP_WIDTH 1
#define USB_DEVICE_D_INTR_UDC_REG__SLEEP_RESET_VAL 0
#define USB_DEVICE_D_INTR_UDC_REG__SLEEP_RMASK 0x1
#define USB_DEVICE_D_INTR_UDC_REG__SLEEP_MASK  0x200
#define USB_DEVICE_D_INTR_UDC_REG__SLEEP_FIELD 9,9

#define USB_DEVICE_D_INTR_UDC_REG__EARLY_SLEEP_SHIFT 10
#define USB_DEVICE_D_INTR_UDC_REG__EARLY_SLEEP_WIDTH 1
#define USB_DEVICE_D_INTR_UDC_REG__EARLY_SLEEP_RESET_VAL 0
#define USB_DEVICE_D_INTR_UDC_REG__EARLY_SLEEP_RMASK 0x1
#define USB_DEVICE_D_INTR_UDC_REG__EARLY_SLEEP_MASK  0x400
#define USB_DEVICE_D_INTR_UDC_REG__EARLY_SLEEP_FIELD 10,10


/*
 * D_STS_UDC_REG_ADDR.
 * This register reflects status information needed to service some of the
 * interrupts. This is a read-only
 * register.
 */
#define USB_DEVICE_D_STS_UDC_REG 0x10408

#define USB_DEVICE_D_STS_UDC_REG__CFG_SHIFT 0
#define USB_DEVICE_D_STS_UDC_REG__CFG_WIDTH 4
#define USB_DEVICE_D_STS_UDC_REG__CFG_RESET_VAL 0
#define USB_DEVICE_D_STS_UDC_REG__CFG_RMASK 0xf
#define USB_DEVICE_D_STS_UDC_REG__CFG_MASK  0xf
#define USB_DEVICE_D_STS_UDC_REG__CFG_FIELD 0,3

#define USB_DEVICE_D_STS_UDC_REG__INTF_SHIFT 4
#define USB_DEVICE_D_STS_UDC_REG__INTF_WIDTH 4
#define USB_DEVICE_D_STS_UDC_REG__INTF_RESET_VAL 0
#define USB_DEVICE_D_STS_UDC_REG__INTF_RMASK 0xf
#define USB_DEVICE_D_STS_UDC_REG__INTF_MASK  0xf0
#define USB_DEVICE_D_STS_UDC_REG__INTF_FIELD 4,7

#define USB_DEVICE_D_STS_UDC_REG__ALT_SHIFT 8
#define USB_DEVICE_D_STS_UDC_REG__ALT_WIDTH 4
#define USB_DEVICE_D_STS_UDC_REG__ALT_RESET_VAL 0
#define USB_DEVICE_D_STS_UDC_REG__ALT_RMASK 0xf
#define USB_DEVICE_D_STS_UDC_REG__ALT_MASK  0xf00
#define USB_DEVICE_D_STS_UDC_REG__ALT_FIELD 8,11

#define USB_DEVICE_D_STS_UDC_REG__SUSP_SHIFT 12
#define USB_DEVICE_D_STS_UDC_REG__SUSP_WIDTH 1
#define USB_DEVICE_D_STS_UDC_REG__SUSP_RESET_VAL 0
#define USB_DEVICE_D_STS_UDC_REG__SUSP_RMASK 0x1
#define USB_DEVICE_D_STS_UDC_REG__SUSP_MASK  0x1000
#define USB_DEVICE_D_STS_UDC_REG__SUSP_FIELD 12,12

#define USB_DEVICE_D_STS_UDC_REG__ENUM_SPD_SHIFT 13
#define USB_DEVICE_D_STS_UDC_REG__ENUM_SPD_WIDTH 2
#define USB_DEVICE_D_STS_UDC_REG__ENUM_SPD_RESET_VAL 0
#define USB_DEVICE_D_STS_UDC_REG__ENUM_SPD_RMASK 0x3
#define USB_DEVICE_D_STS_UDC_REG__ENUM_SPD_MASK  0x6000
#define USB_DEVICE_D_STS_UDC_REG__ENUM_SPD_FIELD 13,14

#define USB_DEVICE_D_STS_UDC_REG__RXFIFO_EMPTY_SHIFT 15
#define USB_DEVICE_D_STS_UDC_REG__RXFIFO_EMPTY_WIDTH 1
#define USB_DEVICE_D_STS_UDC_REG__RXFIFO_EMPTY_RESET_VAL 0
#define USB_DEVICE_D_STS_UDC_REG__RXFIFO_EMPTY_RMASK 0x1
#define USB_DEVICE_D_STS_UDC_REG__RXFIFO_EMPTY_MASK  0x8000
#define USB_DEVICE_D_STS_UDC_REG__RXFIFO_EMPTY_FIELD 15,15

#define USB_DEVICE_D_STS_UDC_REG__PHY_ERROR_SHIFT 16
#define USB_DEVICE_D_STS_UDC_REG__PHY_ERROR_WIDTH 1
#define USB_DEVICE_D_STS_UDC_REG__PHY_ERROR_RESET_VAL 0
#define USB_DEVICE_D_STS_UDC_REG__PHY_ERROR_RMASK 0x1
#define USB_DEVICE_D_STS_UDC_REG__PHY_ERROR_MASK  0x10000
#define USB_DEVICE_D_STS_UDC_REG__PHY_ERROR_FIELD 16,16

#define USB_DEVICE_D_STS_UDC_REG__RMTWKP_STATE_SHIFT 17
#define USB_DEVICE_D_STS_UDC_REG__RMTWKP_STATE_WIDTH 1
#define USB_DEVICE_D_STS_UDC_REG__RMTWKP_STATE_RESET_VAL 0
#define USB_DEVICE_D_STS_UDC_REG__RMTWKP_STATE_RMASK 0x1
#define USB_DEVICE_D_STS_UDC_REG__RMTWKP_STATE_MASK  0x20000
#define USB_DEVICE_D_STS_UDC_REG__RMTWKP_STATE_FIELD 17,17

#define USB_DEVICE_D_STS_UDC_REG__TS_SHIFT 18
#define USB_DEVICE_D_STS_UDC_REG__TS_WIDTH 14
#define USB_DEVICE_D_STS_UDC_REG__TS_RESET_VAL 0
#define USB_DEVICE_D_STS_UDC_REG__TS_RMASK 0x3fff
#define USB_DEVICE_D_STS_UDC_REG__TS_MASK  0xfffc0000
#define USB_DEVICE_D_STS_UDC_REG__TS_FIELD 18,31


/*
 * EP0_IN_BUFSIZE_UDC_REG.
 * This register is used to program the endpoints as required by the
 * application.
 */
#define USB_DEVICE_EP0_IN_BUFSIZE_UDC_REG 0x10008

#define USB_DEVICE_EP0_IN_BUFSIZE_UDC_REG__BUFF_SIZE_SHIFT 0
#define USB_DEVICE_EP0_IN_BUFSIZE_UDC_REG__BUFF_SIZE_WIDTH 16
#define USB_DEVICE_EP0_IN_BUFSIZE_UDC_REG__BUFF_SIZE_RESET_VAL 0
#define USB_DEVICE_EP0_IN_BUFSIZE_UDC_REG__BUFF_SIZE_RMASK 0xffff
#define USB_DEVICE_EP0_IN_BUFSIZE_UDC_REG__BUFF_SIZE_MASK  0xffff
#define USB_DEVICE_EP0_IN_BUFSIZE_UDC_REG__BUFF_SIZE_FIELD 0,15

#define USB_DEVICE_EP0_IN_BUFSIZE_UDC_REG__ISO_IN_PID_SHIFT 16
#define USB_DEVICE_EP0_IN_BUFSIZE_UDC_REG__ISO_IN_PID_WIDTH 2
#define USB_DEVICE_EP0_IN_BUFSIZE_UDC_REG__ISO_IN_PID_RESET_VAL 0
#define USB_DEVICE_EP0_IN_BUFSIZE_UDC_REG__ISO_IN_PID_RMASK 0x3
#define USB_DEVICE_EP0_IN_BUFSIZE_UDC_REG__ISO_IN_PID_MASK  0x30000
#define USB_DEVICE_EP0_IN_BUFSIZE_UDC_REG__ISO_IN_PID_FIELD 16,17


/*
 * EP0_IN_CTRL_UDC_REG.
 * This register is used to program the endpoints as required by the
 * application.
 */
#define USB_DEVICE_EP0_IN_CTRL_UDC_REG 0x10000

#define USB_DEVICE_EP0_IN_CTRL_UDC_REG__S_SHIFT 0
#define USB_DEVICE_EP0_IN_CTRL_UDC_REG__S_WIDTH 1
#define USB_DEVICE_EP0_IN_CTRL_UDC_REG__S_RESET_VAL 0
#define USB_DEVICE_EP0_IN_CTRL_UDC_REG__S_RMASK 0x1
#define USB_DEVICE_EP0_IN_CTRL_UDC_REG__S_MASK  0x1
#define USB_DEVICE_EP0_IN_CTRL_UDC_REG__S_FIELD 0,0

#define USB_DEVICE_EP0_IN_CTRL_UDC_REG__F_SHIFT 1
#define USB_DEVICE_EP0_IN_CTRL_UDC_REG__F_WIDTH 1
#define USB_DEVICE_EP0_IN_CTRL_UDC_REG__F_RESET_VAL 0
#define USB_DEVICE_EP0_IN_CTRL_UDC_REG__F_RMASK 0x1
#define USB_DEVICE_EP0_IN_CTRL_UDC_REG__F_MASK  0x2
#define USB_DEVICE_EP0_IN_CTRL_UDC_REG__F_FIELD 1,1

#define USB_DEVICE_EP0_IN_CTRL_UDC_REG__SN_SHIFT 2
#define USB_DEVICE_EP0_IN_CTRL_UDC_REG__SN_WIDTH 1
#define USB_DEVICE_EP0_IN_CTRL_UDC_REG__SN_RESET_VAL 0
#define USB_DEVICE_EP0_IN_CTRL_UDC_REG__SN_RMASK 0x1
#define USB_DEVICE_EP0_IN_CTRL_UDC_REG__SN_MASK  0x4
#define USB_DEVICE_EP0_IN_CTRL_UDC_REG__SN_FIELD 2,2

#define USB_DEVICE_EP0_IN_CTRL_UDC_REG__P_SHIFT 3
#define USB_DEVICE_EP0_IN_CTRL_UDC_REG__P_WIDTH 1
#define USB_DEVICE_EP0_IN_CTRL_UDC_REG__P_RESET_VAL 0
#define USB_DEVICE_EP0_IN_CTRL_UDC_REG__P_RMASK 0x1
#define USB_DEVICE_EP0_IN_CTRL_UDC_REG__P_MASK  0x8
#define USB_DEVICE_EP0_IN_CTRL_UDC_REG__P_FIELD 3,3

#define USB_DEVICE_EP0_IN_CTRL_UDC_REG__ET_SHIFT 4
#define USB_DEVICE_EP0_IN_CTRL_UDC_REG__ET_WIDTH 2
#define USB_DEVICE_EP0_IN_CTRL_UDC_REG__ET_RESET_VAL 0
#define USB_DEVICE_EP0_IN_CTRL_UDC_REG__ET_RMASK 0x3
#define USB_DEVICE_EP0_IN_CTRL_UDC_REG__ET_MASK  0x30
#define USB_DEVICE_EP0_IN_CTRL_UDC_REG__ET_FIELD 4,5

#define USB_DEVICE_EP0_IN_CTRL_UDC_REG__NAK_SHIFT 6
#define USB_DEVICE_EP0_IN_CTRL_UDC_REG__NAK_WIDTH 1
#define USB_DEVICE_EP0_IN_CTRL_UDC_REG__NAK_RESET_VAL 0
#define USB_DEVICE_EP0_IN_CTRL_UDC_REG__NAK_RMASK 0x1
#define USB_DEVICE_EP0_IN_CTRL_UDC_REG__NAK_MASK  0x40
#define USB_DEVICE_EP0_IN_CTRL_UDC_REG__NAK_FIELD 6,6

#define USB_DEVICE_EP0_IN_CTRL_UDC_REG__SNAK_SHIFT 7
#define USB_DEVICE_EP0_IN_CTRL_UDC_REG__SNAK_WIDTH 1
#define USB_DEVICE_EP0_IN_CTRL_UDC_REG__SNAK_RESET_VAL 0
#define USB_DEVICE_EP0_IN_CTRL_UDC_REG__SNAK_RMASK 0x1
#define USB_DEVICE_EP0_IN_CTRL_UDC_REG__SNAK_MASK  0x80
#define USB_DEVICE_EP0_IN_CTRL_UDC_REG__SNAK_FIELD 7,7

#define USB_DEVICE_EP0_IN_CTRL_UDC_REG__CNAK_SHIFT 8
#define USB_DEVICE_EP0_IN_CTRL_UDC_REG__CNAK_WIDTH 1
#define USB_DEVICE_EP0_IN_CTRL_UDC_REG__CNAK_RESET_VAL 0
#define USB_DEVICE_EP0_IN_CTRL_UDC_REG__CNAK_RMASK 0x1
#define USB_DEVICE_EP0_IN_CTRL_UDC_REG__CNAK_MASK  0x100
#define USB_DEVICE_EP0_IN_CTRL_UDC_REG__CNAK_FIELD 8,8

#define USB_DEVICE_EP0_IN_CTRL_UDC_REG__RRDY_SHIFT 9
#define USB_DEVICE_EP0_IN_CTRL_UDC_REG__RRDY_WIDTH 1
#define USB_DEVICE_EP0_IN_CTRL_UDC_REG__RRDY_RESET_VAL 0
#define USB_DEVICE_EP0_IN_CTRL_UDC_REG__RRDY_RMASK 0x1
#define USB_DEVICE_EP0_IN_CTRL_UDC_REG__RRDY_MASK  0x200
#define USB_DEVICE_EP0_IN_CTRL_UDC_REG__RRDY_FIELD 9,9

#define USB_DEVICE_EP0_IN_CTRL_UDC_REG__SEND_NULL_SHIFT 10
#define USB_DEVICE_EP0_IN_CTRL_UDC_REG__SEND_NULL_WIDTH 1
#define USB_DEVICE_EP0_IN_CTRL_UDC_REG__SEND_NULL_RESET_VAL 0
#define USB_DEVICE_EP0_IN_CTRL_UDC_REG__SEND_NULL_RMASK 0x1
#define USB_DEVICE_EP0_IN_CTRL_UDC_REG__SEND_NULL_MASK  0x400
#define USB_DEVICE_EP0_IN_CTRL_UDC_REG__SEND_NULL_FIELD 10,10

#define USB_DEVICE_EP0_IN_CTRL_UDC_REG__CLOSE_DESC_SHIFT 11
#define USB_DEVICE_EP0_IN_CTRL_UDC_REG__CLOSE_DESC_WIDTH 1
#define USB_DEVICE_EP0_IN_CTRL_UDC_REG__CLOSE_DESC_RESET_VAL 0
#define USB_DEVICE_EP0_IN_CTRL_UDC_REG__CLOSE_DESC_RMASK 0x1
#define USB_DEVICE_EP0_IN_CTRL_UDC_REG__CLOSE_DESC_MASK  0x800
#define USB_DEVICE_EP0_IN_CTRL_UDC_REG__CLOSE_DESC_FIELD 11,11

#define USB_DEVICE_EP0_IN_CTRL_UDC_REG__MRX_FLUSH_SHIFT 12
#define USB_DEVICE_EP0_IN_CTRL_UDC_REG__MRX_FLUSH_WIDTH 1
#define USB_DEVICE_EP0_IN_CTRL_UDC_REG__MRX_FLUSH_RESET_VAL 0
#define USB_DEVICE_EP0_IN_CTRL_UDC_REG__MRX_FLUSH_RMASK 0x1
#define USB_DEVICE_EP0_IN_CTRL_UDC_REG__MRX_FLUSH_MASK  0x1000
#define USB_DEVICE_EP0_IN_CTRL_UDC_REG__MRX_FLUSH_FIELD 12,12


/*
 * EP0_IN_MPKT_SZ_REG.
 * This register is used to program the endpoints as required by the
 * application.
 */
#define USB_DEVICE_EP0_IN_MPKT_SZ_REG 0x1000c

#define USB_DEVICE_EP0_IN_MPKT_SZ_REG__MAX_PKT_SIZE_SHIFT 0
#define USB_DEVICE_EP0_IN_MPKT_SZ_REG__MAX_PKT_SIZE_WIDTH 16
#define USB_DEVICE_EP0_IN_MPKT_SZ_REG__MAX_PKT_SIZE_RESET_VAL 0
#define USB_DEVICE_EP0_IN_MPKT_SZ_REG__MAX_PKT_SIZE_RMASK 0xffff
#define USB_DEVICE_EP0_IN_MPKT_SZ_REG__MAX_PKT_SIZE_MASK  0xffff
#define USB_DEVICE_EP0_IN_MPKT_SZ_REG__MAX_PKT_SIZE_FIELD 0,15


/*
 * EP0_IN_STS_UDC_REG.
 * The Endpoint Status register indicates the endpoint status.
 */
#define USB_DEVICE_EP0_IN_STS_UDC_REG 0x10004

#define USB_DEVICE_EP0_IN_STS_UDC_REG__OUT_RCV_SHIFT 4
#define USB_DEVICE_EP0_IN_STS_UDC_REG__OUT_RCV_WIDTH 2
#define USB_DEVICE_EP0_IN_STS_UDC_REG__OUT_RCV_RESET_VAL 0
#define USB_DEVICE_EP0_IN_STS_UDC_REG__OUT_RCV_RMASK 0x3
#define USB_DEVICE_EP0_IN_STS_UDC_REG__OUT_RCV_MASK  0x30
#define USB_DEVICE_EP0_IN_STS_UDC_REG__OUT_RCV_FIELD 4,5

#define USB_DEVICE_EP0_IN_STS_UDC_REG__IN_RCV_SHIFT 6
#define USB_DEVICE_EP0_IN_STS_UDC_REG__IN_RCV_WIDTH 1
#define USB_DEVICE_EP0_IN_STS_UDC_REG__IN_RCV_RESET_VAL 0
#define USB_DEVICE_EP0_IN_STS_UDC_REG__IN_RCV_RMASK 0x1
#define USB_DEVICE_EP0_IN_STS_UDC_REG__IN_RCV_MASK  0x40
#define USB_DEVICE_EP0_IN_STS_UDC_REG__IN_RCV_FIELD 6,6

#define USB_DEVICE_EP0_IN_STS_UDC_REG__BNA_SHIFT 7
#define USB_DEVICE_EP0_IN_STS_UDC_REG__BNA_WIDTH 1
#define USB_DEVICE_EP0_IN_STS_UDC_REG__BNA_RESET_VAL 0
#define USB_DEVICE_EP0_IN_STS_UDC_REG__BNA_RMASK 0x1
#define USB_DEVICE_EP0_IN_STS_UDC_REG__BNA_MASK  0x80
#define USB_DEVICE_EP0_IN_STS_UDC_REG__BNA_FIELD 7,7

#define USB_DEVICE_EP0_IN_STS_UDC_REG__MRXFIFO_EMPTY_SHIFT 8
#define USB_DEVICE_EP0_IN_STS_UDC_REG__MRXFIFO_EMPTY_WIDTH 1
#define USB_DEVICE_EP0_IN_STS_UDC_REG__MRXFIFO_EMPTY_RESET_VAL 0
#define USB_DEVICE_EP0_IN_STS_UDC_REG__MRXFIFO_EMPTY_RMASK 0x1
#define USB_DEVICE_EP0_IN_STS_UDC_REG__MRXFIFO_EMPTY_MASK  0x100
#define USB_DEVICE_EP0_IN_STS_UDC_REG__MRXFIFO_EMPTY_FIELD 8,8

#define USB_DEVICE_EP0_IN_STS_UDC_REG__HE_SHIFT 9
#define USB_DEVICE_EP0_IN_STS_UDC_REG__HE_WIDTH 1
#define USB_DEVICE_EP0_IN_STS_UDC_REG__HE_RESET_VAL 0
#define USB_DEVICE_EP0_IN_STS_UDC_REG__HE_RMASK 0x1
#define USB_DEVICE_EP0_IN_STS_UDC_REG__HE_MASK  0x200
#define USB_DEVICE_EP0_IN_STS_UDC_REG__HE_FIELD 9,9

#define USB_DEVICE_EP0_IN_STS_UDC_REG__TDC_SHIFT 10
#define USB_DEVICE_EP0_IN_STS_UDC_REG__TDC_WIDTH 1
#define USB_DEVICE_EP0_IN_STS_UDC_REG__TDC_RESET_VAL 0
#define USB_DEVICE_EP0_IN_STS_UDC_REG__TDC_RMASK 0x1
#define USB_DEVICE_EP0_IN_STS_UDC_REG__TDC_MASK  0x400
#define USB_DEVICE_EP0_IN_STS_UDC_REG__TDC_FIELD 10,10

#define USB_DEVICE_EP0_IN_STS_UDC_REG__RX_PKT_SIZE_SHIFT 11
#define USB_DEVICE_EP0_IN_STS_UDC_REG__RX_PKT_SIZE_WIDTH 12
#define USB_DEVICE_EP0_IN_STS_UDC_REG__RX_PKT_SIZE_RESET_VAL 0
#define USB_DEVICE_EP0_IN_STS_UDC_REG__RX_PKT_SIZE_RMASK 0xfff
#define USB_DEVICE_EP0_IN_STS_UDC_REG__RX_PKT_SIZE_MASK  0x7ff800
#define USB_DEVICE_EP0_IN_STS_UDC_REG__RX_PKT_SIZE_FIELD 11,22

#define USB_DEVICE_EP0_IN_STS_UDC_REG__ISO_IN_DONE_SHIFT 23
#define USB_DEVICE_EP0_IN_STS_UDC_REG__ISO_IN_DONE_WIDTH 1
#define USB_DEVICE_EP0_IN_STS_UDC_REG__ISO_IN_DONE_RESET_VAL 0
#define USB_DEVICE_EP0_IN_STS_UDC_REG__ISO_IN_DONE_RMASK 0x1
#define USB_DEVICE_EP0_IN_STS_UDC_REG__ISO_IN_DONE_MASK  0x800000
#define USB_DEVICE_EP0_IN_STS_UDC_REG__ISO_IN_DONE_FIELD 23,23

#define USB_DEVICE_EP0_IN_STS_UDC_REG__TXEMPTY_SHIFT 24
#define USB_DEVICE_EP0_IN_STS_UDC_REG__TXEMPTY_WIDTH 1
#define USB_DEVICE_EP0_IN_STS_UDC_REG__TXEMPTY_RESET_VAL 0
#define USB_DEVICE_EP0_IN_STS_UDC_REG__TXEMPTY_RMASK 0x1
#define USB_DEVICE_EP0_IN_STS_UDC_REG__TXEMPTY_MASK  0x1000000
#define USB_DEVICE_EP0_IN_STS_UDC_REG__TXEMPTY_FIELD 24,24

#define USB_DEVICE_EP0_IN_STS_UDC_REG__RCS_SHIFT 25
#define USB_DEVICE_EP0_IN_STS_UDC_REG__RCS_WIDTH 1
#define USB_DEVICE_EP0_IN_STS_UDC_REG__RCS_RESET_VAL 0
#define USB_DEVICE_EP0_IN_STS_UDC_REG__RCS_RMASK 0x1
#define USB_DEVICE_EP0_IN_STS_UDC_REG__RCS_MASK  0x2000000
#define USB_DEVICE_EP0_IN_STS_UDC_REG__RCS_FIELD 25,25

#define USB_DEVICE_EP0_IN_STS_UDC_REG__RSS_SHIFT 26
#define USB_DEVICE_EP0_IN_STS_UDC_REG__RSS_WIDTH 1
#define USB_DEVICE_EP0_IN_STS_UDC_REG__RSS_RESET_VAL 0
#define USB_DEVICE_EP0_IN_STS_UDC_REG__RSS_RMASK 0x1
#define USB_DEVICE_EP0_IN_STS_UDC_REG__RSS_MASK  0x4000000
#define USB_DEVICE_EP0_IN_STS_UDC_REG__RSS_FIELD 26,26

#define USB_DEVICE_EP0_IN_STS_UDC_REG__XFERDONE_TXEMPTY_SHIFT 27
#define USB_DEVICE_EP0_IN_STS_UDC_REG__XFERDONE_TXEMPTY_WIDTH 1
#define USB_DEVICE_EP0_IN_STS_UDC_REG__XFERDONE_TXEMPTY_RESET_VAL 0
#define USB_DEVICE_EP0_IN_STS_UDC_REG__XFERDONE_TXEMPTY_RMASK 0x1
#define USB_DEVICE_EP0_IN_STS_UDC_REG__XFERDONE_TXEMPTY_MASK  0x8000000
#define USB_DEVICE_EP0_IN_STS_UDC_REG__XFERDONE_TXEMPTY_FIELD 27,27

#define USB_DEVICE_EP0_IN_STS_UDC_REG__CDC_Clear_SHIFT 28
#define USB_DEVICE_EP0_IN_STS_UDC_REG__CDC_Clear_WIDTH 1
#define USB_DEVICE_EP0_IN_STS_UDC_REG__CDC_Clear_RESET_VAL 0
#define USB_DEVICE_EP0_IN_STS_UDC_REG__CDC_Clear_RMASK 0x1
#define USB_DEVICE_EP0_IN_STS_UDC_REG__CDC_Clear_MASK  0x10000000
#define USB_DEVICE_EP0_IN_STS_UDC_REG__CDC_Clear_FIELD 28,28


/*
 * EP0_OUT_BUFSIZE_UDC_REG.
 * This register is used to program the endpoints as required by the
 * application.
 */
#define USB_DEVICE_EP0_OUT_BUFSIZE_UDC_REG 0x1020c

#define USB_DEVICE_EP0_OUT_BUFSIZE_UDC_REG__EP0_OUT_BUFSIZE_UDC_REG_SHIFT 0
#define USB_DEVICE_EP0_OUT_BUFSIZE_UDC_REG__EP0_OUT_BUFSIZE_UDC_REG_WIDTH 32
#define USB_DEVICE_EP0_OUT_BUFSIZE_UDC_REG__EP0_OUT_BUFSIZE_UDC_REG_RESET_VAL 0
#define USB_DEVICE_EP0_OUT_BUFSIZE_UDC_REG__EP0_OUT_BUFSIZE_UDC_REG_RMASK 0xffffffff
#define USB_DEVICE_EP0_OUT_BUFSIZE_UDC_REG__EP0_OUT_BUFSIZE_UDC_REG_MASK  0xffffffff
#define USB_DEVICE_EP0_OUT_BUFSIZE_UDC_REG__EP0_OUT_BUFSIZE_UDC_REG_FIELD 0,31


/*
 * EP0_OUT_CTRL_UDC_REG.
 * This register is used to program the endpoints as required by the
 * application.
 */
#define USB_DEVICE_EP0_OUT_CTRL_UDC_REG 0x10200

#define USB_DEVICE_EP0_OUT_CTRL_UDC_REG__EP0_OUT_CTRL_UDC_REG_SHIFT 0
#define USB_DEVICE_EP0_OUT_CTRL_UDC_REG__EP0_OUT_CTRL_UDC_REG_WIDTH 32
#define USB_DEVICE_EP0_OUT_CTRL_UDC_REG__EP0_OUT_CTRL_UDC_REG_RESET_VAL 0
#define USB_DEVICE_EP0_OUT_CTRL_UDC_REG__EP0_OUT_CTRL_UDC_REG_RMASK 0xffffffff
#define USB_DEVICE_EP0_OUT_CTRL_UDC_REG__EP0_OUT_CTRL_UDC_REG_MASK  0xffffffff
#define USB_DEVICE_EP0_OUT_CTRL_UDC_REG__EP0_OUT_CTRL_UDC_REG_FIELD 0,31


/*
 * EP0_OUT_STS_UDC_REG.
 * The Endpoint Status register indicates the endpoint status.
 */
#define USB_DEVICE_EP0_OUT_STS_UDC_REG 0x10204

#define USB_DEVICE_EP0_OUT_STS_UDC_REG__EP0_OUT_STS_UDC_REG_SHIFT 0
#define USB_DEVICE_EP0_OUT_STS_UDC_REG__EP0_OUT_STS_UDC_REG_WIDTH 32
#define USB_DEVICE_EP0_OUT_STS_UDC_REG__EP0_OUT_STS_UDC_REG_RESET_VAL 0
#define USB_DEVICE_EP0_OUT_STS_UDC_REG__EP0_OUT_STS_UDC_REG_RMASK 0xffffffff
#define USB_DEVICE_EP0_OUT_STS_UDC_REG__EP0_OUT_STS_UDC_REG_MASK  0xffffffff
#define USB_DEVICE_EP0_OUT_STS_UDC_REG__EP0_OUT_STS_UDC_REG_FIELD 0,31


/*
 * EP0_RD_CFRM_UDC_REG_ADDR.
 * Writing to register for zero-length OUT data.
 */
#define USB_DEVICE_EP0_RD_CFRM_UDC_REG 0x1021c

#define USB_DEVICE_EP0_RD_CFRM_UDC_REG__EP0_RD_CFRM_UDC_REG_SHIFT 0
#define USB_DEVICE_EP0_RD_CFRM_UDC_REG__EP0_RD_CFRM_UDC_REG_WIDTH 32
#define USB_DEVICE_EP0_RD_CFRM_UDC_REG__EP0_RD_CFRM_UDC_REG_RESET_VAL 0
#define USB_DEVICE_EP0_RD_CFRM_UDC_REG__EP0_RD_CFRM_UDC_REG_RMASK 0xffffffff
#define USB_DEVICE_EP0_RD_CFRM_UDC_REG__EP0_RD_CFRM_UDC_REG_MASK  0xffffffff
#define USB_DEVICE_EP0_RD_CFRM_UDC_REG__EP0_RD_CFRM_UDC_REG_FIELD 0,31


/*
 * EP0_WR_CFRM_UDC_REG_ADDR.
 * Writing to register confirms the IN data into the TxFIFO.
 */
#define USB_DEVICE_EP0_WR_CFRM_UDC_REG 0x1001c

#define USB_DEVICE_EP0_WR_CFRM_UDC_REG__EP0_WR_CFRM_UDC_REG_SHIFT 0
#define USB_DEVICE_EP0_WR_CFRM_UDC_REG__EP0_WR_CFRM_UDC_REG_WIDTH 32
#define USB_DEVICE_EP0_WR_CFRM_UDC_REG__EP0_WR_CFRM_UDC_REG_RESET_VAL 0
#define USB_DEVICE_EP0_WR_CFRM_UDC_REG__EP0_WR_CFRM_UDC_REG_RMASK 0xffffffff
#define USB_DEVICE_EP0_WR_CFRM_UDC_REG__EP0_WR_CFRM_UDC_REG_MASK  0xffffffff
#define USB_DEVICE_EP0_WR_CFRM_UDC_REG__EP0_WR_CFRM_UDC_REG_FIELD 0,31


/*
 * EP1_IN_BUFSIZE_UDC_REG.
 * This register is used to program the endpoints as required by the
 * application.
 */
#define USB_DEVICE_EP1_IN_BUFSIZE_UDC_REG 0x10028

#define USB_DEVICE_EP1_IN_BUFSIZE_UDC_REG__EP1_IN_BUFSIZE_UDC_REG_SHIFT 0
#define USB_DEVICE_EP1_IN_BUFSIZE_UDC_REG__EP1_IN_BUFSIZE_UDC_REG_WIDTH 32
#define USB_DEVICE_EP1_IN_BUFSIZE_UDC_REG__EP1_IN_BUFSIZE_UDC_REG_RESET_VAL 0
#define USB_DEVICE_EP1_IN_BUFSIZE_UDC_REG__EP1_IN_BUFSIZE_UDC_REG_RMASK 0xffffffff
#define USB_DEVICE_EP1_IN_BUFSIZE_UDC_REG__EP1_IN_BUFSIZE_UDC_REG_MASK  0xffffffff
#define USB_DEVICE_EP1_IN_BUFSIZE_UDC_REG__EP1_IN_BUFSIZE_UDC_REG_FIELD 0,31


/*
 * EP1_IN_CTRL_UDC_REG.
 * This register is used to program the endpoints as required by the
 * application.
 */
#define USB_DEVICE_EP1_IN_CTRL_UDC_REG 0x10020

#define USB_DEVICE_EP1_IN_CTRL_UDC_REG__EP1_IN_CTRL_UDC_REG_SHIFT 0
#define USB_DEVICE_EP1_IN_CTRL_UDC_REG__EP1_IN_CTRL_UDC_REG_WIDTH 32
#define USB_DEVICE_EP1_IN_CTRL_UDC_REG__EP1_IN_CTRL_UDC_REG_RESET_VAL 0
#define USB_DEVICE_EP1_IN_CTRL_UDC_REG__EP1_IN_CTRL_UDC_REG_RMASK 0xffffffff
#define USB_DEVICE_EP1_IN_CTRL_UDC_REG__EP1_IN_CTRL_UDC_REG_MASK  0xffffffff
#define USB_DEVICE_EP1_IN_CTRL_UDC_REG__EP1_IN_CTRL_UDC_REG_FIELD 0,31


/*
 * EP1_IN_MPKT_SZ_REG.
 * This register is used to program the endpoints as required by the
 * application.
 */
#define USB_DEVICE_EP1_IN_MPKT_SZ_REG 0x1002c

#define USB_DEVICE_EP1_IN_MPKT_SZ_REG__EP1_IN_MPKT_SZ_REG_SHIFT 0
#define USB_DEVICE_EP1_IN_MPKT_SZ_REG__EP1_IN_MPKT_SZ_REG_WIDTH 16
#define USB_DEVICE_EP1_IN_MPKT_SZ_REG__EP1_IN_MPKT_SZ_REG_RESET_VAL 0
#define USB_DEVICE_EP1_IN_MPKT_SZ_REG__EP1_IN_MPKT_SZ_REG_RMASK 0xffff
#define USB_DEVICE_EP1_IN_MPKT_SZ_REG__EP1_IN_MPKT_SZ_REG_MASK  0xffff
#define USB_DEVICE_EP1_IN_MPKT_SZ_REG__EP1_IN_MPKT_SZ_REG_FIELD 0,15


/*
 * EP1_IN_STS_UDC_REG.
 * The Endpoint Status register indicates the endpoint status.
 */
#define USB_DEVICE_EP1_IN_STS_UDC_REG 0x10024

#define USB_DEVICE_EP1_IN_STS_UDC_REG__EP1_IN_STS_UDC_REG_SHIFT 0
#define USB_DEVICE_EP1_IN_STS_UDC_REG__EP1_IN_STS_UDC_REG_WIDTH 32
#define USB_DEVICE_EP1_IN_STS_UDC_REG__EP1_IN_STS_UDC_REG_RESET_VAL 0
#define USB_DEVICE_EP1_IN_STS_UDC_REG__EP1_IN_STS_UDC_REG_RMASK 0xffffffff
#define USB_DEVICE_EP1_IN_STS_UDC_REG__EP1_IN_STS_UDC_REG_MASK  0xffffffff
#define USB_DEVICE_EP1_IN_STS_UDC_REG__EP1_IN_STS_UDC_REG_FIELD 0,31


/*
 * EP1_OUT_BUFSIZE_UDC_REG.
 * This register is used to program the endpoints as required by the
 * application.
 */
#define USB_DEVICE_EP1_OUT_BUFSIZE_UDC_REG 0x1022c

#define USB_DEVICE_EP1_OUT_BUFSIZE_UDC_REG__EP1_OUT_BUFSIZE_UDC_REG_SHIFT 0
#define USB_DEVICE_EP1_OUT_BUFSIZE_UDC_REG__EP1_OUT_BUFSIZE_UDC_REG_WIDTH 32
#define USB_DEVICE_EP1_OUT_BUFSIZE_UDC_REG__EP1_OUT_BUFSIZE_UDC_REG_RESET_VAL 0
#define USB_DEVICE_EP1_OUT_BUFSIZE_UDC_REG__EP1_OUT_BUFSIZE_UDC_REG_RMASK 0xffffffff
#define USB_DEVICE_EP1_OUT_BUFSIZE_UDC_REG__EP1_OUT_BUFSIZE_UDC_REG_MASK  0xffffffff
#define USB_DEVICE_EP1_OUT_BUFSIZE_UDC_REG__EP1_OUT_BUFSIZE_UDC_REG_FIELD 0,31


/*
 * EP1_OUT_CTRL_UDC_REG.
 * This register is used to program the endpoints as required by the
 * application.
 */
#define USB_DEVICE_EP1_OUT_CTRL_UDC_REG 0x10220

#define USB_DEVICE_EP1_OUT_CTRL_UDC_REG__EP1_OUT_CTRL_UDC_REG_SHIFT 0
#define USB_DEVICE_EP1_OUT_CTRL_UDC_REG__EP1_OUT_CTRL_UDC_REG_WIDTH 32
#define USB_DEVICE_EP1_OUT_CTRL_UDC_REG__EP1_OUT_CTRL_UDC_REG_RESET_VAL 0
#define USB_DEVICE_EP1_OUT_CTRL_UDC_REG__EP1_OUT_CTRL_UDC_REG_RMASK 0xffffffff
#define USB_DEVICE_EP1_OUT_CTRL_UDC_REG__EP1_OUT_CTRL_UDC_REG_MASK  0xffffffff
#define USB_DEVICE_EP1_OUT_CTRL_UDC_REG__EP1_OUT_CTRL_UDC_REG_FIELD 0,31


/*
 * EP1_OUT_STS_UDC_REG.
 * The Endpoint Status register indicates the endpoint status.
 */
#define USB_DEVICE_EP1_OUT_STS_UDC_REG 0x10224

#define USB_DEVICE_EP1_OUT_STS_UDC_REG__EP1_OUT_STS_UDC_REG_SHIFT 0
#define USB_DEVICE_EP1_OUT_STS_UDC_REG__EP1_OUT_STS_UDC_REG_WIDTH 32
#define USB_DEVICE_EP1_OUT_STS_UDC_REG__EP1_OUT_STS_UDC_REG_RESET_VAL 0
#define USB_DEVICE_EP1_OUT_STS_UDC_REG__EP1_OUT_STS_UDC_REG_RMASK 0xffffffff
#define USB_DEVICE_EP1_OUT_STS_UDC_REG__EP1_OUT_STS_UDC_REG_MASK  0xffffffff
#define USB_DEVICE_EP1_OUT_STS_UDC_REG__EP1_OUT_STS_UDC_REG_FIELD 0,31


/*
 * EP1_RD_CFRM_UDC_REG_ADDR.
 * Writing to register for zero-length OUT data.
 */
#define USB_DEVICE_EP1_RD_CFRM_UDC_REG 0x1023c

#define USB_DEVICE_EP1_RD_CFRM_UDC_REG__EP1_RD_CFRM_UDC_REG_SHIFT 0
#define USB_DEVICE_EP1_RD_CFRM_UDC_REG__EP1_RD_CFRM_UDC_REG_WIDTH 32
#define USB_DEVICE_EP1_RD_CFRM_UDC_REG__EP1_RD_CFRM_UDC_REG_RESET_VAL 0
#define USB_DEVICE_EP1_RD_CFRM_UDC_REG__EP1_RD_CFRM_UDC_REG_RMASK 0xffffffff
#define USB_DEVICE_EP1_RD_CFRM_UDC_REG__EP1_RD_CFRM_UDC_REG_MASK  0xffffffff
#define USB_DEVICE_EP1_RD_CFRM_UDC_REG__EP1_RD_CFRM_UDC_REG_FIELD 0,31


/*
 * EP1_WR_CFRM_UDC_REG_ADDR.
 * Writing to register confirms the IN data into the TxFIFO.
 */
#define USB_DEVICE_EP1_WR_CFRM_UDC_REG 0x1003c

#define USB_DEVICE_EP1_WR_CFRM_UDC_REG__EP1_WR_CFRM_UDC_REG_SHIFT 0
#define USB_DEVICE_EP1_WR_CFRM_UDC_REG__EP1_WR_CFRM_UDC_REG_WIDTH 32
#define USB_DEVICE_EP1_WR_CFRM_UDC_REG__EP1_WR_CFRM_UDC_REG_RESET_VAL 0
#define USB_DEVICE_EP1_WR_CFRM_UDC_REG__EP1_WR_CFRM_UDC_REG_RMASK 0xffffffff
#define USB_DEVICE_EP1_WR_CFRM_UDC_REG__EP1_WR_CFRM_UDC_REG_MASK  0xffffffff
#define USB_DEVICE_EP1_WR_CFRM_UDC_REG__EP1_WR_CFRM_UDC_REG_FIELD 0,31


/*
 * EP2_IN_BUFSIZE_UDC_REG.
 * This register is used to program the endpoints as required by the
 * application.
 */
#define USB_DEVICE_EP2_IN_BUFSIZE_UDC_REG 0x10048

#define USB_DEVICE_EP2_IN_BUFSIZE_UDC_REG__EP2_IN_BUFSIZE_UDC_REG_SHIFT 0
#define USB_DEVICE_EP2_IN_BUFSIZE_UDC_REG__EP2_IN_BUFSIZE_UDC_REG_WIDTH 32
#define USB_DEVICE_EP2_IN_BUFSIZE_UDC_REG__EP2_IN_BUFSIZE_UDC_REG_RESET_VAL 0
#define USB_DEVICE_EP2_IN_BUFSIZE_UDC_REG__EP2_IN_BUFSIZE_UDC_REG_RMASK 0xffffffff
#define USB_DEVICE_EP2_IN_BUFSIZE_UDC_REG__EP2_IN_BUFSIZE_UDC_REG_MASK  0xffffffff
#define USB_DEVICE_EP2_IN_BUFSIZE_UDC_REG__EP2_IN_BUFSIZE_UDC_REG_FIELD 0,31


/*
 * EP2_IN_CTRL_UDC_REG.
 * This register is used to program the endpoints as required by the
 * application.
 */
#define USB_DEVICE_EP2_IN_CTRL_UDC_REG 0x10040

#define USB_DEVICE_EP2_IN_CTRL_UDC_REG__EP2_IN_CTRL_UDC_REG_SHIFT 0
#define USB_DEVICE_EP2_IN_CTRL_UDC_REG__EP2_IN_CTRL_UDC_REG_WIDTH 32
#define USB_DEVICE_EP2_IN_CTRL_UDC_REG__EP2_IN_CTRL_UDC_REG_RESET_VAL 0
#define USB_DEVICE_EP2_IN_CTRL_UDC_REG__EP2_IN_CTRL_UDC_REG_RMASK 0xffffffff
#define USB_DEVICE_EP2_IN_CTRL_UDC_REG__EP2_IN_CTRL_UDC_REG_MASK  0xffffffff
#define USB_DEVICE_EP2_IN_CTRL_UDC_REG__EP2_IN_CTRL_UDC_REG_FIELD 0,31


/*
 * EP2_IN_MPKT_SZ_REG.
 * This register is used to program the endpoints as required by the
 * application.
 */
#define USB_DEVICE_EP2_IN_MPKT_SZ_REG 0x1004c

#define USB_DEVICE_EP2_IN_MPKT_SZ_REG__EP2_IN_MPKT_SZ_REG_SHIFT 0
#define USB_DEVICE_EP2_IN_MPKT_SZ_REG__EP2_IN_MPKT_SZ_REG_WIDTH 16
#define USB_DEVICE_EP2_IN_MPKT_SZ_REG__EP2_IN_MPKT_SZ_REG_RESET_VAL 0
#define USB_DEVICE_EP2_IN_MPKT_SZ_REG__EP2_IN_MPKT_SZ_REG_RMASK 0xffff
#define USB_DEVICE_EP2_IN_MPKT_SZ_REG__EP2_IN_MPKT_SZ_REG_MASK  0xffff
#define USB_DEVICE_EP2_IN_MPKT_SZ_REG__EP2_IN_MPKT_SZ_REG_FIELD 0,15


/*
 * EP2_IN_STS_UDC_REG.
 * The Endpoint Status register indicates the endpoint status.
 */
#define USB_DEVICE_EP2_IN_STS_UDC_REG 0x10044

#define USB_DEVICE_EP2_IN_STS_UDC_REG__EP2_IN_STS_UDC_REG_SHIFT 0
#define USB_DEVICE_EP2_IN_STS_UDC_REG__EP2_IN_STS_UDC_REG_WIDTH 32
#define USB_DEVICE_EP2_IN_STS_UDC_REG__EP2_IN_STS_UDC_REG_RESET_VAL 0
#define USB_DEVICE_EP2_IN_STS_UDC_REG__EP2_IN_STS_UDC_REG_RMASK 0xffffffff
#define USB_DEVICE_EP2_IN_STS_UDC_REG__EP2_IN_STS_UDC_REG_MASK  0xffffffff
#define USB_DEVICE_EP2_IN_STS_UDC_REG__EP2_IN_STS_UDC_REG_FIELD 0,31


/*
 * EP2_OUT_BUFSIZE_UDC_REG.
 * This register is used to program the endpoints as required by the
 * application.
 */
#define USB_DEVICE_EP2_OUT_BUFSIZE_UDC_REG 0x1024c

#define USB_DEVICE_EP2_OUT_BUFSIZE_UDC_REG__EP2_OUT_BUFSIZE_UDC_REG_SHIFT 0
#define USB_DEVICE_EP2_OUT_BUFSIZE_UDC_REG__EP2_OUT_BUFSIZE_UDC_REG_WIDTH 32
#define USB_DEVICE_EP2_OUT_BUFSIZE_UDC_REG__EP2_OUT_BUFSIZE_UDC_REG_RESET_VAL 0
#define USB_DEVICE_EP2_OUT_BUFSIZE_UDC_REG__EP2_OUT_BUFSIZE_UDC_REG_RMASK 0xffffffff
#define USB_DEVICE_EP2_OUT_BUFSIZE_UDC_REG__EP2_OUT_BUFSIZE_UDC_REG_MASK  0xffffffff
#define USB_DEVICE_EP2_OUT_BUFSIZE_UDC_REG__EP2_OUT_BUFSIZE_UDC_REG_FIELD 0,31


/*
 * EP2_OUT_CTRL_UDC_REG.
 * This register is used to program the endpoints as required by the
 * application.
 */
#define USB_DEVICE_EP2_OUT_CTRL_UDC_REG 0x10240

#define USB_DEVICE_EP2_OUT_CTRL_UDC_REG__EP2_OUT_CTRL_UDC_REG_SHIFT 0
#define USB_DEVICE_EP2_OUT_CTRL_UDC_REG__EP2_OUT_CTRL_UDC_REG_WIDTH 32
#define USB_DEVICE_EP2_OUT_CTRL_UDC_REG__EP2_OUT_CTRL_UDC_REG_RESET_VAL 0
#define USB_DEVICE_EP2_OUT_CTRL_UDC_REG__EP2_OUT_CTRL_UDC_REG_RMASK 0xffffffff
#define USB_DEVICE_EP2_OUT_CTRL_UDC_REG__EP2_OUT_CTRL_UDC_REG_MASK  0xffffffff
#define USB_DEVICE_EP2_OUT_CTRL_UDC_REG__EP2_OUT_CTRL_UDC_REG_FIELD 0,31


/*
 * EP2_OUT_STS_UDC_REG.
 * The Endpoint Status register indicates the endpoint status.
 */
#define USB_DEVICE_EP2_OUT_STS_UDC_REG 0x10244

#define USB_DEVICE_EP2_OUT_STS_UDC_REG__EP2_OUT_STS_UDC_REG_SHIFT 0
#define USB_DEVICE_EP2_OUT_STS_UDC_REG__EP2_OUT_STS_UDC_REG_WIDTH 32
#define USB_DEVICE_EP2_OUT_STS_UDC_REG__EP2_OUT_STS_UDC_REG_RESET_VAL 0
#define USB_DEVICE_EP2_OUT_STS_UDC_REG__EP2_OUT_STS_UDC_REG_RMASK 0xffffffff
#define USB_DEVICE_EP2_OUT_STS_UDC_REG__EP2_OUT_STS_UDC_REG_MASK  0xffffffff
#define USB_DEVICE_EP2_OUT_STS_UDC_REG__EP2_OUT_STS_UDC_REG_FIELD 0,31


/*
 * EP2_RD_CFRM_UDC_REG_ADDR.
 * Writing to register for zero-length OUT data.
 */
#define USB_DEVICE_EP2_RD_CFRM_UDC_REG 0x1025c

#define USB_DEVICE_EP2_RD_CFRM_UDC_REG__EP2_RD_CFRM_UDC_REG_SHIFT 0
#define USB_DEVICE_EP2_RD_CFRM_UDC_REG__EP2_RD_CFRM_UDC_REG_WIDTH 32
#define USB_DEVICE_EP2_RD_CFRM_UDC_REG__EP2_RD_CFRM_UDC_REG_RESET_VAL 0
#define USB_DEVICE_EP2_RD_CFRM_UDC_REG__EP2_RD_CFRM_UDC_REG_RMASK 0xffffffff
#define USB_DEVICE_EP2_RD_CFRM_UDC_REG__EP2_RD_CFRM_UDC_REG_MASK  0xffffffff
#define USB_DEVICE_EP2_RD_CFRM_UDC_REG__EP2_RD_CFRM_UDC_REG_FIELD 0,31


/*
 * EP2_WR_CFRM_UDC_REG_ADDR.
 * Writing to register confirms the IN data into the TxFIFO.
 */
#define USB_DEVICE_EP2_WR_CFRM_UDC_REG 0x1005c

#define USB_DEVICE_EP2_WR_CFRM_UDC_REG__EP2_WR_CFRM_UDC_REG_SHIFT 0
#define USB_DEVICE_EP2_WR_CFRM_UDC_REG__EP2_WR_CFRM_UDC_REG_WIDTH 32
#define USB_DEVICE_EP2_WR_CFRM_UDC_REG__EP2_WR_CFRM_UDC_REG_RESET_VAL 0
#define USB_DEVICE_EP2_WR_CFRM_UDC_REG__EP2_WR_CFRM_UDC_REG_RMASK 0xffffffff
#define USB_DEVICE_EP2_WR_CFRM_UDC_REG__EP2_WR_CFRM_UDC_REG_MASK  0xffffffff
#define USB_DEVICE_EP2_WR_CFRM_UDC_REG__EP2_WR_CFRM_UDC_REG_FIELD 0,31


/*
 * EP3_IN_BUFSIZE_UDC_REG.
 * This register is used to program the endpoints as required by the
 * application.
 */
#define USB_DEVICE_EP3_IN_BUFSIZE_UDC_REG 0x10068

#define USB_DEVICE_EP3_IN_BUFSIZE_UDC_REG__EP3_IN_BUFSIZE_UDC_REG_SHIFT 0
#define USB_DEVICE_EP3_IN_BUFSIZE_UDC_REG__EP3_IN_BUFSIZE_UDC_REG_WIDTH 32
#define USB_DEVICE_EP3_IN_BUFSIZE_UDC_REG__EP3_IN_BUFSIZE_UDC_REG_RESET_VAL 0
#define USB_DEVICE_EP3_IN_BUFSIZE_UDC_REG__EP3_IN_BUFSIZE_UDC_REG_RMASK 0xffffffff
#define USB_DEVICE_EP3_IN_BUFSIZE_UDC_REG__EP3_IN_BUFSIZE_UDC_REG_MASK  0xffffffff
#define USB_DEVICE_EP3_IN_BUFSIZE_UDC_REG__EP3_IN_BUFSIZE_UDC_REG_FIELD 0,31


/*
 * EP3_IN_CTRL_UDC_REG.
 * This register is used to program the endpoints as required by the
 * application.
 */
#define USB_DEVICE_EP3_IN_CTRL_UDC_REG 0x10060

#define USB_DEVICE_EP3_IN_CTRL_UDC_REG__EP3_IN_CTRL_UDC_REG_SHIFT 0
#define USB_DEVICE_EP3_IN_CTRL_UDC_REG__EP3_IN_CTRL_UDC_REG_WIDTH 32
#define USB_DEVICE_EP3_IN_CTRL_UDC_REG__EP3_IN_CTRL_UDC_REG_RESET_VAL 0
#define USB_DEVICE_EP3_IN_CTRL_UDC_REG__EP3_IN_CTRL_UDC_REG_RMASK 0xffffffff
#define USB_DEVICE_EP3_IN_CTRL_UDC_REG__EP3_IN_CTRL_UDC_REG_MASK  0xffffffff
#define USB_DEVICE_EP3_IN_CTRL_UDC_REG__EP3_IN_CTRL_UDC_REG_FIELD 0,31


/*
 * EP3_IN_MPKT_SZ_REG.
 * This register is used to program the endpoints as required by the
 * application.
 */
#define USB_DEVICE_EP3_IN_MPKT_SZ_REG 0x1006c

#define USB_DEVICE_EP3_IN_MPKT_SZ_REG__EP3_IN_MPKT_SZ_REG_SHIFT 0
#define USB_DEVICE_EP3_IN_MPKT_SZ_REG__EP3_IN_MPKT_SZ_REG_WIDTH 16
#define USB_DEVICE_EP3_IN_MPKT_SZ_REG__EP3_IN_MPKT_SZ_REG_RESET_VAL 0
#define USB_DEVICE_EP3_IN_MPKT_SZ_REG__EP3_IN_MPKT_SZ_REG_RMASK 0xffff
#define USB_DEVICE_EP3_IN_MPKT_SZ_REG__EP3_IN_MPKT_SZ_REG_MASK  0xffff
#define USB_DEVICE_EP3_IN_MPKT_SZ_REG__EP3_IN_MPKT_SZ_REG_FIELD 0,15


/*
 * EP3_IN_STS_UDC_REG.
 * The Endpoint Status register indicates the endpoint status.
 */
#define USB_DEVICE_EP3_IN_STS_UDC_REG 0x10064

#define USB_DEVICE_EP3_IN_STS_UDC_REG__EP3_IN_STS_UDC_REG_SHIFT 0
#define USB_DEVICE_EP3_IN_STS_UDC_REG__EP3_IN_STS_UDC_REG_WIDTH 32
#define USB_DEVICE_EP3_IN_STS_UDC_REG__EP3_IN_STS_UDC_REG_RESET_VAL 0
#define USB_DEVICE_EP3_IN_STS_UDC_REG__EP3_IN_STS_UDC_REG_RMASK 0xffffffff
#define USB_DEVICE_EP3_IN_STS_UDC_REG__EP3_IN_STS_UDC_REG_MASK  0xffffffff
#define USB_DEVICE_EP3_IN_STS_UDC_REG__EP3_IN_STS_UDC_REG_FIELD 0,31


/*
 * EP3_OUT_BUFSIZE_UDC_REG.
 * This register is used to program the endpoints as required by the
 * application.
 */
#define USB_DEVICE_EP3_OUT_BUFSIZE_UDC_REG 0x1026c

#define USB_DEVICE_EP3_OUT_BUFSIZE_UDC_REG__EP3_OUT_BUFSIZE_UDC_REG_SHIFT 0
#define USB_DEVICE_EP3_OUT_BUFSIZE_UDC_REG__EP3_OUT_BUFSIZE_UDC_REG_WIDTH 32
#define USB_DEVICE_EP3_OUT_BUFSIZE_UDC_REG__EP3_OUT_BUFSIZE_UDC_REG_RESET_VAL 0
#define USB_DEVICE_EP3_OUT_BUFSIZE_UDC_REG__EP3_OUT_BUFSIZE_UDC_REG_RMASK 0xffffffff
#define USB_DEVICE_EP3_OUT_BUFSIZE_UDC_REG__EP3_OUT_BUFSIZE_UDC_REG_MASK  0xffffffff
#define USB_DEVICE_EP3_OUT_BUFSIZE_UDC_REG__EP3_OUT_BUFSIZE_UDC_REG_FIELD 0,31


/*
 * EP3_OUT_CTRL_UDC_REG.
 * This register is used to program the endpoints as required by the
 * application.
 */
#define USB_DEVICE_EP3_OUT_CTRL_UDC_REG 0x10260

#define USB_DEVICE_EP3_OUT_CTRL_UDC_REG__EP3_OUT_CTRL_UDC_REG_SHIFT 0
#define USB_DEVICE_EP3_OUT_CTRL_UDC_REG__EP3_OUT_CTRL_UDC_REG_WIDTH 32
#define USB_DEVICE_EP3_OUT_CTRL_UDC_REG__EP3_OUT_CTRL_UDC_REG_RESET_VAL 0
#define USB_DEVICE_EP3_OUT_CTRL_UDC_REG__EP3_OUT_CTRL_UDC_REG_RMASK 0xffffffff
#define USB_DEVICE_EP3_OUT_CTRL_UDC_REG__EP3_OUT_CTRL_UDC_REG_MASK  0xffffffff
#define USB_DEVICE_EP3_OUT_CTRL_UDC_REG__EP3_OUT_CTRL_UDC_REG_FIELD 0,31


/*
 * EP3_OUT_STS_UDC_REG.
 * The Endpoint Status register indicates the endpoint status.
 */
#define USB_DEVICE_EP3_OUT_STS_UDC_REG 0x10264

#define USB_DEVICE_EP3_OUT_STS_UDC_REG__EP3_OUT_STS_UDC_REG_SHIFT 0
#define USB_DEVICE_EP3_OUT_STS_UDC_REG__EP3_OUT_STS_UDC_REG_WIDTH 32
#define USB_DEVICE_EP3_OUT_STS_UDC_REG__EP3_OUT_STS_UDC_REG_RESET_VAL 0
#define USB_DEVICE_EP3_OUT_STS_UDC_REG__EP3_OUT_STS_UDC_REG_RMASK 0xffffffff
#define USB_DEVICE_EP3_OUT_STS_UDC_REG__EP3_OUT_STS_UDC_REG_MASK  0xffffffff
#define USB_DEVICE_EP3_OUT_STS_UDC_REG__EP3_OUT_STS_UDC_REG_FIELD 0,31


/*
 * EP3_RD_CFRM_UDC_REG_ADDR.
 * Writing to register for zero-length OUT data.
 */
#define USB_DEVICE_EP3_RD_CFRM_UDC_REG 0x1027c

#define USB_DEVICE_EP3_RD_CFRM_UDC_REG__EP3_RD_CFRM_UDC_REG_SHIFT 0
#define USB_DEVICE_EP3_RD_CFRM_UDC_REG__EP3_RD_CFRM_UDC_REG_WIDTH 32
#define USB_DEVICE_EP3_RD_CFRM_UDC_REG__EP3_RD_CFRM_UDC_REG_RESET_VAL 0
#define USB_DEVICE_EP3_RD_CFRM_UDC_REG__EP3_RD_CFRM_UDC_REG_RMASK 0xffffffff
#define USB_DEVICE_EP3_RD_CFRM_UDC_REG__EP3_RD_CFRM_UDC_REG_MASK  0xffffffff
#define USB_DEVICE_EP3_RD_CFRM_UDC_REG__EP3_RD_CFRM_UDC_REG_FIELD 0,31


/*
 * EP3_WR_CFRM_UDC_REG_ADDR.
 * Writing to register confirms the IN data into the TxFIFO.
 */
#define USB_DEVICE_EP3_WR_CFRM_UDC_REG 0x1007c

#define USB_DEVICE_EP3_WR_CFRM_UDC_REG__EP3_WR_CFRM_UDC_REG_SHIFT 0
#define USB_DEVICE_EP3_WR_CFRM_UDC_REG__EP3_WR_CFRM_UDC_REG_WIDTH 32
#define USB_DEVICE_EP3_WR_CFRM_UDC_REG__EP3_WR_CFRM_UDC_REG_RESET_VAL 0
#define USB_DEVICE_EP3_WR_CFRM_UDC_REG__EP3_WR_CFRM_UDC_REG_RMASK 0xffffffff
#define USB_DEVICE_EP3_WR_CFRM_UDC_REG__EP3_WR_CFRM_UDC_REG_MASK  0xffffffff
#define USB_DEVICE_EP3_WR_CFRM_UDC_REG__EP3_WR_CFRM_UDC_REG_FIELD 0,31


/*
 * EP4_IN_BUFSIZE_UDC_REG.
 * This register is used to program the endpoints as required by the
 * application.
 */
#define USB_DEVICE_EP4_IN_BUFSIZE_UDC_REG 0x10088

#define USB_DEVICE_EP4_IN_BUFSIZE_UDC_REG__EP4_IN_BUFSIZE_UDC_REG_SHIFT 0
#define USB_DEVICE_EP4_IN_BUFSIZE_UDC_REG__EP4_IN_BUFSIZE_UDC_REG_WIDTH 32
#define USB_DEVICE_EP4_IN_BUFSIZE_UDC_REG__EP4_IN_BUFSIZE_UDC_REG_RESET_VAL 0
#define USB_DEVICE_EP4_IN_BUFSIZE_UDC_REG__EP4_IN_BUFSIZE_UDC_REG_RMASK 0xffffffff
#define USB_DEVICE_EP4_IN_BUFSIZE_UDC_REG__EP4_IN_BUFSIZE_UDC_REG_MASK  0xffffffff
#define USB_DEVICE_EP4_IN_BUFSIZE_UDC_REG__EP4_IN_BUFSIZE_UDC_REG_FIELD 0,31


/*
 * EP4_IN_CTRL_UDC_REG.
 * This register is used to program the endpoints as required by the
 * application.
 */
#define USB_DEVICE_EP4_IN_CTRL_UDC_REG 0x10080

#define USB_DEVICE_EP4_IN_CTRL_UDC_REG__EP4_IN_CTRL_UDC_REG_SHIFT 0
#define USB_DEVICE_EP4_IN_CTRL_UDC_REG__EP4_IN_CTRL_UDC_REG_WIDTH 32
#define USB_DEVICE_EP4_IN_CTRL_UDC_REG__EP4_IN_CTRL_UDC_REG_RESET_VAL 0
#define USB_DEVICE_EP4_IN_CTRL_UDC_REG__EP4_IN_CTRL_UDC_REG_RMASK 0xffffffff
#define USB_DEVICE_EP4_IN_CTRL_UDC_REG__EP4_IN_CTRL_UDC_REG_MASK  0xffffffff
#define USB_DEVICE_EP4_IN_CTRL_UDC_REG__EP4_IN_CTRL_UDC_REG_FIELD 0,31


/*
 * EP4_IN_MPKT_SZ_REG.
 * This register is used to program the endpoints as required by the
 * application.
 */
#define USB_DEVICE_EP4_IN_MPKT_SZ_REG 0x1008c

#define USB_DEVICE_EP4_IN_MPKT_SZ_REG__EP4_IN_MPKT_SZ_REG_SHIFT 0
#define USB_DEVICE_EP4_IN_MPKT_SZ_REG__EP4_IN_MPKT_SZ_REG_WIDTH 16
#define USB_DEVICE_EP4_IN_MPKT_SZ_REG__EP4_IN_MPKT_SZ_REG_RESET_VAL 0
#define USB_DEVICE_EP4_IN_MPKT_SZ_REG__EP4_IN_MPKT_SZ_REG_RMASK 0xffff
#define USB_DEVICE_EP4_IN_MPKT_SZ_REG__EP4_IN_MPKT_SZ_REG_MASK  0xffff
#define USB_DEVICE_EP4_IN_MPKT_SZ_REG__EP4_IN_MPKT_SZ_REG_FIELD 0,15


/*
 * EP4_IN_STS_UDC_REG.
 * The Endpoint Status register indicates the endpoint status.
 */
#define USB_DEVICE_EP4_IN_STS_UDC_REG 0x10084

#define USB_DEVICE_EP4_IN_STS_UDC_REG__EP4_IN_STS_UDC_REG_SHIFT 0
#define USB_DEVICE_EP4_IN_STS_UDC_REG__EP4_IN_STS_UDC_REG_WIDTH 32
#define USB_DEVICE_EP4_IN_STS_UDC_REG__EP4_IN_STS_UDC_REG_RESET_VAL 0
#define USB_DEVICE_EP4_IN_STS_UDC_REG__EP4_IN_STS_UDC_REG_RMASK 0xffffffff
#define USB_DEVICE_EP4_IN_STS_UDC_REG__EP4_IN_STS_UDC_REG_MASK  0xffffffff
#define USB_DEVICE_EP4_IN_STS_UDC_REG__EP4_IN_STS_UDC_REG_FIELD 0,31


/*
 * EP4_OUT_BUFSIZE_UDC_REG.
 * This register is used to program the endpoints as required by the
 * application.
 */
#define USB_DEVICE_EP4_OUT_BUFSIZE_UDC_REG 0x1028c

#define USB_DEVICE_EP4_OUT_BUFSIZE_UDC_REG__EP4_OUT_BUFSIZE_UDC_REG_SHIFT 0
#define USB_DEVICE_EP4_OUT_BUFSIZE_UDC_REG__EP4_OUT_BUFSIZE_UDC_REG_WIDTH 32
#define USB_DEVICE_EP4_OUT_BUFSIZE_UDC_REG__EP4_OUT_BUFSIZE_UDC_REG_RESET_VAL 0
#define USB_DEVICE_EP4_OUT_BUFSIZE_UDC_REG__EP4_OUT_BUFSIZE_UDC_REG_RMASK 0xffffffff
#define USB_DEVICE_EP4_OUT_BUFSIZE_UDC_REG__EP4_OUT_BUFSIZE_UDC_REG_MASK  0xffffffff
#define USB_DEVICE_EP4_OUT_BUFSIZE_UDC_REG__EP4_OUT_BUFSIZE_UDC_REG_FIELD 0,31


/*
 * EP4_OUT_CTRL_UDC_REG.
 * This register is used to program the endpoints as required by the
 * application.
 */
#define USB_DEVICE_EP4_OUT_CTRL_UDC_REG 0x10280

#define USB_DEVICE_EP4_OUT_CTRL_UDC_REG__EP4_OUT_CTRL_UDC_REG_SHIFT 0
#define USB_DEVICE_EP4_OUT_CTRL_UDC_REG__EP4_OUT_CTRL_UDC_REG_WIDTH 32
#define USB_DEVICE_EP4_OUT_CTRL_UDC_REG__EP4_OUT_CTRL_UDC_REG_RESET_VAL 0
#define USB_DEVICE_EP4_OUT_CTRL_UDC_REG__EP4_OUT_CTRL_UDC_REG_RMASK 0xffffffff
#define USB_DEVICE_EP4_OUT_CTRL_UDC_REG__EP4_OUT_CTRL_UDC_REG_MASK  0xffffffff
#define USB_DEVICE_EP4_OUT_CTRL_UDC_REG__EP4_OUT_CTRL_UDC_REG_FIELD 0,31


/*
 * EP4_OUT_STS_UDC_REG.
 * The Endpoint Status register indicates the endpoint status.
 */
#define USB_DEVICE_EP4_OUT_STS_UDC_REG 0x10284

#define USB_DEVICE_EP4_OUT_STS_UDC_REG__EP4_OUT_STS_UDC_REG_SHIFT 0
#define USB_DEVICE_EP4_OUT_STS_UDC_REG__EP4_OUT_STS_UDC_REG_WIDTH 32
#define USB_DEVICE_EP4_OUT_STS_UDC_REG__EP4_OUT_STS_UDC_REG_RESET_VAL 0
#define USB_DEVICE_EP4_OUT_STS_UDC_REG__EP4_OUT_STS_UDC_REG_RMASK 0xffffffff
#define USB_DEVICE_EP4_OUT_STS_UDC_REG__EP4_OUT_STS_UDC_REG_MASK  0xffffffff
#define USB_DEVICE_EP4_OUT_STS_UDC_REG__EP4_OUT_STS_UDC_REG_FIELD 0,31


/*
 * EP4_RD_CFRM_UDC_REG_ADDR.
 * Writing to register for zero-length OUT data.
 */
#define USB_DEVICE_EP4_RD_CFRM_UDC_REG 0x1029c

#define USB_DEVICE_EP4_RD_CFRM_UDC_REG__EP4_RD_CFRM_UDC_REG_SHIFT 0
#define USB_DEVICE_EP4_RD_CFRM_UDC_REG__EP4_RD_CFRM_UDC_REG_WIDTH 32
#define USB_DEVICE_EP4_RD_CFRM_UDC_REG__EP4_RD_CFRM_UDC_REG_RESET_VAL 0
#define USB_DEVICE_EP4_RD_CFRM_UDC_REG__EP4_RD_CFRM_UDC_REG_RMASK 0xffffffff
#define USB_DEVICE_EP4_RD_CFRM_UDC_REG__EP4_RD_CFRM_UDC_REG_MASK  0xffffffff
#define USB_DEVICE_EP4_RD_CFRM_UDC_REG__EP4_RD_CFRM_UDC_REG_FIELD 0,31


/*
 * EP4_WR_CFRM_UDC_REG_ADDR.
 * Writing to register confirms the IN data into the TxFIFO.
 */
#define USB_DEVICE_EP4_WR_CFRM_UDC_REG 0x1009c

#define USB_DEVICE_EP4_WR_CFRM_UDC_REG__EP4_WR_CFRM_UDC_REG_SHIFT 0
#define USB_DEVICE_EP4_WR_CFRM_UDC_REG__EP4_WR_CFRM_UDC_REG_WIDTH 32
#define USB_DEVICE_EP4_WR_CFRM_UDC_REG__EP4_WR_CFRM_UDC_REG_RESET_VAL 0
#define USB_DEVICE_EP4_WR_CFRM_UDC_REG__EP4_WR_CFRM_UDC_REG_RMASK 0xffffffff
#define USB_DEVICE_EP4_WR_CFRM_UDC_REG__EP4_WR_CFRM_UDC_REG_MASK  0xffffffff
#define USB_DEVICE_EP4_WR_CFRM_UDC_REG__EP4_WR_CFRM_UDC_REG_FIELD 0,31


/*
 * EP5_IN_BUFSIZE_UDC_REG.
 * This register is used to program the endpoints as required by the
 * application.
 */
#define USB_DEVICE_EP5_IN_BUFSIZE_UDC_REG 0x100a8

#define USB_DEVICE_EP5_IN_BUFSIZE_UDC_REG__EP5_IN_BUFSIZE_UDC_REG_SHIFT 0
#define USB_DEVICE_EP5_IN_BUFSIZE_UDC_REG__EP5_IN_BUFSIZE_UDC_REG_WIDTH 32
#define USB_DEVICE_EP5_IN_BUFSIZE_UDC_REG__EP5_IN_BUFSIZE_UDC_REG_RESET_VAL 0
#define USB_DEVICE_EP5_IN_BUFSIZE_UDC_REG__EP5_IN_BUFSIZE_UDC_REG_RMASK 0xffffffff
#define USB_DEVICE_EP5_IN_BUFSIZE_UDC_REG__EP5_IN_BUFSIZE_UDC_REG_MASK  0xffffffff
#define USB_DEVICE_EP5_IN_BUFSIZE_UDC_REG__EP5_IN_BUFSIZE_UDC_REG_FIELD 0,31


/*
 * EP5_IN_CTRL_UDC_REG.
 * This register is used to program the endpoints as required by the
 * application.
 */
#define USB_DEVICE_EP5_IN_CTRL_UDC_REG 0x100a0

#define USB_DEVICE_EP5_IN_CTRL_UDC_REG__EP5_IN_CTRL_UDC_REG_SHIFT 0
#define USB_DEVICE_EP5_IN_CTRL_UDC_REG__EP5_IN_CTRL_UDC_REG_WIDTH 32
#define USB_DEVICE_EP5_IN_CTRL_UDC_REG__EP5_IN_CTRL_UDC_REG_RESET_VAL 0
#define USB_DEVICE_EP5_IN_CTRL_UDC_REG__EP5_IN_CTRL_UDC_REG_RMASK 0xffffffff
#define USB_DEVICE_EP5_IN_CTRL_UDC_REG__EP5_IN_CTRL_UDC_REG_MASK  0xffffffff
#define USB_DEVICE_EP5_IN_CTRL_UDC_REG__EP5_IN_CTRL_UDC_REG_FIELD 0,31


/*
 * EP5_IN_MPKT_SZ_REG.
 * This register is used to program the endpoints as required by the
 * application.
 */
#define USB_DEVICE_EP5_IN_MPKT_SZ_REG 0x100ac

#define USB_DEVICE_EP5_IN_MPKT_SZ_REG__EP5_IN_MPKT_SZ_REG_SHIFT 0
#define USB_DEVICE_EP5_IN_MPKT_SZ_REG__EP5_IN_MPKT_SZ_REG_WIDTH 16
#define USB_DEVICE_EP5_IN_MPKT_SZ_REG__EP5_IN_MPKT_SZ_REG_RESET_VAL 0
#define USB_DEVICE_EP5_IN_MPKT_SZ_REG__EP5_IN_MPKT_SZ_REG_RMASK 0xffff
#define USB_DEVICE_EP5_IN_MPKT_SZ_REG__EP5_IN_MPKT_SZ_REG_MASK  0xffff
#define USB_DEVICE_EP5_IN_MPKT_SZ_REG__EP5_IN_MPKT_SZ_REG_FIELD 0,15


/*
 * EP5_IN_STS_UDC_REG.
 * The Endpoint Status register indicates the endpoint status.
 */
#define USB_DEVICE_EP5_IN_STS_UDC_REG 0x100a4

#define USB_DEVICE_EP5_IN_STS_UDC_REG__EP5_IN_STS_UDC_REG_SHIFT 0
#define USB_DEVICE_EP5_IN_STS_UDC_REG__EP5_IN_STS_UDC_REG_WIDTH 32
#define USB_DEVICE_EP5_IN_STS_UDC_REG__EP5_IN_STS_UDC_REG_RESET_VAL 0
#define USB_DEVICE_EP5_IN_STS_UDC_REG__EP5_IN_STS_UDC_REG_RMASK 0xffffffff
#define USB_DEVICE_EP5_IN_STS_UDC_REG__EP5_IN_STS_UDC_REG_MASK  0xffffffff
#define USB_DEVICE_EP5_IN_STS_UDC_REG__EP5_IN_STS_UDC_REG_FIELD 0,31


/*
 * EP5_OUT_BUFSIZE_UDC_REG.
 * This register is used to program the endpoints as required by the
 * application.
 */
#define USB_DEVICE_EP5_OUT_BUFSIZE_UDC_REG 0x102ac

#define USB_DEVICE_EP5_OUT_BUFSIZE_UDC_REG__EP5_OUT_BUFSIZE_UDC_REG_SHIFT 0
#define USB_DEVICE_EP5_OUT_BUFSIZE_UDC_REG__EP5_OUT_BUFSIZE_UDC_REG_WIDTH 32
#define USB_DEVICE_EP5_OUT_BUFSIZE_UDC_REG__EP5_OUT_BUFSIZE_UDC_REG_RESET_VAL 0
#define USB_DEVICE_EP5_OUT_BUFSIZE_UDC_REG__EP5_OUT_BUFSIZE_UDC_REG_RMASK 0xffffffff
#define USB_DEVICE_EP5_OUT_BUFSIZE_UDC_REG__EP5_OUT_BUFSIZE_UDC_REG_MASK  0xffffffff
#define USB_DEVICE_EP5_OUT_BUFSIZE_UDC_REG__EP5_OUT_BUFSIZE_UDC_REG_FIELD 0,31


/*
 * EP5_OUT_CTRL_UDC_REG.
 * This register is used to program the endpoints as required by the
 * application.
 */
#define USB_DEVICE_EP5_OUT_CTRL_UDC_REG 0x102a0

#define USB_DEVICE_EP5_OUT_CTRL_UDC_REG__EP5_OUT_CTRL_UDC_REG_SHIFT 0
#define USB_DEVICE_EP5_OUT_CTRL_UDC_REG__EP5_OUT_CTRL_UDC_REG_WIDTH 32
#define USB_DEVICE_EP5_OUT_CTRL_UDC_REG__EP5_OUT_CTRL_UDC_REG_RESET_VAL 0
#define USB_DEVICE_EP5_OUT_CTRL_UDC_REG__EP5_OUT_CTRL_UDC_REG_RMASK 0xffffffff
#define USB_DEVICE_EP5_OUT_CTRL_UDC_REG__EP5_OUT_CTRL_UDC_REG_MASK  0xffffffff
#define USB_DEVICE_EP5_OUT_CTRL_UDC_REG__EP5_OUT_CTRL_UDC_REG_FIELD 0,31


/*
 * EP5_OUT_STS_UDC_REG.
 * The Endpoint Status register indicates the endpoint status.
 */
#define USB_DEVICE_EP5_OUT_STS_UDC_REG 0x102a4

#define USB_DEVICE_EP5_OUT_STS_UDC_REG__EP5_OUT_STS_UDC_REG_SHIFT 0
#define USB_DEVICE_EP5_OUT_STS_UDC_REG__EP5_OUT_STS_UDC_REG_WIDTH 32
#define USB_DEVICE_EP5_OUT_STS_UDC_REG__EP5_OUT_STS_UDC_REG_RESET_VAL 0
#define USB_DEVICE_EP5_OUT_STS_UDC_REG__EP5_OUT_STS_UDC_REG_RMASK 0xffffffff
#define USB_DEVICE_EP5_OUT_STS_UDC_REG__EP5_OUT_STS_UDC_REG_MASK  0xffffffff
#define USB_DEVICE_EP5_OUT_STS_UDC_REG__EP5_OUT_STS_UDC_REG_FIELD 0,31


/*
 * EP5_RD_CFRM_UDC_REG_ADDR.
 * Writing to register for zero-length OUT data.
 */
#define USB_DEVICE_EP5_RD_CFRM_UDC_REG 0x102bc

#define USB_DEVICE_EP5_RD_CFRM_UDC_REG__EP5_RD_CFRM_UDC_REG_SHIFT 0
#define USB_DEVICE_EP5_RD_CFRM_UDC_REG__EP5_RD_CFRM_UDC_REG_WIDTH 32
#define USB_DEVICE_EP5_RD_CFRM_UDC_REG__EP5_RD_CFRM_UDC_REG_RESET_VAL 0
#define USB_DEVICE_EP5_RD_CFRM_UDC_REG__EP5_RD_CFRM_UDC_REG_RMASK 0xffffffff
#define USB_DEVICE_EP5_RD_CFRM_UDC_REG__EP5_RD_CFRM_UDC_REG_MASK  0xffffffff
#define USB_DEVICE_EP5_RD_CFRM_UDC_REG__EP5_RD_CFRM_UDC_REG_FIELD 0,31


/*
 * EP5_WR_CFRM_UDC_REG_ADDR.
 * Writing to register confirms the IN data into the TxFIFO.
 */
#define USB_DEVICE_EP5_WR_CFRM_UDC_REG 0x100bc

#define USB_DEVICE_EP5_WR_CFRM_UDC_REG__EP5_WR_CFRM_UDC_REG_SHIFT 0
#define USB_DEVICE_EP5_WR_CFRM_UDC_REG__EP5_WR_CFRM_UDC_REG_WIDTH 32
#define USB_DEVICE_EP5_WR_CFRM_UDC_REG__EP5_WR_CFRM_UDC_REG_RESET_VAL 0
#define USB_DEVICE_EP5_WR_CFRM_UDC_REG__EP5_WR_CFRM_UDC_REG_RMASK 0xffffffff
#define USB_DEVICE_EP5_WR_CFRM_UDC_REG__EP5_WR_CFRM_UDC_REG_MASK  0xffffffff
#define USB_DEVICE_EP5_WR_CFRM_UDC_REG__EP5_WR_CFRM_UDC_REG_FIELD 0,31


/*
 * EP_INTR_MSK_UDC_REG_ADDR.
 * The Endpoint Interrupt register is used to set endpoint-level interrupts.
 * Since all 16 endpoints can be
 * bidirectional, each endpoint has two interrupt bits (one for each
 * direction). The application needs to
 * clear the interrupt by writing a 1'b1 to the correct bit after checking
 * the register.
 */
#define USB_DEVICE_EP_INTR_MSK_UDC_REG 0x10418

#define USB_DEVICE_EP_INTR_MSK_UDC_REG__IN_EP_MASK_SHIFT 0
#define USB_DEVICE_EP_INTR_MSK_UDC_REG__IN_EP_MASK_WIDTH 16
#define USB_DEVICE_EP_INTR_MSK_UDC_REG__IN_EP_MASK_RESET_VAL 0
#define USB_DEVICE_EP_INTR_MSK_UDC_REG__IN_EP_MASK_RMASK 0xffff
#define USB_DEVICE_EP_INTR_MSK_UDC_REG__IN_EP_MASK_MASK  0xffff
#define USB_DEVICE_EP_INTR_MSK_UDC_REG__IN_EP_MASK_FIELD 0,15

#define USB_DEVICE_EP_INTR_MSK_UDC_REG__OUT_EP_MASK_SHIFT 16
#define USB_DEVICE_EP_INTR_MSK_UDC_REG__OUT_EP_MASK_WIDTH 16
#define USB_DEVICE_EP_INTR_MSK_UDC_REG__OUT_EP_MASK_RESET_VAL 0
#define USB_DEVICE_EP_INTR_MSK_UDC_REG__OUT_EP_MASK_RMASK 0xffff
#define USB_DEVICE_EP_INTR_MSK_UDC_REG__OUT_EP_MASK_MASK  0xffff0000
#define USB_DEVICE_EP_INTR_MSK_UDC_REG__OUT_EP_MASK_FIELD 16,31


/*
 * EP_INTR_UDC_REG_ADDR.
 * The Endpoint Interrupt register is used to set endpoint-level interrupts.
 * Since all 16 endpoints can be
 * bidirectional, each endpoint has two interrupt bits (one for each
 * direction). The application needs to
 * clear the interrupt by writing a 1'b1 to the correct bit after checking
 * the register.
 */
#define USB_DEVICE_EP_INTR_UDC_REG 0x10414

#define USB_DEVICE_EP_INTR_UDC_REG__IN_EP_SHIFT 0
#define USB_DEVICE_EP_INTR_UDC_REG__IN_EP_WIDTH 16
#define USB_DEVICE_EP_INTR_UDC_REG__IN_EP_RESET_VAL 0
#define USB_DEVICE_EP_INTR_UDC_REG__IN_EP_RMASK 0xffff
#define USB_DEVICE_EP_INTR_UDC_REG__IN_EP_MASK  0xffff
#define USB_DEVICE_EP_INTR_UDC_REG__IN_EP_FIELD 0,15

#define USB_DEVICE_EP_INTR_UDC_REG__OUT_EP_SHIFT 16
#define USB_DEVICE_EP_INTR_UDC_REG__OUT_EP_WIDTH 16
#define USB_DEVICE_EP_INTR_UDC_REG__OUT_EP_RESET_VAL 0
#define USB_DEVICE_EP_INTR_UDC_REG__OUT_EP_RMASK 0xffff
#define USB_DEVICE_EP_INTR_UDC_REG__OUT_EP_MASK  0xffff0000
#define USB_DEVICE_EP_INTR_UDC_REG__OUT_EP_FIELD 16,31


/*
 * Error Status.
 * Indicators for various fatal and non-fatal USB error conditions
 */
#define USB_DEVICE_ERROR_STATUS 0x0210

#define USB_DEVICE_ERROR_STATUS__MMIO_ILL_OPC_SHIFT 0
#define USB_DEVICE_ERROR_STATUS__MMIO_ILL_OPC_WIDTH 1
#define USB_DEVICE_ERROR_STATUS__MMIO_ILL_OPC_RESET_VAL 0
#define USB_DEVICE_ERROR_STATUS__MMIO_ILL_OPC_RMASK 0x1
#define USB_DEVICE_ERROR_STATUS__MMIO_ILL_OPC_MASK  0x1
#define USB_DEVICE_ERROR_STATUS__MMIO_ILL_OPC_FIELD 0,0

#define USB_DEVICE_ERROR_STATUS__STANDALONE_DEVICE_FSM_SHIFT 1
#define USB_DEVICE_ERROR_STATUS__STANDALONE_DEVICE_FSM_WIDTH 1
#define USB_DEVICE_ERROR_STATUS__STANDALONE_DEVICE_FSM_RESET_VAL 0
#define USB_DEVICE_ERROR_STATUS__STANDALONE_DEVICE_FSM_RMASK 0x1
#define USB_DEVICE_ERROR_STATUS__STANDALONE_DEVICE_FSM_MASK  0x2
#define USB_DEVICE_ERROR_STATUS__STANDALONE_DEVICE_FSM_FIELD 1,1

#define USB_DEVICE_ERROR_STATUS__STANDALONE_DEVICE_OUT_FSM_SHIFT 2
#define USB_DEVICE_ERROR_STATUS__STANDALONE_DEVICE_OUT_FSM_WIDTH 1
#define USB_DEVICE_ERROR_STATUS__STANDALONE_DEVICE_OUT_FSM_RESET_VAL 0
#define USB_DEVICE_ERROR_STATUS__STANDALONE_DEVICE_OUT_FSM_RMASK 0x1
#define USB_DEVICE_ERROR_STATUS__STANDALONE_DEVICE_OUT_FSM_MASK  0x4
#define USB_DEVICE_ERROR_STATUS__STANDALONE_DEVICE_OUT_FSM_FIELD 2,2

#define USB_DEVICE_ERROR_STATUS__STANDALONE_DEVICE_IN_FSM_SHIFT 3
#define USB_DEVICE_ERROR_STATUS__STANDALONE_DEVICE_IN_FSM_WIDTH 1
#define USB_DEVICE_ERROR_STATUS__STANDALONE_DEVICE_IN_FSM_RESET_VAL 0
#define USB_DEVICE_ERROR_STATUS__STANDALONE_DEVICE_IN_FSM_RMASK 0x1
#define USB_DEVICE_ERROR_STATUS__STANDALONE_DEVICE_IN_FSM_MASK  0x8
#define USB_DEVICE_ERROR_STATUS__STANDALONE_DEVICE_IN_FSM_FIELD 3,3


/*
 * MMIO HFH Table Init Control.
 * Initialization control for the hash-for-home tables.
 */
#define USB_DEVICE_HFH_INIT_CTL 0x0050

#define USB_DEVICE_HFH_INIT_CTL__IDX_SHIFT 0
#define USB_DEVICE_HFH_INIT_CTL__IDX_WIDTH 7
#define USB_DEVICE_HFH_INIT_CTL__IDX_RESET_VAL 0
#define USB_DEVICE_HFH_INIT_CTL__IDX_RMASK 0x7f
#define USB_DEVICE_HFH_INIT_CTL__IDX_MASK  0x7f
#define USB_DEVICE_HFH_INIT_CTL__IDX_FIELD 0,6


/*
 * HFH Table Data.
 * Read/Write data for hash-for-home table
 */
#define USB_DEVICE_HFH_INIT_DAT 0x0058

#define USB_DEVICE_HFH_INIT_DAT__FRACT_SHIFT 0
#define USB_DEVICE_HFH_INIT_DAT__FRACT_WIDTH 7
#define USB_DEVICE_HFH_INIT_DAT__FRACT_RMASK 0x7f
#define USB_DEVICE_HFH_INIT_DAT__FRACT_MASK  0x7f
#define USB_DEVICE_HFH_INIT_DAT__FRACT_FIELD 0,6

#define USB_DEVICE_HFH_INIT_DAT__TILEB_SHIFT 7
#define USB_DEVICE_HFH_INIT_DAT__TILEB_WIDTH 8
#define USB_DEVICE_HFH_INIT_DAT__TILEB_RMASK 0xff
#define USB_DEVICE_HFH_INIT_DAT__TILEB_MASK  0x7f80
#define USB_DEVICE_HFH_INIT_DAT__TILEB_FIELD 7,14

#define USB_DEVICE_HFH_INIT_DAT__TILEA_SHIFT 15
#define USB_DEVICE_HFH_INIT_DAT__TILEA_WIDTH 8
#define USB_DEVICE_HFH_INIT_DAT__TILEA_RMASK 0xff
#define USB_DEVICE_HFH_INIT_DAT__TILEA_MASK  0x7f8000
#define USB_DEVICE_HFH_INIT_DAT__TILEA_FIELD 15,22


/*
 * Bindings for interrupt vectors.
 * This register provides read/write access to all of the interrupt bindings
 * for the rshim.  The VEC_SEL field is used to select the vector being
 * configured and the BIND_SEL selects the interrupt within the vector.  To
 * read a binding, first write the VEC_SEL and BIND_SEL fields along with a 1
 * in the NW field.  Then read back the register.
 */
#define USB_DEVICE_INT_BIND 0x0300

#define USB_DEVICE_INT_BIND__ENABLE_SHIFT 0
#define USB_DEVICE_INT_BIND__ENABLE_WIDTH 1
#define USB_DEVICE_INT_BIND__ENABLE_RESET_VAL 0
#define USB_DEVICE_INT_BIND__ENABLE_RMASK 0x1
#define USB_DEVICE_INT_BIND__ENABLE_MASK  0x1
#define USB_DEVICE_INT_BIND__ENABLE_FIELD 0,0

#define USB_DEVICE_INT_BIND__MODE_SHIFT 1
#define USB_DEVICE_INT_BIND__MODE_WIDTH 1
#define USB_DEVICE_INT_BIND__MODE_RESET_VAL 0
#define USB_DEVICE_INT_BIND__MODE_RMASK 0x1
#define USB_DEVICE_INT_BIND__MODE_MASK  0x2
#define USB_DEVICE_INT_BIND__MODE_FIELD 1,1

#define USB_DEVICE_INT_BIND__TILEID_SHIFT 2
#define USB_DEVICE_INT_BIND__TILEID_WIDTH 8
#define USB_DEVICE_INT_BIND__TILEID_RMASK 0xff
#define USB_DEVICE_INT_BIND__TILEID_MASK  0x3fc
#define USB_DEVICE_INT_BIND__TILEID_FIELD 2,9

#define USB_DEVICE_INT_BIND__INT_NUM_SHIFT 10
#define USB_DEVICE_INT_BIND__INT_NUM_WIDTH 2
#define USB_DEVICE_INT_BIND__INT_NUM_RMASK 0x3
#define USB_DEVICE_INT_BIND__INT_NUM_MASK  0xc00
#define USB_DEVICE_INT_BIND__INT_NUM_FIELD 10,11

#define USB_DEVICE_INT_BIND__EVT_NUM_SHIFT 12
#define USB_DEVICE_INT_BIND__EVT_NUM_WIDTH 5
#define USB_DEVICE_INT_BIND__EVT_NUM_RMASK 0x1f
#define USB_DEVICE_INT_BIND__EVT_NUM_MASK  0x1f000
#define USB_DEVICE_INT_BIND__EVT_NUM_FIELD 12,16

#define USB_DEVICE_INT_BIND__VEC_SEL_SHIFT 33
#define USB_DEVICE_INT_BIND__VEC_SEL_WIDTH 1
#define USB_DEVICE_INT_BIND__VEC_SEL_RESET_VAL 0
#define USB_DEVICE_INT_BIND__VEC_SEL_RMASK 0x1
#define USB_DEVICE_INT_BIND__VEC_SEL_MASK  _64bit(0x200000000)
#define USB_DEVICE_INT_BIND__VEC_SEL_FIELD 33,33
#define USB_DEVICE_INT_BIND__VEC_SEL_VAL_GENERAL_INTS 0x0
#define USB_DEVICE_INT_BIND__VEC_SEL_VAL_MAC_INTS 0x1

#define USB_DEVICE_INT_BIND__BIND_SEL_SHIFT 40
#define USB_DEVICE_INT_BIND__BIND_SEL_WIDTH 2
#define USB_DEVICE_INT_BIND__BIND_SEL_RMASK 0x3
#define USB_DEVICE_INT_BIND__BIND_SEL_MASK  _64bit(0x30000000000)
#define USB_DEVICE_INT_BIND__BIND_SEL_FIELD 40,41

#define USB_DEVICE_INT_BIND__NW_SHIFT 48
#define USB_DEVICE_INT_BIND__NW_WIDTH 1
#define USB_DEVICE_INT_BIND__NW_RESET_VAL 0
#define USB_DEVICE_INT_BIND__NW_RMASK 0x1
#define USB_DEVICE_INT_BIND__NW_MASK  _64bit(0x1000000000000)
#define USB_DEVICE_INT_BIND__NW_FIELD 48,48


/*
 * Interrupt vector-0, write-one-to-clear.
 * This describes the interrupt status vector that is accessible through
 * INT_VEC0_W1TC and INT_VEC0_RTC.
 */
#define USB_DEVICE_INT_VEC0 0x0308

#define USB_DEVICE_INT_VEC0__MMIO_ERROR_SHIFT 1
#define USB_DEVICE_INT_VEC0__MMIO_ERROR_WIDTH 1
#define USB_DEVICE_INT_VEC0__MMIO_ERROR_RESET_VAL 0
#define USB_DEVICE_INT_VEC0__MMIO_ERROR_RMASK 0x1
#define USB_DEVICE_INT_VEC0__MMIO_ERROR_MASK  0x2
#define USB_DEVICE_INT_VEC0__MMIO_ERROR_FIELD 1,1

#define USB_DEVICE_INT_VEC0__MAC_ACCESS_ERROR_SHIFT 2
#define USB_DEVICE_INT_VEC0__MAC_ACCESS_ERROR_WIDTH 1
#define USB_DEVICE_INT_VEC0__MAC_ACCESS_ERROR_RESET_VAL 0
#define USB_DEVICE_INT_VEC0__MAC_ACCESS_ERROR_RMASK 0x1
#define USB_DEVICE_INT_VEC0__MAC_ACCESS_ERROR_MASK  0x4
#define USB_DEVICE_INT_VEC0__MAC_ACCESS_ERROR_FIELD 2,2


/*
 * Interrupt vector-0, read-to-clear.
 * Interrupt status vector with read-to-clear functionality.  Provides access
 * to the same status bits that are visible in INT_VEC0_W1TC.  Reading this
 * register clears all of the associated interrupts. This vector contains the
 * following interrupts:
 * 0: RSVD0                 - NOT IMPLEMENTED
 *
 * 1: MMIO_ERROR            - An MMIO request encountered an error.  Error
 * info captured in USB_DEVICE_CFG_MMIO_ERROR_INFO.
 *
 * 2: MAC_ACCESS_ERROR      - A MAC access encountered an error. Exception
 * information contained in USB_DEVICE_MAC_ACCESS_ERROR_INFO
 *
 * 3: RSVD3                 - NOT IMPLEMENTED
 */
#define USB_DEVICE_INT_VEC0_RTC 0x0310

#define USB_DEVICE_INT_VEC0_RTC__INT_VEC0_RTC_SHIFT 0
#define USB_DEVICE_INT_VEC0_RTC__INT_VEC0_RTC_WIDTH 4
#define USB_DEVICE_INT_VEC0_RTC__INT_VEC0_RTC_RESET_VAL 0
#define USB_DEVICE_INT_VEC0_RTC__INT_VEC0_RTC_RMASK 0xf
#define USB_DEVICE_INT_VEC0_RTC__INT_VEC0_RTC_MASK  0xf
#define USB_DEVICE_INT_VEC0_RTC__INT_VEC0_RTC_FIELD 0,3


/*
 * Interrupt vector-0, write-one-to-clear.
 * Interrupt status vector with write-one-to-clear functionality.  Provides
 * access to the same status bits that are visible in INT_VEC0_RTC.  Writing
 * a 1 clears the status bit. This vector contains the following interrupts:
 * 0: RSVD0                 - NOT IMPLEMENTED
 *
 * 1: MMIO_ERROR            - An MMIO request encountered an error.  Error
 * info captured in USB_DEVICE_CFG_MMIO_ERROR_INFO.
 *
 * 2: MAC_ACCESS_ERROR      - A MAC access encountered an error. Exception
 * information contained in USB_DEVICE_MAC_ACCESS_ERROR_INFO
 *
 * 3: RSVD3                 - NOT IMPLEMENTED
 */
#define USB_DEVICE_INT_VEC0_W1TC 0x0308

#define USB_DEVICE_INT_VEC0_W1TC__INT_VEC0_W1TC_SHIFT 0
#define USB_DEVICE_INT_VEC0_W1TC__INT_VEC0_W1TC_WIDTH 4
#define USB_DEVICE_INT_VEC0_W1TC__INT_VEC0_W1TC_RESET_VAL 0
#define USB_DEVICE_INT_VEC0_W1TC__INT_VEC0_W1TC_RMASK 0xf
#define USB_DEVICE_INT_VEC0_W1TC__INT_VEC0_W1TC_MASK  0xf
#define USB_DEVICE_INT_VEC0_W1TC__INT_VEC0_W1TC_FIELD 0,3


/*
 * Interrupt vector-1, write-one-to-clear.
 * This describes the interrupt status vector that is accessible through
 * INT_VEC1_W1TC and INT_VEC1_RTC.
 */
#define USB_DEVICE_INT_VEC1 0x0318

#define USB_DEVICE_INT_VEC1__MAC_INT_SHIFT 0
#define USB_DEVICE_INT_VEC1__MAC_INT_WIDTH 1
#define USB_DEVICE_INT_VEC1__MAC_INT_RESET_VAL 0
#define USB_DEVICE_INT_VEC1__MAC_INT_RMASK 0x1
#define USB_DEVICE_INT_VEC1__MAC_INT_MASK  0x1
#define USB_DEVICE_INT_VEC1__MAC_INT_FIELD 0,0


/*
 * Interrupt vector-0, read-to-clear.
 * Interrupt status vector with read-to-clear functionality.  Provides access
 * to the same status bits that are visible in INT_VEC1_W1TC.  Reading this
 * register clears all of the associated interrupts. This vector contains the
 * following interrupts:
 * 0: MAC_INT               - MAC device or endpoint interrupt.
 *
 * 1: RSVD1                 - NOT IMPLEMENTED
 *
 * 2: RSVD2                 - NOT IMPLEMENTED
 *
 * 3: RSVD3                 - NOT IMPLEMENTED
 */
#define USB_DEVICE_INT_VEC1_RTC 0x0320

#define USB_DEVICE_INT_VEC1_RTC__INT_VEC1_RTC_SHIFT 0
#define USB_DEVICE_INT_VEC1_RTC__INT_VEC1_RTC_WIDTH 4
#define USB_DEVICE_INT_VEC1_RTC__INT_VEC1_RTC_RESET_VAL 0
#define USB_DEVICE_INT_VEC1_RTC__INT_VEC1_RTC_RMASK 0xf
#define USB_DEVICE_INT_VEC1_RTC__INT_VEC1_RTC_MASK  0xf
#define USB_DEVICE_INT_VEC1_RTC__INT_VEC1_RTC_FIELD 0,3


/*
 * Interrupt vector-1, write-one-to-clear.
 * Interrupt status vector with write-one-to-clear functionality.  Provides
 * access to the same status bits that are visible in INT_VEC1_RTC.  Writing
 * a 1 clears the status bit. This vector contains the following interrupts:
 * 0: MAC_INT               - MAC device or endpoint interrupt.
 *
 * 1: RSVD1                 - NOT IMPLEMENTED
 *
 * 2: RSVD2                 - NOT IMPLEMENTED
 *
 * 3: RSVD3                 - NOT IMPLEMENTED
 */
#define USB_DEVICE_INT_VEC1_W1TC 0x0318

#define USB_DEVICE_INT_VEC1_W1TC__INT_VEC1_W1TC_SHIFT 0
#define USB_DEVICE_INT_VEC1_W1TC__INT_VEC1_W1TC_WIDTH 4
#define USB_DEVICE_INT_VEC1_W1TC__INT_VEC1_W1TC_RESET_VAL 0
#define USB_DEVICE_INT_VEC1_W1TC__INT_VEC1_W1TC_RMASK 0xf
#define USB_DEVICE_INT_VEC1_W1TC__INT_VEC1_W1TC_MASK  0xf
#define USB_DEVICE_INT_VEC1_W1TC__INT_VEC1_W1TC_FIELD 0,3


/*
 * MAC Access Error Information.
 * Provides diagnostics information when a MAC response error occurs.
 * Captured whenever the MAC_ACCESS_ERROR interrupt condition occurs which
 * includes size errors, read/write errors, and protection errors.
 */
#define USB_DEVICE_MAC_ACCESS_ERROR_INFO 0x0220

#define USB_DEVICE_MAC_ACCESS_ERROR_INFO__ADDR_SHIFT 0
#define USB_DEVICE_MAC_ACCESS_ERROR_INFO__ADDR_WIDTH 32
#define USB_DEVICE_MAC_ACCESS_ERROR_INFO__ADDR_RESET_VAL 0
#define USB_DEVICE_MAC_ACCESS_ERROR_INFO__ADDR_RMASK 0xffffffff
#define USB_DEVICE_MAC_ACCESS_ERROR_INFO__ADDR_MASK  0xffffffff
#define USB_DEVICE_MAC_ACCESS_ERROR_INFO__ADDR_FIELD 0,31

#define USB_DEVICE_MAC_ACCESS_ERROR_INFO__SIZE_SHIFT 32
#define USB_DEVICE_MAC_ACCESS_ERROR_INFO__SIZE_WIDTH 3
#define USB_DEVICE_MAC_ACCESS_ERROR_INFO__SIZE_RESET_VAL 0
#define USB_DEVICE_MAC_ACCESS_ERROR_INFO__SIZE_RMASK 0x7
#define USB_DEVICE_MAC_ACCESS_ERROR_INFO__SIZE_MASK  _64bit(0x700000000)
#define USB_DEVICE_MAC_ACCESS_ERROR_INFO__SIZE_FIELD 32,34


/*
 * MAC_APP_STATUS.
 * Suspend Status
 */
#define USB_DEVICE_MAC_APP_STATUS 0x1020

#define USB_DEVICE_MAC_APP_STATUS__UA_SUSPEND_O_SHIFT 0
#define USB_DEVICE_MAC_APP_STATUS__UA_SUSPEND_O_WIDTH 1
#define USB_DEVICE_MAC_APP_STATUS__UA_SUSPEND_O_RESET_VAL 0
#define USB_DEVICE_MAC_APP_STATUS__UA_SUSPEND_O_RMASK 0x1
#define USB_DEVICE_MAC_APP_STATUS__UA_SUSPEND_O_MASK  0x1
#define USB_DEVICE_MAC_APP_STATUS__UA_SUSPEND_O_FIELD 0,0


/*
 * MAC_CSR_STATUS.
 * CSR Status
 */
#define USB_DEVICE_MAC_CSR_STATUS 0x1018

#define USB_DEVICE_MAC_CSR_STATUS__UDC_CSR_BUSY_SHIFT 0
#define USB_DEVICE_MAC_CSR_STATUS__UDC_CSR_BUSY_WIDTH 1
#define USB_DEVICE_MAC_CSR_STATUS__UDC_CSR_BUSY_RESET_VAL 0
#define USB_DEVICE_MAC_CSR_STATUS__UDC_CSR_BUSY_RMASK 0x1
#define USB_DEVICE_MAC_CSR_STATUS__UDC_CSR_BUSY_MASK  0x1
#define USB_DEVICE_MAC_CSR_STATUS__UDC_CSR_BUSY_FIELD 0,0


/*
 * MAC_DEBUG_STATUS.
 * Debug Status
 */
#define USB_DEVICE_MAC_DEBUG_STATUS 0x1028

#define USB_DEVICE_MAC_DEBUG_STATUS__DEBUG_PORT_O_SHIFT 0
#define USB_DEVICE_MAC_DEBUG_STATUS__DEBUG_PORT_O_WIDTH 8
#define USB_DEVICE_MAC_DEBUG_STATUS__DEBUG_PORT_O_RESET_VAL 0
#define USB_DEVICE_MAC_DEBUG_STATUS__DEBUG_PORT_O_RMASK 0xff
#define USB_DEVICE_MAC_DEBUG_STATUS__DEBUG_PORT_O_MASK  0xff
#define USB_DEVICE_MAC_DEBUG_STATUS__DEBUG_PORT_O_FIELD 0,7

#define USB_DEVICE_MAC_DEBUG_STATUS__DEBUG_SENT_NAK_O_SHIFT 8
#define USB_DEVICE_MAC_DEBUG_STATUS__DEBUG_SENT_NAK_O_WIDTH 1
#define USB_DEVICE_MAC_DEBUG_STATUS__DEBUG_SENT_NAK_O_RESET_VAL 0
#define USB_DEVICE_MAC_DEBUG_STATUS__DEBUG_SENT_NAK_O_RMASK 0x1
#define USB_DEVICE_MAC_DEBUG_STATUS__DEBUG_SENT_NAK_O_MASK  0x100
#define USB_DEVICE_MAC_DEBUG_STATUS__DEBUG_SENT_NAK_O_FIELD 8,8

#define USB_DEVICE_MAC_DEBUG_STATUS__DEBUG_SENT_STALL_O_SHIFT 9
#define USB_DEVICE_MAC_DEBUG_STATUS__DEBUG_SENT_STALL_O_WIDTH 1
#define USB_DEVICE_MAC_DEBUG_STATUS__DEBUG_SENT_STALL_O_RESET_VAL 0
#define USB_DEVICE_MAC_DEBUG_STATUS__DEBUG_SENT_STALL_O_RMASK 0x1
#define USB_DEVICE_MAC_DEBUG_STATUS__DEBUG_SENT_STALL_O_MASK  0x200
#define USB_DEVICE_MAC_DEBUG_STATUS__DEBUG_SENT_STALL_O_FIELD 9,9

#define USB_DEVICE_MAC_DEBUG_STATUS__DEBUG_PKT_DIR_O_SHIFT 10
#define USB_DEVICE_MAC_DEBUG_STATUS__DEBUG_PKT_DIR_O_WIDTH 1
#define USB_DEVICE_MAC_DEBUG_STATUS__DEBUG_PKT_DIR_O_RESET_VAL 0
#define USB_DEVICE_MAC_DEBUG_STATUS__DEBUG_PKT_DIR_O_RMASK 0x1
#define USB_DEVICE_MAC_DEBUG_STATUS__DEBUG_PKT_DIR_O_MASK  0x400
#define USB_DEVICE_MAC_DEBUG_STATUS__DEBUG_PKT_DIR_O_FIELD 10,10

#define USB_DEVICE_MAC_DEBUG_STATUS__DEBUG_UTLI_EPNUM_O_SHIFT 11
#define USB_DEVICE_MAC_DEBUG_STATUS__DEBUG_UTLI_EPNUM_O_WIDTH 4
#define USB_DEVICE_MAC_DEBUG_STATUS__DEBUG_UTLI_EPNUM_O_RESET_VAL 0
#define USB_DEVICE_MAC_DEBUG_STATUS__DEBUG_UTLI_EPNUM_O_RMASK 0xf
#define USB_DEVICE_MAC_DEBUG_STATUS__DEBUG_UTLI_EPNUM_O_MASK  0x7800
#define USB_DEVICE_MAC_DEBUG_STATUS__DEBUG_UTLI_EPNUM_O_FIELD 11,14


/*
 * MAC_INTERRUPT_STATUS.
 * Interrupt status
 */
#define USB_DEVICE_MAC_INTERRUPT_STATUS 0x1010

#define USB_DEVICE_MAC_INTERRUPT_STATUS__UA_INT_O_SHIFT 0
#define USB_DEVICE_MAC_INTERRUPT_STATUS__UA_INT_O_WIDTH 1
#define USB_DEVICE_MAC_INTERRUPT_STATUS__UA_INT_O_RESET_VAL 0
#define USB_DEVICE_MAC_INTERRUPT_STATUS__UA_INT_O_RMASK 0x1
#define USB_DEVICE_MAC_INTERRUPT_STATUS__UA_INT_O_MASK  0x1
#define USB_DEVICE_MAC_INTERRUPT_STATUS__UA_INT_O_FIELD 0,0


/*
 * USB Device MAC Optional Sideband Control.
 * Input for USB Device Optional Sideband Signals
 */
#define USB_DEVICE_MAC_OPTIONAL_SIDEBAND_CONTROL 0x1008

#define USB_DEVICE_MAC_OPTIONAL_SIDEBAND_CONTROL__SS_SEND_NULL_ENA_I_SHIFT 0
#define USB_DEVICE_MAC_OPTIONAL_SIDEBAND_CONTROL__SS_SEND_NULL_ENA_I_WIDTH 1
#define USB_DEVICE_MAC_OPTIONAL_SIDEBAND_CONTROL__SS_SEND_NULL_ENA_I_RESET_VAL 0
#define USB_DEVICE_MAC_OPTIONAL_SIDEBAND_CONTROL__SS_SEND_NULL_ENA_I_RMASK 0x1
#define USB_DEVICE_MAC_OPTIONAL_SIDEBAND_CONTROL__SS_SEND_NULL_ENA_I_MASK  0x1
#define USB_DEVICE_MAC_OPTIONAL_SIDEBAND_CONTROL__SS_SEND_NULL_ENA_I_FIELD 0,0

#define USB_DEVICE_MAC_OPTIONAL_SIDEBAND_CONTROL__SS_SET_OPMODE_POR_I_SHIFT 1
#define USB_DEVICE_MAC_OPTIONAL_SIDEBAND_CONTROL__SS_SET_OPMODE_POR_I_WIDTH 1
#define USB_DEVICE_MAC_OPTIONAL_SIDEBAND_CONTROL__SS_SET_OPMODE_POR_I_RESET_VAL 0
#define USB_DEVICE_MAC_OPTIONAL_SIDEBAND_CONTROL__SS_SET_OPMODE_POR_I_RMASK 0x1
#define USB_DEVICE_MAC_OPTIONAL_SIDEBAND_CONTROL__SS_SET_OPMODE_POR_I_MASK  0x2
#define USB_DEVICE_MAC_OPTIONAL_SIDEBAND_CONTROL__SS_SET_OPMODE_POR_I_FIELD 1,1

#define USB_DEVICE_MAC_OPTIONAL_SIDEBAND_CONTROL__SS_CLOSE_DESC_ENA_I_SHIFT 2
#define USB_DEVICE_MAC_OPTIONAL_SIDEBAND_CONTROL__SS_CLOSE_DESC_ENA_I_WIDTH 1
#define USB_DEVICE_MAC_OPTIONAL_SIDEBAND_CONTROL__SS_CLOSE_DESC_ENA_I_RESET_VAL 0
#define USB_DEVICE_MAC_OPTIONAL_SIDEBAND_CONTROL__SS_CLOSE_DESC_ENA_I_RMASK 0x1
#define USB_DEVICE_MAC_OPTIONAL_SIDEBAND_CONTROL__SS_CLOSE_DESC_ENA_I_MASK  0x4
#define USB_DEVICE_MAC_OPTIONAL_SIDEBAND_CONTROL__SS_CLOSE_DESC_ENA_I_FIELD 2,2

#define USB_DEVICE_MAC_OPTIONAL_SIDEBAND_CONTROL__SS_CDC_ISO_SHORT_DIS_I_SHIFT 3
#define USB_DEVICE_MAC_OPTIONAL_SIDEBAND_CONTROL__SS_CDC_ISO_SHORT_DIS_I_WIDTH 1
#define USB_DEVICE_MAC_OPTIONAL_SIDEBAND_CONTROL__SS_CDC_ISO_SHORT_DIS_I_RESET_VAL 0
#define USB_DEVICE_MAC_OPTIONAL_SIDEBAND_CONTROL__SS_CDC_ISO_SHORT_DIS_I_RMASK 0x1
#define USB_DEVICE_MAC_OPTIONAL_SIDEBAND_CONTROL__SS_CDC_ISO_SHORT_DIS_I_MASK  0x8
#define USB_DEVICE_MAC_OPTIONAL_SIDEBAND_CONTROL__SS_CDC_ISO_SHORT_DIS_I_FIELD 3,3

#define USB_DEVICE_MAC_OPTIONAL_SIDEBAND_CONTROL__SS_CLEAR_NAK_NEMPTY_EN_I_SHIFT 4
#define USB_DEVICE_MAC_OPTIONAL_SIDEBAND_CONTROL__SS_CLEAR_NAK_NEMPTY_EN_I_WIDTH 1
#define USB_DEVICE_MAC_OPTIONAL_SIDEBAND_CONTROL__SS_CLEAR_NAK_NEMPTY_EN_I_RESET_VAL 1
#define USB_DEVICE_MAC_OPTIONAL_SIDEBAND_CONTROL__SS_CLEAR_NAK_NEMPTY_EN_I_RMASK 0x1
#define USB_DEVICE_MAC_OPTIONAL_SIDEBAND_CONTROL__SS_CLEAR_NAK_NEMPTY_EN_I_MASK  0x10
#define USB_DEVICE_MAC_OPTIONAL_SIDEBAND_CONTROL__SS_CLEAR_NAK_NEMPTY_EN_I_FIELD 4,4

#define USB_DEVICE_MAC_OPTIONAL_SIDEBAND_CONTROL__SS_DIS_ISO_OUT_NAK_EN_I_SHIFT 5
#define USB_DEVICE_MAC_OPTIONAL_SIDEBAND_CONTROL__SS_DIS_ISO_OUT_NAK_EN_I_WIDTH 1
#define USB_DEVICE_MAC_OPTIONAL_SIDEBAND_CONTROL__SS_DIS_ISO_OUT_NAK_EN_I_RESET_VAL 0
#define USB_DEVICE_MAC_OPTIONAL_SIDEBAND_CONTROL__SS_DIS_ISO_OUT_NAK_EN_I_RMASK 0x1
#define USB_DEVICE_MAC_OPTIONAL_SIDEBAND_CONTROL__SS_DIS_ISO_OUT_NAK_EN_I_MASK  0x20
#define USB_DEVICE_MAC_OPTIONAL_SIDEBAND_CONTROL__SS_DIS_ISO_OUT_NAK_EN_I_FIELD 5,5

#define USB_DEVICE_MAC_OPTIONAL_SIDEBAND_CONTROL__SS_SET_STALL_NEMPTY_EN_I_SHIFT 6
#define USB_DEVICE_MAC_OPTIONAL_SIDEBAND_CONTROL__SS_SET_STALL_NEMPTY_EN_I_WIDTH 1
#define USB_DEVICE_MAC_OPTIONAL_SIDEBAND_CONTROL__SS_SET_STALL_NEMPTY_EN_I_RESET_VAL 0
#define USB_DEVICE_MAC_OPTIONAL_SIDEBAND_CONTROL__SS_SET_STALL_NEMPTY_EN_I_RMASK 0x1
#define USB_DEVICE_MAC_OPTIONAL_SIDEBAND_CONTROL__SS_SET_STALL_NEMPTY_EN_I_MASK  0x40
#define USB_DEVICE_MAC_OPTIONAL_SIDEBAND_CONTROL__SS_SET_STALL_NEMPTY_EN_I_FIELD 6,6

#define USB_DEVICE_MAC_OPTIONAL_SIDEBAND_CONTROL__SS_SET_CLR_STALL_ENA_I_SHIFT 7
#define USB_DEVICE_MAC_OPTIONAL_SIDEBAND_CONTROL__SS_SET_CLR_STALL_ENA_I_WIDTH 1
#define USB_DEVICE_MAC_OPTIONAL_SIDEBAND_CONTROL__SS_SET_CLR_STALL_ENA_I_RESET_VAL 0
#define USB_DEVICE_MAC_OPTIONAL_SIDEBAND_CONTROL__SS_SET_CLR_STALL_ENA_I_RMASK 0x1
#define USB_DEVICE_MAC_OPTIONAL_SIDEBAND_CONTROL__SS_SET_CLR_STALL_ENA_I_MASK  0x80
#define USB_DEVICE_MAC_OPTIONAL_SIDEBAND_CONTROL__SS_SET_CLR_STALL_ENA_I_FIELD 7,7

#define USB_DEVICE_MAC_OPTIONAL_SIDEBAND_CONTROL__SS_SNAK_BIT_ENH_EN_I_SHIFT 8
#define USB_DEVICE_MAC_OPTIONAL_SIDEBAND_CONTROL__SS_SNAK_BIT_ENH_EN_I_WIDTH 1
#define USB_DEVICE_MAC_OPTIONAL_SIDEBAND_CONTROL__SS_SNAK_BIT_ENH_EN_I_RESET_VAL 1
#define USB_DEVICE_MAC_OPTIONAL_SIDEBAND_CONTROL__SS_SNAK_BIT_ENH_EN_I_RMASK 0x1
#define USB_DEVICE_MAC_OPTIONAL_SIDEBAND_CONTROL__SS_SNAK_BIT_ENH_EN_I_MASK  0x100
#define USB_DEVICE_MAC_OPTIONAL_SIDEBAND_CONTROL__SS_SNAK_BIT_ENH_EN_I_FIELD 8,8


/*
 * USB Device MAC Sideband Control.
 * Input for USB Device Sideband Signals
 */
#define USB_DEVICE_MAC_SIDEBAND_CONTROL 0x1000

#define USB_DEVICE_MAC_SIDEBAND_CONTROL__SS_SETCLR_RMTWKP_ENA_I_SHIFT 0
#define USB_DEVICE_MAC_SIDEBAND_CONTROL__SS_SETCLR_RMTWKP_ENA_I_WIDTH 1
#define USB_DEVICE_MAC_SIDEBAND_CONTROL__SS_SETCLR_RMTWKP_ENA_I_RESET_VAL 0
#define USB_DEVICE_MAC_SIDEBAND_CONTROL__SS_SETCLR_RMTWKP_ENA_I_RMASK 0x1
#define USB_DEVICE_MAC_SIDEBAND_CONTROL__SS_SETCLR_RMTWKP_ENA_I_MASK  0x1
#define USB_DEVICE_MAC_SIDEBAND_CONTROL__SS_SETCLR_RMTWKP_ENA_I_FIELD 0,0


/*
 * Memory Info.
 * This register provides information about memory setup required for this
 * device.
 */
#define USB_DEVICE_MEM_INFO 0x0018

#define USB_DEVICE_MEM_INFO__REQ_PORTS_SHIFT 0
#define USB_DEVICE_MEM_INFO__REQ_PORTS_WIDTH 32
#define USB_DEVICE_MEM_INFO__REQ_PORTS_RESET_VAL 32768
#define USB_DEVICE_MEM_INFO__REQ_PORTS_RMASK 0xffffffff
#define USB_DEVICE_MEM_INFO__REQ_PORTS_MASK  0xffffffff
#define USB_DEVICE_MEM_INFO__REQ_PORTS_FIELD 0,31

#define USB_DEVICE_MEM_INFO__NUM_HFH_TBL_SHIFT 32
#define USB_DEVICE_MEM_INFO__NUM_HFH_TBL_WIDTH 4
#define USB_DEVICE_MEM_INFO__NUM_HFH_TBL_RESET_VAL 0
#define USB_DEVICE_MEM_INFO__NUM_HFH_TBL_RMASK 0xf
#define USB_DEVICE_MEM_INFO__NUM_HFH_TBL_MASK  _64bit(0xf00000000)
#define USB_DEVICE_MEM_INFO__NUM_HFH_TBL_FIELD 32,35

#define USB_DEVICE_MEM_INFO__NUM_ASIDS_SHIFT 40
#define USB_DEVICE_MEM_INFO__NUM_ASIDS_WIDTH 8
#define USB_DEVICE_MEM_INFO__NUM_ASIDS_RESET_VAL 0
#define USB_DEVICE_MEM_INFO__NUM_ASIDS_RMASK 0xff
#define USB_DEVICE_MEM_INFO__NUM_ASIDS_MASK  _64bit(0xff0000000000)
#define USB_DEVICE_MEM_INFO__NUM_ASIDS_FIELD 40,47

#define USB_DEVICE_MEM_INFO__NUM_TLB_ENT_SHIFT 48
#define USB_DEVICE_MEM_INFO__NUM_TLB_ENT_WIDTH 8
#define USB_DEVICE_MEM_INFO__NUM_TLB_ENT_RESET_VAL 0
#define USB_DEVICE_MEM_INFO__NUM_TLB_ENT_RMASK 0xff
#define USB_DEVICE_MEM_INFO__NUM_TLB_ENT_MASK  _64bit(0xff000000000000)
#define USB_DEVICE_MEM_INFO__NUM_TLB_ENT_FIELD 48,55


/*
 * MMIO Error Information.
 * Provides diagnostics information when an MMIO error occurs.  Captured
 * whenever the MMIO_ERROR interrupt condition occurs which includes size
 * errors, read/write errors, and protection errors.
 */
#define USB_DEVICE_MMIO_ERROR_INFO 0x0218

#define USB_DEVICE_MMIO_ERROR_INFO__SRC_SHIFT 0
#define USB_DEVICE_MMIO_ERROR_INFO__SRC_WIDTH 8
#define USB_DEVICE_MMIO_ERROR_INFO__SRC_RESET_VAL 0
#define USB_DEVICE_MMIO_ERROR_INFO__SRC_RMASK 0xff
#define USB_DEVICE_MMIO_ERROR_INFO__SRC_MASK  0xff
#define USB_DEVICE_MMIO_ERROR_INFO__SRC_FIELD 0,7

#define USB_DEVICE_MMIO_ERROR_INFO__SIZE_SHIFT 8
#define USB_DEVICE_MMIO_ERROR_INFO__SIZE_WIDTH 4
#define USB_DEVICE_MMIO_ERROR_INFO__SIZE_RESET_VAL 0
#define USB_DEVICE_MMIO_ERROR_INFO__SIZE_RMASK 0xf
#define USB_DEVICE_MMIO_ERROR_INFO__SIZE_MASK  0xf00
#define USB_DEVICE_MMIO_ERROR_INFO__SIZE_FIELD 8,11

#define USB_DEVICE_MMIO_ERROR_INFO__PA_SHIFT 12
#define USB_DEVICE_MMIO_ERROR_INFO__PA_WIDTH 42
#define USB_DEVICE_MMIO_ERROR_INFO__PA_RESET_VAL 0
#define USB_DEVICE_MMIO_ERROR_INFO__PA_RMASK _64bit(0x3ffffffffff)
#define USB_DEVICE_MMIO_ERROR_INFO__PA_MASK  _64bit(0x3ffffffffff000)
#define USB_DEVICE_MMIO_ERROR_INFO__PA_FIELD 12,53

#define USB_DEVICE_MMIO_ERROR_INFO__OPC_SHIFT 54
#define USB_DEVICE_MMIO_ERROR_INFO__OPC_WIDTH 5
#define USB_DEVICE_MMIO_ERROR_INFO__OPC_RESET_VAL 0
#define USB_DEVICE_MMIO_ERROR_INFO__OPC_RMASK 0x1f
#define USB_DEVICE_MMIO_ERROR_INFO__OPC_MASK  _64bit(0x7c0000000000000)
#define USB_DEVICE_MMIO_ERROR_INFO__OPC_FIELD 54,58


/*
 * MMIO Info.
 * This register provides information about how the physical address is
 * interpreted by the IO device.  The PA is divided into
 * {CHANNEL,SVC_DOM,IGNORED,REGION,OFFSET}.  The values in this register
 * define the size of each of these fields.
 */
#define USB_DEVICE_MMIO_INFO 0x0010

#define USB_DEVICE_MMIO_INFO__CH_WIDTH_SHIFT 0
#define USB_DEVICE_MMIO_INFO__CH_WIDTH_WIDTH 4
#define USB_DEVICE_MMIO_INFO__CH_WIDTH_RESET_VAL 2
#define USB_DEVICE_MMIO_INFO__CH_WIDTH_RMASK 0xf
#define USB_DEVICE_MMIO_INFO__CH_WIDTH_MASK  0xf
#define USB_DEVICE_MMIO_INFO__CH_WIDTH_FIELD 0,3

#define USB_DEVICE_MMIO_INFO__NUM_CH_SHIFT 4
#define USB_DEVICE_MMIO_INFO__NUM_CH_WIDTH 15
#define USB_DEVICE_MMIO_INFO__NUM_CH_RESET_VAL 3
#define USB_DEVICE_MMIO_INFO__NUM_CH_RMASK 0x7fff
#define USB_DEVICE_MMIO_INFO__NUM_CH_MASK  0x7fff0
#define USB_DEVICE_MMIO_INFO__NUM_CH_FIELD 4,18

#define USB_DEVICE_MMIO_INFO__SVC_DOM_WIDTH_SHIFT 19
#define USB_DEVICE_MMIO_INFO__SVC_DOM_WIDTH_WIDTH 3
#define USB_DEVICE_MMIO_INFO__SVC_DOM_WIDTH_RESET_VAL 0
#define USB_DEVICE_MMIO_INFO__SVC_DOM_WIDTH_RMASK 0x7
#define USB_DEVICE_MMIO_INFO__SVC_DOM_WIDTH_MASK  0x380000
#define USB_DEVICE_MMIO_INFO__SVC_DOM_WIDTH_FIELD 19,21

#define USB_DEVICE_MMIO_INFO__NUM_SVC_DOM_SHIFT 22
#define USB_DEVICE_MMIO_INFO__NUM_SVC_DOM_WIDTH 7
#define USB_DEVICE_MMIO_INFO__NUM_SVC_DOM_RESET_VAL 0
#define USB_DEVICE_MMIO_INFO__NUM_SVC_DOM_RMASK 0x7f
#define USB_DEVICE_MMIO_INFO__NUM_SVC_DOM_MASK  0x1fc00000
#define USB_DEVICE_MMIO_INFO__NUM_SVC_DOM_FIELD 22,28

#define USB_DEVICE_MMIO_INFO__OFFSET_WIDTH_SHIFT 29
#define USB_DEVICE_MMIO_INFO__OFFSET_WIDTH_WIDTH 6
#define USB_DEVICE_MMIO_INFO__OFFSET_WIDTH_RESET_VAL 18
#define USB_DEVICE_MMIO_INFO__OFFSET_WIDTH_RMASK 0x3f
#define USB_DEVICE_MMIO_INFO__OFFSET_WIDTH_MASK  _64bit(0x7e0000000)
#define USB_DEVICE_MMIO_INFO__OFFSET_WIDTH_FIELD 29,34

#define USB_DEVICE_MMIO_INFO__REGION_WIDTH_SHIFT 35
#define USB_DEVICE_MMIO_INFO__REGION_WIDTH_WIDTH 6
#define USB_DEVICE_MMIO_INFO__REGION_WIDTH_RESET_VAL 0
#define USB_DEVICE_MMIO_INFO__REGION_WIDTH_RMASK 0x3f
#define USB_DEVICE_MMIO_INFO__REGION_WIDTH_MASK  _64bit(0x1f800000000)
#define USB_DEVICE_MMIO_INFO__REGION_WIDTH_FIELD 35,40


/*
 * USB Device Reset Control.
 * Control USB device reset
 */
#define USB_DEVICE_RESET_CONTROL 0x0600

#define USB_DEVICE_RESET_CONTROL__PHY_RESET_MODE_SHIFT 0
#define USB_DEVICE_RESET_CONTROL__PHY_RESET_MODE_WIDTH 2
#define USB_DEVICE_RESET_CONTROL__PHY_RESET_MODE_RESET_VAL 0
#define USB_DEVICE_RESET_CONTROL__PHY_RESET_MODE_RMASK 0x3
#define USB_DEVICE_RESET_CONTROL__PHY_RESET_MODE_MASK  0x3
#define USB_DEVICE_RESET_CONTROL__PHY_RESET_MODE_FIELD 0,1
#define USB_DEVICE_RESET_CONTROL__PHY_RESET_MODE_VAL_AUTO 0x0
#define USB_DEVICE_RESET_CONTROL__PHY_RESET_MODE_VAL_RESET_ASSERT 0x1
#define USB_DEVICE_RESET_CONTROL__PHY_RESET_MODE_VAL_RESET_DEASSERT 0x3

#define USB_DEVICE_RESET_CONTROL__MAC_RESET_MODE_SHIFT 2
#define USB_DEVICE_RESET_CONTROL__MAC_RESET_MODE_WIDTH 2
#define USB_DEVICE_RESET_CONTROL__MAC_RESET_MODE_RESET_VAL 0
#define USB_DEVICE_RESET_CONTROL__MAC_RESET_MODE_RMASK 0x3
#define USB_DEVICE_RESET_CONTROL__MAC_RESET_MODE_MASK  0xc
#define USB_DEVICE_RESET_CONTROL__MAC_RESET_MODE_FIELD 2,3
#define USB_DEVICE_RESET_CONTROL__MAC_RESET_MODE_VAL_AUTO 0x0
#define USB_DEVICE_RESET_CONTROL__MAC_RESET_MODE_VAL_RESET_ASSERT 0x1
#define USB_DEVICE_RESET_CONTROL__MAC_RESET_MODE_VAL_RESET_DEASSERT 0x3


/* Scratchpad. */
#define USB_DEVICE_SCRATCHPAD 0x0020

#define USB_DEVICE_SCRATCHPAD__SCRATCHPAD_SHIFT 0
#define USB_DEVICE_SCRATCHPAD__SCRATCHPAD_WIDTH 64
#define USB_DEVICE_SCRATCHPAD__SCRATCHPAD_RESET_VAL 0
#define USB_DEVICE_SCRATCHPAD__SCRATCHPAD_RMASK _64bit(0xffffffffffffffff)
#define USB_DEVICE_SCRATCHPAD__SCRATCHPAD_MASK  _64bit(0xffffffffffffffff)
#define USB_DEVICE_SCRATCHPAD__SCRATCHPAD_FIELD 0,63


/*
 * Semaphore0.
 * Semaphore
 */
#define USB_DEVICE_SEMAPHORE0 0x0028

#define USB_DEVICE_SEMAPHORE0__VAL_SHIFT 0
#define USB_DEVICE_SEMAPHORE0__VAL_WIDTH 1
#define USB_DEVICE_SEMAPHORE0__VAL_RESET_VAL 0
#define USB_DEVICE_SEMAPHORE0__VAL_RMASK 0x1
#define USB_DEVICE_SEMAPHORE0__VAL_MASK  0x1
#define USB_DEVICE_SEMAPHORE0__VAL_FIELD 0,0


/*
 * Semaphore1.
 * Semaphore
 */
#define USB_DEVICE_SEMAPHORE1 0x0030

#define USB_DEVICE_SEMAPHORE1__VAL_SHIFT 0
#define USB_DEVICE_SEMAPHORE1__VAL_WIDTH 1
#define USB_DEVICE_SEMAPHORE1__VAL_RESET_VAL 0
#define USB_DEVICE_SEMAPHORE1__VAL_RMASK 0x1
#define USB_DEVICE_SEMAPHORE1__VAL_MASK  0x1
#define USB_DEVICE_SEMAPHORE1__VAL_FIELD 0,0


/*
 * Standalone Device Configuration.
 * USB standalone device configuration
 */
#define USB_DEVICE_STANDALONE_DEVICE_CONFIG 0x0208

#define USB_DEVICE_STANDALONE_DEVICE_CONFIG__DISABLE_SHIFT 0
#define USB_DEVICE_STANDALONE_DEVICE_CONFIG__DISABLE_WIDTH 1
#define USB_DEVICE_STANDALONE_DEVICE_CONFIG__DISABLE_RESET_VAL 0
#define USB_DEVICE_STANDALONE_DEVICE_CONFIG__DISABLE_RMASK 0x1
#define USB_DEVICE_STANDALONE_DEVICE_CONFIG__DISABLE_MASK  0x1
#define USB_DEVICE_STANDALONE_DEVICE_CONFIG__DISABLE_FIELD 0,0

#define USB_DEVICE_STANDALONE_DEVICE_CONFIG__TM_BULK_IN_PREFETCH_DISABLE_SHIFT 1
#define USB_DEVICE_STANDALONE_DEVICE_CONFIG__TM_BULK_IN_PREFETCH_DISABLE_WIDTH 1
#define USB_DEVICE_STANDALONE_DEVICE_CONFIG__TM_BULK_IN_PREFETCH_DISABLE_RESET_VAL 0
#define USB_DEVICE_STANDALONE_DEVICE_CONFIG__TM_BULK_IN_PREFETCH_DISABLE_RMASK 0x1
#define USB_DEVICE_STANDALONE_DEVICE_CONFIG__TM_BULK_IN_PREFETCH_DISABLE_MASK  0x2
#define USB_DEVICE_STANDALONE_DEVICE_CONFIG__TM_BULK_IN_PREFETCH_DISABLE_FIELD 1,1


/*
 * TEST_MODE_UDC_REG.
 * In Test mode, the application can use the AHB to read from a TxFIFO or
 * write to an RxFIFO. Test mode
 * is supported only in the Slave-Only operational mode. In Test mode, only
 * single- DWORD transactions
 * are supported: byte and word transactions on the AHB are not supported. To
 * synchronize the write/
 * read pulses between AHB and VCI clocks, wait states are introduced on the
 * AHB for every data transfer.
 * While in Test mode, all transactions from the USB host, except the SETUP
 * packet, receive a NAK
 * response. When the SETUP packet is received, it is accepted, but the data
 * is not written into the Receive
 * FIFO. After writing the TxFIFO, the data must be confirmed by writing to
 * the offset address (offset
 * 12h01C + [endpoint number x 12h020]) (hexadecimal), which is similar to
 * the normal mode of
 * operation. In non-Test modes, reading from a TxFIFO or writing to an
 * RxFIFO results in an AHB error
 * response. The application must never read an empty TxFIFO or write a full
 * RxFIFO even though an
 * AHB error response is not provided. Writing to the RxFIFO in Test mode and
 * enabling the DMA to transfer
 * the data are not supported.
 */
#define USB_DEVICE_TEST_MODE_UDC_REG 0x1041c

#define USB_DEVICE_TEST_MODE_UDC_REG__TSTMODE_SHIFT 0
#define USB_DEVICE_TEST_MODE_UDC_REG__TSTMODE_WIDTH 1
#define USB_DEVICE_TEST_MODE_UDC_REG__TSTMODE_RESET_VAL 0
#define USB_DEVICE_TEST_MODE_UDC_REG__TSTMODE_RMASK 0x1
#define USB_DEVICE_TEST_MODE_UDC_REG__TSTMODE_MASK  0x1
#define USB_DEVICE_TEST_MODE_UDC_REG__TSTMODE_FIELD 0,0


/*
 * TLB Entry VPN and PFN Data.
 * Read/Write data for the TLB entry's VPN and PFN.  When written, the
 * associated entry's VLD bit will be cleared.
 */
#define USB_DEVICE_TLB_ENTRY_ADDR__FIRST_WORD 0x4000
#define USB_DEVICE_TLB_ENTRY_ADDR__LAST_WORD 0x41f0

#define USB_DEVICE_TLB_ENTRY_ADDR__PFN_SHIFT 0
#define USB_DEVICE_TLB_ENTRY_ADDR__PFN_WIDTH 30
#define USB_DEVICE_TLB_ENTRY_ADDR__PFN_RESET_VAL 0
#define USB_DEVICE_TLB_ENTRY_ADDR__PFN_RMASK 0x3fffffff
#define USB_DEVICE_TLB_ENTRY_ADDR__PFN_MASK  0x3fffffff
#define USB_DEVICE_TLB_ENTRY_ADDR__PFN_FIELD 0,29

#define USB_DEVICE_TLB_ENTRY_ADDR__VPN_SHIFT 32
#define USB_DEVICE_TLB_ENTRY_ADDR__VPN_WIDTH 30
#define USB_DEVICE_TLB_ENTRY_ADDR__VPN_RESET_VAL 0
#define USB_DEVICE_TLB_ENTRY_ADDR__VPN_RMASK 0x3fffffff
#define USB_DEVICE_TLB_ENTRY_ADDR__VPN_MASK  _64bit(0x3fffffff00000000)
#define USB_DEVICE_TLB_ENTRY_ADDR__VPN_FIELD 32,61


/*
 * TLB Entry Attributes.
 * Read/Write data for the TLB entry's ATTR bits.  When written, the TLB
 * entry will be updated.  TLB_ENTRY_ADDR must always be written before this
 * register.  Writing to this register without first writing the
 * TLB_ENTRY_ADDR register causes unpredictable behavior including memory
 * corruption.
 */
#define USB_DEVICE_TLB_ENTRY_ATTR__FIRST_WORD 0x4008
#define USB_DEVICE_TLB_ENTRY_ATTR__LAST_WORD 0x41f8

#define USB_DEVICE_TLB_ENTRY_ATTR__VLD_SHIFT 0
#define USB_DEVICE_TLB_ENTRY_ATTR__VLD_WIDTH 1
#define USB_DEVICE_TLB_ENTRY_ATTR__VLD_RMASK 0x1
#define USB_DEVICE_TLB_ENTRY_ATTR__VLD_MASK  0x1
#define USB_DEVICE_TLB_ENTRY_ATTR__VLD_FIELD 0,0

#define USB_DEVICE_TLB_ENTRY_ATTR__PS_SHIFT 3
#define USB_DEVICE_TLB_ENTRY_ATTR__PS_WIDTH 5
#define USB_DEVICE_TLB_ENTRY_ATTR__PS_RESET_VAL 30
#define USB_DEVICE_TLB_ENTRY_ATTR__PS_RMASK 0x1f
#define USB_DEVICE_TLB_ENTRY_ATTR__PS_MASK  0xf8
#define USB_DEVICE_TLB_ENTRY_ATTR__PS_FIELD 3,7

#define USB_DEVICE_TLB_ENTRY_ATTR__HOME_MAPPING_SHIFT 20
#define USB_DEVICE_TLB_ENTRY_ATTR__HOME_MAPPING_WIDTH 1
#define USB_DEVICE_TLB_ENTRY_ATTR__HOME_MAPPING_RESET_VAL 1
#define USB_DEVICE_TLB_ENTRY_ATTR__HOME_MAPPING_RMASK 0x1
#define USB_DEVICE_TLB_ENTRY_ATTR__HOME_MAPPING_MASK  0x100000
#define USB_DEVICE_TLB_ENTRY_ATTR__HOME_MAPPING_FIELD 20,20

#define USB_DEVICE_TLB_ENTRY_ATTR__PIN_SHIFT 23
#define USB_DEVICE_TLB_ENTRY_ATTR__PIN_WIDTH 1
#define USB_DEVICE_TLB_ENTRY_ATTR__PIN_RESET_VAL 0
#define USB_DEVICE_TLB_ENTRY_ATTR__PIN_RMASK 0x1
#define USB_DEVICE_TLB_ENTRY_ATTR__PIN_MASK  0x800000
#define USB_DEVICE_TLB_ENTRY_ATTR__PIN_FIELD 23,23

#define USB_DEVICE_TLB_ENTRY_ATTR__NT_HINT_SHIFT 24
#define USB_DEVICE_TLB_ENTRY_ATTR__NT_HINT_WIDTH 1
#define USB_DEVICE_TLB_ENTRY_ATTR__NT_HINT_RESET_VAL 0
#define USB_DEVICE_TLB_ENTRY_ATTR__NT_HINT_RMASK 0x1
#define USB_DEVICE_TLB_ENTRY_ATTR__NT_HINT_MASK  0x1000000
#define USB_DEVICE_TLB_ENTRY_ATTR__NT_HINT_FIELD 24,24

#define USB_DEVICE_TLB_ENTRY_ATTR__LOC_Y_OR_OFFSET_SHIFT 26
#define USB_DEVICE_TLB_ENTRY_ATTR__LOC_Y_OR_OFFSET_WIDTH 4
#define USB_DEVICE_TLB_ENTRY_ATTR__LOC_Y_OR_OFFSET_RESET_VAL 0
#define USB_DEVICE_TLB_ENTRY_ATTR__LOC_Y_OR_OFFSET_RMASK 0xf
#define USB_DEVICE_TLB_ENTRY_ATTR__LOC_Y_OR_OFFSET_MASK  0x3c000000
#define USB_DEVICE_TLB_ENTRY_ATTR__LOC_Y_OR_OFFSET_FIELD 26,29

#define USB_DEVICE_TLB_ENTRY_ATTR__LOC_X_OR_MASK_SHIFT 37
#define USB_DEVICE_TLB_ENTRY_ATTR__LOC_X_OR_MASK_WIDTH 4
#define USB_DEVICE_TLB_ENTRY_ATTR__LOC_X_OR_MASK_RESET_VAL 0
#define USB_DEVICE_TLB_ENTRY_ATTR__LOC_X_OR_MASK_RMASK 0xf
#define USB_DEVICE_TLB_ENTRY_ATTR__LOC_X_OR_MASK_MASK  _64bit(0x1e000000000)
#define USB_DEVICE_TLB_ENTRY_ATTR__LOC_X_OR_MASK_FIELD 37,40

#define USB_DEVICE_TLB_ENTRY_ATTR__LRU_SHIFT 48
#define USB_DEVICE_TLB_ENTRY_ATTR__LRU_WIDTH 4
#define USB_DEVICE_TLB_ENTRY_ATTR__LRU_RESET_VAL 0
#define USB_DEVICE_TLB_ENTRY_ATTR__LRU_RMASK 0xf
#define USB_DEVICE_TLB_ENTRY_ATTR__LRU_MASK  _64bit(0xf000000000000)
#define USB_DEVICE_TLB_ENTRY_ATTR__LRU_FIELD 48,51


/*
 * TLB Table.
 * TLB table.  This table consists of 32 TLB entries.  Each entry is two
 * registers: TLB_ENTRY_ADDR and TLB_ENTRY_ATTR.  This register definition is
 * a description of the address as opposed to the registers themselves.
 */
#define USB_DEVICE_TLB_TABLE__FIRST_WORD 0x4000
#define USB_DEVICE_TLB_TABLE__LAST_WORD 0x41f8

#define USB_DEVICE_TLB_TABLE__IS_ATTR_SHIFT 3
#define USB_DEVICE_TLB_TABLE__IS_ATTR_WIDTH 1
#define USB_DEVICE_TLB_TABLE__IS_ATTR_RESET_VAL 0
#define USB_DEVICE_TLB_TABLE__IS_ATTR_RMASK 0x1
#define USB_DEVICE_TLB_TABLE__IS_ATTR_MASK  0x8
#define USB_DEVICE_TLB_TABLE__IS_ATTR_FIELD 3,3

#define USB_DEVICE_TLB_TABLE__ENTRY_SHIFT 4
#define USB_DEVICE_TLB_TABLE__ENTRY_WIDTH 4
#define USB_DEVICE_TLB_TABLE__ENTRY_RESET_VAL 0
#define USB_DEVICE_TLB_TABLE__ENTRY_RMASK 0xf
#define USB_DEVICE_TLB_TABLE__ENTRY_MASK  0xf0
#define USB_DEVICE_TLB_TABLE__ENTRY_FIELD 4,7

#define USB_DEVICE_TLB_TABLE__ASID_SHIFT 8
#define USB_DEVICE_TLB_TABLE__ASID_WIDTH 1
#define USB_DEVICE_TLB_TABLE__ASID_RESET_VAL 0
#define USB_DEVICE_TLB_TABLE__ASID_RMASK 0x1
#define USB_DEVICE_TLB_TABLE__ASID_MASK  0x100
#define USB_DEVICE_TLB_TABLE__ASID_FIELD 8,8


/*
 * USB0 Address Extension Register.
 * This register specifies the Virtual Address extension for USB0.
 */
#define USB_DEVICE_TLB_USB0_ADDR_EXT 0x4400

#define USB_DEVICE_TLB_USB0_ADDR_EXT__TLB_USB0_ADDR_EXT_SHIFT 0
#define USB_DEVICE_TLB_USB0_ADDR_EXT__TLB_USB0_ADDR_EXT_WIDTH 32
#define USB_DEVICE_TLB_USB0_ADDR_EXT__TLB_USB0_ADDR_EXT_RESET_VAL 0
#define USB_DEVICE_TLB_USB0_ADDR_EXT__TLB_USB0_ADDR_EXT_RMASK 0xffffffff
#define USB_DEVICE_TLB_USB0_ADDR_EXT__TLB_USB0_ADDR_EXT_MASK  0xffffffff
#define USB_DEVICE_TLB_USB0_ADDR_EXT__TLB_USB0_ADDR_EXT_FIELD 0,31


/*
 * TLB USB0 Exception.
 * Captures exception information on USB0 TLB misses.  Software must provide
 * a valid translation to allow forward progress of the transaction.  Other
 * channels may become blocked while the TLB miss is being handled.
 */
#define USB_DEVICE_TLB_USB0_EXC 0x4410

#define USB_DEVICE_TLB_USB0_EXC__LRU_SHIFT 0
#define USB_DEVICE_TLB_USB0_EXC__LRU_WIDTH 4
#define USB_DEVICE_TLB_USB0_EXC__LRU_RESET_VAL 0
#define USB_DEVICE_TLB_USB0_EXC__LRU_RMASK 0xf
#define USB_DEVICE_TLB_USB0_EXC__LRU_MASK  0xf
#define USB_DEVICE_TLB_USB0_EXC__LRU_FIELD 0,3

#define USB_DEVICE_TLB_USB0_EXC__VA_SHIFT 12
#define USB_DEVICE_TLB_USB0_EXC__VA_WIDTH 30
#define USB_DEVICE_TLB_USB0_EXC__VA_RESET_VAL 0
#define USB_DEVICE_TLB_USB0_EXC__VA_RMASK 0x3fffffff
#define USB_DEVICE_TLB_USB0_EXC__VA_MASK  _64bit(0x3fffffff000)
#define USB_DEVICE_TLB_USB0_EXC__VA_FIELD 12,41

#define USB_DEVICE_TLB_USB0_EXC__ASID_SHIFT 48
#define USB_DEVICE_TLB_USB0_EXC__ASID_WIDTH 1
#define USB_DEVICE_TLB_USB0_EXC__ASID_RESET_VAL 0
#define USB_DEVICE_TLB_USB0_EXC__ASID_RMASK 0x1
#define USB_DEVICE_TLB_USB0_EXC__ASID_MASK  _64bit(0x1000000000000)
#define USB_DEVICE_TLB_USB0_EXC__ASID_FIELD 48,48


/*
 * TLB USB0 Exception Response.
 * This register specifies the responses to the HOST0 MAC upon TLB misses (0:
 * Error, 1: Retry).
 */
#define USB_DEVICE_TLB_USB0_EXC_RESP 0x4430

#define USB_DEVICE_TLB_USB0_EXC_RESP__TLB_USB0_EXC_RESP_SHIFT 0
#define USB_DEVICE_TLB_USB0_EXC_RESP__TLB_USB0_EXC_RESP_WIDTH 1
#define USB_DEVICE_TLB_USB0_EXC_RESP__TLB_USB0_EXC_RESP_RESET_VAL 0
#define USB_DEVICE_TLB_USB0_EXC_RESP__TLB_USB0_EXC_RESP_RMASK 0x1
#define USB_DEVICE_TLB_USB0_EXC_RESP__TLB_USB0_EXC_RESP_MASK  0x1
#define USB_DEVICE_TLB_USB0_EXC_RESP__TLB_USB0_EXC_RESP_FIELD 0,0


/*
 * TLB USB0 order vector.
 * This register specifies the writes to the indicated TLB entry are required
 * to be global visible before sending acknowledges back to the MAC.
 */
#define USB_DEVICE_TLB_USB0_ORD 0x4420

#define USB_DEVICE_TLB_USB0_ORD__TLB_USB0_ORD_SHIFT 0
#define USB_DEVICE_TLB_USB0_ORD__TLB_USB0_ORD_WIDTH 16
#define USB_DEVICE_TLB_USB0_ORD__TLB_USB0_ORD_RESET_VAL 65535
#define USB_DEVICE_TLB_USB0_ORD__TLB_USB0_ORD_RMASK 0xffff
#define USB_DEVICE_TLB_USB0_ORD__TLB_USB0_ORD_MASK  0xffff
#define USB_DEVICE_TLB_USB0_ORD__TLB_USB0_ORD_FIELD 0,15


/*
 * USB1 Address Extension Register.
 * This register specifies the Virtual Address extension for USB1.
 */
#define USB_DEVICE_TLB_USB1_ADDR_EXT 0x4408

#define USB_DEVICE_TLB_USB1_ADDR_EXT__TLB_USB1_ADDR_EXT_SHIFT 0
#define USB_DEVICE_TLB_USB1_ADDR_EXT__TLB_USB1_ADDR_EXT_WIDTH 32
#define USB_DEVICE_TLB_USB1_ADDR_EXT__TLB_USB1_ADDR_EXT_RESET_VAL 0
#define USB_DEVICE_TLB_USB1_ADDR_EXT__TLB_USB1_ADDR_EXT_RMASK 0xffffffff
#define USB_DEVICE_TLB_USB1_ADDR_EXT__TLB_USB1_ADDR_EXT_MASK  0xffffffff
#define USB_DEVICE_TLB_USB1_ADDR_EXT__TLB_USB1_ADDR_EXT_FIELD 0,31


/*
 * TLB USB1 Exception.
 * Captures exception information on USB1 TLB misses.  Software must provide
 * a valid translation to allow forward progress of the transaction.  Other
 * channels may become blocked while the TLB miss is being handled.
 */
#define USB_DEVICE_TLB_USB1_EXC 0x4418

#define USB_DEVICE_TLB_USB1_EXC__LRU_SHIFT 0
#define USB_DEVICE_TLB_USB1_EXC__LRU_WIDTH 4
#define USB_DEVICE_TLB_USB1_EXC__LRU_RESET_VAL 0
#define USB_DEVICE_TLB_USB1_EXC__LRU_RMASK 0xf
#define USB_DEVICE_TLB_USB1_EXC__LRU_MASK  0xf
#define USB_DEVICE_TLB_USB1_EXC__LRU_FIELD 0,3

#define USB_DEVICE_TLB_USB1_EXC__VA_SHIFT 12
#define USB_DEVICE_TLB_USB1_EXC__VA_WIDTH 30
#define USB_DEVICE_TLB_USB1_EXC__VA_RESET_VAL 0
#define USB_DEVICE_TLB_USB1_EXC__VA_RMASK 0x3fffffff
#define USB_DEVICE_TLB_USB1_EXC__VA_MASK  _64bit(0x3fffffff000)
#define USB_DEVICE_TLB_USB1_EXC__VA_FIELD 12,41

#define USB_DEVICE_TLB_USB1_EXC__ASID_SHIFT 48
#define USB_DEVICE_TLB_USB1_EXC__ASID_WIDTH 1
#define USB_DEVICE_TLB_USB1_EXC__ASID_RESET_VAL 0
#define USB_DEVICE_TLB_USB1_EXC__ASID_RMASK 0x1
#define USB_DEVICE_TLB_USB1_EXC__ASID_MASK  _64bit(0x1000000000000)
#define USB_DEVICE_TLB_USB1_EXC__ASID_FIELD 48,48


/*
 * TLB USB1 Exception Response.
 * This register specifies the responses to the HOST1 MAC upon TLB misses (0:
 * Error, 1: Retry).
 */
#define USB_DEVICE_TLB_USB1_EXC_RESP 0x4438

#define USB_DEVICE_TLB_USB1_EXC_RESP__TLB_USB1_EXC_RESP_SHIFT 0
#define USB_DEVICE_TLB_USB1_EXC_RESP__TLB_USB1_EXC_RESP_WIDTH 1
#define USB_DEVICE_TLB_USB1_EXC_RESP__TLB_USB1_EXC_RESP_RESET_VAL 0
#define USB_DEVICE_TLB_USB1_EXC_RESP__TLB_USB1_EXC_RESP_RMASK 0x1
#define USB_DEVICE_TLB_USB1_EXC_RESP__TLB_USB1_EXC_RESP_MASK  0x1
#define USB_DEVICE_TLB_USB1_EXC_RESP__TLB_USB1_EXC_RESP_FIELD 0,0


/*
 * TLB USB1 order vector.
 * This register specifies the writes to the indicated TLB entry are required
 * to be global visible before sending acknowledges back to the MAC.
 */
#define USB_DEVICE_TLB_USB1_ORD 0x4428

#define USB_DEVICE_TLB_USB1_ORD__TLB_USB1_ORD_SHIFT 0
#define USB_DEVICE_TLB_USB1_ORD__TLB_USB1_ORD_WIDTH 16
#define USB_DEVICE_TLB_USB1_ORD__TLB_USB1_ORD_RESET_VAL 65535
#define USB_DEVICE_TLB_USB1_ORD__TLB_USB1_ORD_RMASK 0xffff
#define USB_DEVICE_TLB_USB1_ORD__TLB_USB1_ORD_MASK  0xffff
#define USB_DEVICE_TLB_USB1_ORD__TLB_USB1_ORD_FIELD 0,15


/*
 * UDC_EP_NE_UDC_REG_0.
 * This register stores endpoint information. A register is dedicated to each
 * implemented endpoint, and
 * each register stores the endpoints maximum packet size, direction, type,
 * configuration number,
 * interface number, and the alternate interface value to which the endpoint
 * is tied.
 */
#define USB_DEVICE_UDC_EP_NE_UDC_REG_0 0x10504

#define USB_DEVICE_UDC_EP_NE_UDC_REG_0__EP_NUM_SHIFT 0
#define USB_DEVICE_UDC_EP_NE_UDC_REG_0__EP_NUM_WIDTH 4
#define USB_DEVICE_UDC_EP_NE_UDC_REG_0__EP_NUM_RESET_VAL 0
#define USB_DEVICE_UDC_EP_NE_UDC_REG_0__EP_NUM_RMASK 0xf
#define USB_DEVICE_UDC_EP_NE_UDC_REG_0__EP_NUM_MASK  0xf
#define USB_DEVICE_UDC_EP_NE_UDC_REG_0__EP_NUM_FIELD 0,3

#define USB_DEVICE_UDC_EP_NE_UDC_REG_0__EP_DIR_SHIFT 4
#define USB_DEVICE_UDC_EP_NE_UDC_REG_0__EP_DIR_WIDTH 1
#define USB_DEVICE_UDC_EP_NE_UDC_REG_0__EP_DIR_RESET_VAL 0
#define USB_DEVICE_UDC_EP_NE_UDC_REG_0__EP_DIR_RMASK 0x1
#define USB_DEVICE_UDC_EP_NE_UDC_REG_0__EP_DIR_MASK  0x10
#define USB_DEVICE_UDC_EP_NE_UDC_REG_0__EP_DIR_FIELD 4,4

#define USB_DEVICE_UDC_EP_NE_UDC_REG_0__EP_TYPE_SHIFT 5
#define USB_DEVICE_UDC_EP_NE_UDC_REG_0__EP_TYPE_WIDTH 2
#define USB_DEVICE_UDC_EP_NE_UDC_REG_0__EP_TYPE_RESET_VAL 0
#define USB_DEVICE_UDC_EP_NE_UDC_REG_0__EP_TYPE_RMASK 0x3
#define USB_DEVICE_UDC_EP_NE_UDC_REG_0__EP_TYPE_MASK  0x60
#define USB_DEVICE_UDC_EP_NE_UDC_REG_0__EP_TYPE_FIELD 5,6

#define USB_DEVICE_UDC_EP_NE_UDC_REG_0__CONFIG_NUM_SHIFT 7
#define USB_DEVICE_UDC_EP_NE_UDC_REG_0__CONFIG_NUM_WIDTH 4
#define USB_DEVICE_UDC_EP_NE_UDC_REG_0__CONFIG_NUM_RESET_VAL 0
#define USB_DEVICE_UDC_EP_NE_UDC_REG_0__CONFIG_NUM_RMASK 0xf
#define USB_DEVICE_UDC_EP_NE_UDC_REG_0__CONFIG_NUM_MASK  0x780
#define USB_DEVICE_UDC_EP_NE_UDC_REG_0__CONFIG_NUM_FIELD 7,10

#define USB_DEVICE_UDC_EP_NE_UDC_REG_0__INT_NUM_SHIFT 11
#define USB_DEVICE_UDC_EP_NE_UDC_REG_0__INT_NUM_WIDTH 4
#define USB_DEVICE_UDC_EP_NE_UDC_REG_0__INT_NUM_RESET_VAL 0
#define USB_DEVICE_UDC_EP_NE_UDC_REG_0__INT_NUM_RMASK 0xf
#define USB_DEVICE_UDC_EP_NE_UDC_REG_0__INT_NUM_MASK  0x7800
#define USB_DEVICE_UDC_EP_NE_UDC_REG_0__INT_NUM_FIELD 11,14

#define USB_DEVICE_UDC_EP_NE_UDC_REG_0__ASN_SHIFT 15
#define USB_DEVICE_UDC_EP_NE_UDC_REG_0__ASN_WIDTH 4
#define USB_DEVICE_UDC_EP_NE_UDC_REG_0__ASN_RESET_VAL 0
#define USB_DEVICE_UDC_EP_NE_UDC_REG_0__ASN_RMASK 0xf
#define USB_DEVICE_UDC_EP_NE_UDC_REG_0__ASN_MASK  0x78000
#define USB_DEVICE_UDC_EP_NE_UDC_REG_0__ASN_FIELD 15,18

#define USB_DEVICE_UDC_EP_NE_UDC_REG_0__MPKT_SHIFT 19
#define USB_DEVICE_UDC_EP_NE_UDC_REG_0__MPKT_WIDTH 11
#define USB_DEVICE_UDC_EP_NE_UDC_REG_0__MPKT_RESET_VAL 0
#define USB_DEVICE_UDC_EP_NE_UDC_REG_0__MPKT_RMASK 0x7ff
#define USB_DEVICE_UDC_EP_NE_UDC_REG_0__MPKT_MASK  0x3ff80000
#define USB_DEVICE_UDC_EP_NE_UDC_REG_0__MPKT_FIELD 19,29

#define USB_DEVICE_UDC_EP_NE_UDC_REG_0__ISO_SHIFT 30
#define USB_DEVICE_UDC_EP_NE_UDC_REG_0__ISO_WIDTH 2
#define USB_DEVICE_UDC_EP_NE_UDC_REG_0__ISO_RESET_VAL 0
#define USB_DEVICE_UDC_EP_NE_UDC_REG_0__ISO_RMASK 0x3
#define USB_DEVICE_UDC_EP_NE_UDC_REG_0__ISO_MASK  0xc0000000
#define USB_DEVICE_UDC_EP_NE_UDC_REG_0__ISO_FIELD 30,31


/*
 * UDC_EP_NE_UDC_REG_1.
 * This register stores endpoint information. A register is dedicated to each
 * implemented endpoint, and
 * each register stores the endpoints maximum packet size, direction, type,
 * configuration number,
 * interface number, and the alternate interface value to which the endpoint
 * is tied.
 */
#define USB_DEVICE_UDC_EP_NE_UDC_REG_1 0x10508

#define USB_DEVICE_UDC_EP_NE_UDC_REG_1__UDC_EP_NE_UDC_REG_1_SHIFT 0
#define USB_DEVICE_UDC_EP_NE_UDC_REG_1__UDC_EP_NE_UDC_REG_1_WIDTH 32
#define USB_DEVICE_UDC_EP_NE_UDC_REG_1__UDC_EP_NE_UDC_REG_1_RESET_VAL 0
#define USB_DEVICE_UDC_EP_NE_UDC_REG_1__UDC_EP_NE_UDC_REG_1_RMASK 0xffffffff
#define USB_DEVICE_UDC_EP_NE_UDC_REG_1__UDC_EP_NE_UDC_REG_1_MASK  0xffffffff
#define USB_DEVICE_UDC_EP_NE_UDC_REG_1__UDC_EP_NE_UDC_REG_1_FIELD 0,31


/*
 * UDC_EP_NE_UDC_REG_2.
 * This register stores endpoint information. A register is dedicated to each
 * implemented endpoint, and
 * each register stores the endpoints maximum packet size, direction, type,
 * configuration number,
 * interface number, and the alternate interface value to which the endpoint
 * is tied.
 */
#define USB_DEVICE_UDC_EP_NE_UDC_REG_2 0x1050c

#define USB_DEVICE_UDC_EP_NE_UDC_REG_2__UDC_EP_NE_UDC_REG_2_SHIFT 0
#define USB_DEVICE_UDC_EP_NE_UDC_REG_2__UDC_EP_NE_UDC_REG_2_WIDTH 32
#define USB_DEVICE_UDC_EP_NE_UDC_REG_2__UDC_EP_NE_UDC_REG_2_RESET_VAL 0
#define USB_DEVICE_UDC_EP_NE_UDC_REG_2__UDC_EP_NE_UDC_REG_2_RMASK 0xffffffff
#define USB_DEVICE_UDC_EP_NE_UDC_REG_2__UDC_EP_NE_UDC_REG_2_MASK  0xffffffff
#define USB_DEVICE_UDC_EP_NE_UDC_REG_2__UDC_EP_NE_UDC_REG_2_FIELD 0,31


/*
 * UDC_EP_NE_UDC_REG_3.
 * This register stores endpoint information. A register is dedicated to each
 * implemented endpoint, and
 * each register stores the endpoints maximum packet size, direction, type,
 * configuration number,
 * interface number, and the alternate interface value to which the endpoint
 * is tied.
 */
#define USB_DEVICE_UDC_EP_NE_UDC_REG_3 0x10510

#define USB_DEVICE_UDC_EP_NE_UDC_REG_3__UDC_EP_NE_UDC_REG_3_SHIFT 0
#define USB_DEVICE_UDC_EP_NE_UDC_REG_3__UDC_EP_NE_UDC_REG_3_WIDTH 32
#define USB_DEVICE_UDC_EP_NE_UDC_REG_3__UDC_EP_NE_UDC_REG_3_RESET_VAL 0
#define USB_DEVICE_UDC_EP_NE_UDC_REG_3__UDC_EP_NE_UDC_REG_3_RMASK 0xffffffff
#define USB_DEVICE_UDC_EP_NE_UDC_REG_3__UDC_EP_NE_UDC_REG_3_MASK  0xffffffff
#define USB_DEVICE_UDC_EP_NE_UDC_REG_3__UDC_EP_NE_UDC_REG_3_FIELD 0,31


/*
 * UDC_EP_NE_UDC_REG_4.
 * This register stores endpoint information. A register is dedicated to each
 * implemented endpoint, and
 * each register stores the endpoints maximum packet size, direction, type,
 * configuration number,
 * interface number, and the alternate interface value to which the endpoint
 * is tied.
 */
#define USB_DEVICE_UDC_EP_NE_UDC_REG_4 0x10514

#define USB_DEVICE_UDC_EP_NE_UDC_REG_4__UDC_EP_NE_UDC_REG_4_SHIFT 0
#define USB_DEVICE_UDC_EP_NE_UDC_REG_4__UDC_EP_NE_UDC_REG_4_WIDTH 32
#define USB_DEVICE_UDC_EP_NE_UDC_REG_4__UDC_EP_NE_UDC_REG_4_RESET_VAL 0
#define USB_DEVICE_UDC_EP_NE_UDC_REG_4__UDC_EP_NE_UDC_REG_4_RMASK 0xffffffff
#define USB_DEVICE_UDC_EP_NE_UDC_REG_4__UDC_EP_NE_UDC_REG_4_MASK  0xffffffff
#define USB_DEVICE_UDC_EP_NE_UDC_REG_4__UDC_EP_NE_UDC_REG_4_FIELD 0,31


/*
 * UDC_EP_NE_UDC_REG_5.
 * This register stores endpoint information. A register is dedicated to each
 * implemented endpoint, and
 * each register stores the endpoints maximum packet size, direction, type,
 * configuration number,
 * interface number, and the alternate interface value to which the endpoint
 * is tied.
 */
#define USB_DEVICE_UDC_EP_NE_UDC_REG_5 0x10518

#define USB_DEVICE_UDC_EP_NE_UDC_REG_5__UDC_EP_NE_UDC_REG_5_SHIFT 0
#define USB_DEVICE_UDC_EP_NE_UDC_REG_5__UDC_EP_NE_UDC_REG_5_WIDTH 32
#define USB_DEVICE_UDC_EP_NE_UDC_REG_5__UDC_EP_NE_UDC_REG_5_RESET_VAL 0
#define USB_DEVICE_UDC_EP_NE_UDC_REG_5__UDC_EP_NE_UDC_REG_5_RMASK 0xffffffff
#define USB_DEVICE_UDC_EP_NE_UDC_REG_5__UDC_EP_NE_UDC_REG_5_MASK  0xffffffff
#define USB_DEVICE_UDC_EP_NE_UDC_REG_5__UDC_EP_NE_UDC_REG_5_FIELD 0,31


/*
 * UDC_EP_NE_UDC_REG_6.
 * This register stores endpoint information. A register is dedicated to each
 * implemented endpoint, and
 * each register stores the endpoints maximum packet size, direction, type,
 * configuration number,
 * interface number, and the alternate interface value to which the endpoint
 * is tied.
 */
#define USB_DEVICE_UDC_EP_NE_UDC_REG_6 0x1051c

#define USB_DEVICE_UDC_EP_NE_UDC_REG_6__UDC_EP_NE_UDC_REG_6_SHIFT 0
#define USB_DEVICE_UDC_EP_NE_UDC_REG_6__UDC_EP_NE_UDC_REG_6_WIDTH 32
#define USB_DEVICE_UDC_EP_NE_UDC_REG_6__UDC_EP_NE_UDC_REG_6_RESET_VAL 0
#define USB_DEVICE_UDC_EP_NE_UDC_REG_6__UDC_EP_NE_UDC_REG_6_RMASK 0xffffffff
#define USB_DEVICE_UDC_EP_NE_UDC_REG_6__UDC_EP_NE_UDC_REG_6_MASK  0xffffffff
#define USB_DEVICE_UDC_EP_NE_UDC_REG_6__UDC_EP_NE_UDC_REG_6_FIELD 0,31


/*
 * UDC_EP_NE_UDC_REG_7.
 * This register stores endpoint information. A register is dedicated to each
 * implemented endpoint, and
 * each register stores the endpoints maximum packet size, direction, type,
 * configuration number,
 * interface number, and the alternate interface value to which the endpoint
 * is tied.
 */
#define USB_DEVICE_UDC_EP_NE_UDC_REG_7 0x10520

#define USB_DEVICE_UDC_EP_NE_UDC_REG_7__UDC_EP_NE_UDC_REG_7_SHIFT 0
#define USB_DEVICE_UDC_EP_NE_UDC_REG_7__UDC_EP_NE_UDC_REG_7_WIDTH 32
#define USB_DEVICE_UDC_EP_NE_UDC_REG_7__UDC_EP_NE_UDC_REG_7_RESET_VAL 0
#define USB_DEVICE_UDC_EP_NE_UDC_REG_7__UDC_EP_NE_UDC_REG_7_RMASK 0xffffffff
#define USB_DEVICE_UDC_EP_NE_UDC_REG_7__UDC_EP_NE_UDC_REG_7_MASK  0xffffffff
#define USB_DEVICE_UDC_EP_NE_UDC_REG_7__UDC_EP_NE_UDC_REG_7_FIELD 0,31


/*
 * UDC_VCON_UDC_REG.
 * ULPI PHY registers can be accessed by firmware through the FW access path.
 * There is one 32-bit
 * register, vcontrol, whose address is just one above the highest endpoint
 * address. When writing to this register, the structure is as shown. When
 * the CPU reads from this register,
 * the lower 8 bits are replaced by the actual register read data.
 */
#define USB_DEVICE_UDC_VCON_UDC_REG 0x10524

#define USB_DEVICE_UDC_VCON_UDC_REG__DATA_SHIFT 0
#define USB_DEVICE_UDC_VCON_UDC_REG__DATA_WIDTH 8
#define USB_DEVICE_UDC_VCON_UDC_REG__DATA_RESET_VAL 0
#define USB_DEVICE_UDC_VCON_UDC_REG__DATA_RMASK 0xff
#define USB_DEVICE_UDC_VCON_UDC_REG__DATA_MASK  0xff
#define USB_DEVICE_UDC_VCON_UDC_REG__DATA_FIELD 0,7

#define USB_DEVICE_UDC_VCON_UDC_REG__EXT_REG_ADDR_SHIFT 8
#define USB_DEVICE_UDC_VCON_UDC_REG__EXT_REG_ADDR_WIDTH 8
#define USB_DEVICE_UDC_VCON_UDC_REG__EXT_REG_ADDR_RESET_VAL 0
#define USB_DEVICE_UDC_VCON_UDC_REG__EXT_REG_ADDR_RMASK 0xff
#define USB_DEVICE_UDC_VCON_UDC_REG__EXT_REG_ADDR_MASK  0xff00
#define USB_DEVICE_UDC_VCON_UDC_REG__EXT_REG_ADDR_FIELD 8,15

#define USB_DEVICE_UDC_VCON_UDC_REG__IMMEDIATE_SHIFT 16
#define USB_DEVICE_UDC_VCON_UDC_REG__IMMEDIATE_WIDTH 6
#define USB_DEVICE_UDC_VCON_UDC_REG__IMMEDIATE_RESET_VAL 0
#define USB_DEVICE_UDC_VCON_UDC_REG__IMMEDIATE_RMASK 0x3f
#define USB_DEVICE_UDC_VCON_UDC_REG__IMMEDIATE_MASK  0x3f0000
#define USB_DEVICE_UDC_VCON_UDC_REG__IMMEDIATE_FIELD 16,21

#define USB_DEVICE_UDC_VCON_UDC_REG__RW_SHIFT 22
#define USB_DEVICE_UDC_VCON_UDC_REG__RW_WIDTH 2
#define USB_DEVICE_UDC_VCON_UDC_REG__RW_RESET_VAL 0
#define USB_DEVICE_UDC_VCON_UDC_REG__RW_RMASK 0x3
#define USB_DEVICE_UDC_VCON_UDC_REG__RW_MASK  0xc00000
#define USB_DEVICE_UDC_VCON_UDC_REG__RW_FIELD 22,23

#define USB_DEVICE_UDC_VCON_UDC_REG__CLEAN_SHIFT 25
#define USB_DEVICE_UDC_VCON_UDC_REG__CLEAN_WIDTH 1
#define USB_DEVICE_UDC_VCON_UDC_REG__CLEAN_RESET_VAL 0
#define USB_DEVICE_UDC_VCON_UDC_REG__CLEAN_RMASK 0x1
#define USB_DEVICE_UDC_VCON_UDC_REG__CLEAN_MASK  0x2000000
#define USB_DEVICE_UDC_VCON_UDC_REG__CLEAN_FIELD 25,25


/*
 * USB0 CLOCK PAD Control.
 * Provides control over USB0 clock PAD
 */
#define USB_DEVICE_USB0_CLK_PAD_CONTROL 0x0518

#define USB_DEVICE_USB0_CLK_PAD_CONTROL__STRENGTH_SHIFT 0
#define USB_DEVICE_USB0_CLK_PAD_CONTROL__STRENGTH_WIDTH 3
#define USB_DEVICE_USB0_CLK_PAD_CONTROL__STRENGTH_RESET_VAL 6
#define USB_DEVICE_USB0_CLK_PAD_CONTROL__STRENGTH_RMASK 0x7
#define USB_DEVICE_USB0_CLK_PAD_CONTROL__STRENGTH_MASK  0x7
#define USB_DEVICE_USB0_CLK_PAD_CONTROL__STRENGTH_FIELD 0,2

#define USB_DEVICE_USB0_CLK_PAD_CONTROL__SUS_SHIFT 3
#define USB_DEVICE_USB0_CLK_PAD_CONTROL__SUS_WIDTH 1
#define USB_DEVICE_USB0_CLK_PAD_CONTROL__SUS_RESET_VAL 0
#define USB_DEVICE_USB0_CLK_PAD_CONTROL__SUS_RMASK 0x1
#define USB_DEVICE_USB0_CLK_PAD_CONTROL__SUS_MASK  0x8
#define USB_DEVICE_USB0_CLK_PAD_CONTROL__SUS_FIELD 3,3

#define USB_DEVICE_USB0_CLK_PAD_CONTROL__SL_SHIFT 4
#define USB_DEVICE_USB0_CLK_PAD_CONTROL__SL_WIDTH 2
#define USB_DEVICE_USB0_CLK_PAD_CONTROL__SL_RESET_VAL 0
#define USB_DEVICE_USB0_CLK_PAD_CONTROL__SL_RMASK 0x3
#define USB_DEVICE_USB0_CLK_PAD_CONTROL__SL_MASK  0x30
#define USB_DEVICE_USB0_CLK_PAD_CONTROL__SL_FIELD 4,5

#define USB_DEVICE_USB0_CLK_PAD_CONTROL__PU_SHIFT 6
#define USB_DEVICE_USB0_CLK_PAD_CONTROL__PU_WIDTH 1
#define USB_DEVICE_USB0_CLK_PAD_CONTROL__PU_RESET_VAL 0
#define USB_DEVICE_USB0_CLK_PAD_CONTROL__PU_RMASK 0x1
#define USB_DEVICE_USB0_CLK_PAD_CONTROL__PU_MASK  0x40
#define USB_DEVICE_USB0_CLK_PAD_CONTROL__PU_FIELD 6,6

#define USB_DEVICE_USB0_CLK_PAD_CONTROL__PD_SHIFT 7
#define USB_DEVICE_USB0_CLK_PAD_CONTROL__PD_WIDTH 1
#define USB_DEVICE_USB0_CLK_PAD_CONTROL__PD_RESET_VAL 0
#define USB_DEVICE_USB0_CLK_PAD_CONTROL__PD_RMASK 0x1
#define USB_DEVICE_USB0_CLK_PAD_CONTROL__PD_MASK  0x80
#define USB_DEVICE_USB0_CLK_PAD_CONTROL__PD_FIELD 7,7

#define USB_DEVICE_USB0_CLK_PAD_CONTROL__SCHM_SHIFT 8
#define USB_DEVICE_USB0_CLK_PAD_CONTROL__SCHM_WIDTH 1
#define USB_DEVICE_USB0_CLK_PAD_CONTROL__SCHM_RESET_VAL 0
#define USB_DEVICE_USB0_CLK_PAD_CONTROL__SCHM_RMASK 0x1
#define USB_DEVICE_USB0_CLK_PAD_CONTROL__SCHM_MASK  0x100
#define USB_DEVICE_USB0_CLK_PAD_CONTROL__SCHM_FIELD 8,8


/*
 * USB PHY0 Clock Count.
 * Provides relative clock frequency between usb domain and phy0 clock domain.
 */
#define USB_DEVICE_USB0_CLOCK_COUNT 0x0508

#define USB_DEVICE_USB0_CLOCK_COUNT__RUN_SHIFT 0
#define USB_DEVICE_USB0_CLOCK_COUNT__RUN_WIDTH 1
#define USB_DEVICE_USB0_CLOCK_COUNT__RUN_RESET_VAL 0
#define USB_DEVICE_USB0_CLOCK_COUNT__RUN_RMASK 0x1
#define USB_DEVICE_USB0_CLOCK_COUNT__RUN_MASK  0x1
#define USB_DEVICE_USB0_CLOCK_COUNT__RUN_FIELD 0,0

#define USB_DEVICE_USB0_CLOCK_COUNT__COUNT_SHIFT 1
#define USB_DEVICE_USB0_CLOCK_COUNT__COUNT_WIDTH 15
#define USB_DEVICE_USB0_CLOCK_COUNT__COUNT_RESET_VAL 0
#define USB_DEVICE_USB0_CLOCK_COUNT__COUNT_RMASK 0x7fff
#define USB_DEVICE_USB0_CLOCK_COUNT__COUNT_MASK  0xfffe
#define USB_DEVICE_USB0_CLOCK_COUNT__COUNT_FIELD 1,15


/*
 * USB0 Control PAD Control.
 * Provides control over USB0 control PADs
 */
#define USB_DEVICE_USB0_CTL_PAD_CONTROL 0x0528

#define USB_DEVICE_USB0_CTL_PAD_CONTROL__STRENGTH_SHIFT 0
#define USB_DEVICE_USB0_CTL_PAD_CONTROL__STRENGTH_WIDTH 3
#define USB_DEVICE_USB0_CTL_PAD_CONTROL__STRENGTH_RESET_VAL 6
#define USB_DEVICE_USB0_CTL_PAD_CONTROL__STRENGTH_RMASK 0x7
#define USB_DEVICE_USB0_CTL_PAD_CONTROL__STRENGTH_MASK  0x7
#define USB_DEVICE_USB0_CTL_PAD_CONTROL__STRENGTH_FIELD 0,2

#define USB_DEVICE_USB0_CTL_PAD_CONTROL__SUS_SHIFT 3
#define USB_DEVICE_USB0_CTL_PAD_CONTROL__SUS_WIDTH 1
#define USB_DEVICE_USB0_CTL_PAD_CONTROL__SUS_RESET_VAL 0
#define USB_DEVICE_USB0_CTL_PAD_CONTROL__SUS_RMASK 0x1
#define USB_DEVICE_USB0_CTL_PAD_CONTROL__SUS_MASK  0x8
#define USB_DEVICE_USB0_CTL_PAD_CONTROL__SUS_FIELD 3,3

#define USB_DEVICE_USB0_CTL_PAD_CONTROL__SL_SHIFT 4
#define USB_DEVICE_USB0_CTL_PAD_CONTROL__SL_WIDTH 2
#define USB_DEVICE_USB0_CTL_PAD_CONTROL__SL_RESET_VAL 0
#define USB_DEVICE_USB0_CTL_PAD_CONTROL__SL_RMASK 0x3
#define USB_DEVICE_USB0_CTL_PAD_CONTROL__SL_MASK  0x30
#define USB_DEVICE_USB0_CTL_PAD_CONTROL__SL_FIELD 4,5

#define USB_DEVICE_USB0_CTL_PAD_CONTROL__PU_SHIFT 6
#define USB_DEVICE_USB0_CTL_PAD_CONTROL__PU_WIDTH 1
#define USB_DEVICE_USB0_CTL_PAD_CONTROL__PU_RESET_VAL 0
#define USB_DEVICE_USB0_CTL_PAD_CONTROL__PU_RMASK 0x1
#define USB_DEVICE_USB0_CTL_PAD_CONTROL__PU_MASK  0x40
#define USB_DEVICE_USB0_CTL_PAD_CONTROL__PU_FIELD 6,6

#define USB_DEVICE_USB0_CTL_PAD_CONTROL__PD_SHIFT 7
#define USB_DEVICE_USB0_CTL_PAD_CONTROL__PD_WIDTH 1
#define USB_DEVICE_USB0_CTL_PAD_CONTROL__PD_RESET_VAL 0
#define USB_DEVICE_USB0_CTL_PAD_CONTROL__PD_RMASK 0x1
#define USB_DEVICE_USB0_CTL_PAD_CONTROL__PD_MASK  0x80
#define USB_DEVICE_USB0_CTL_PAD_CONTROL__PD_FIELD 7,7

#define USB_DEVICE_USB0_CTL_PAD_CONTROL__SCHM_SHIFT 8
#define USB_DEVICE_USB0_CTL_PAD_CONTROL__SCHM_WIDTH 1
#define USB_DEVICE_USB0_CTL_PAD_CONTROL__SCHM_RESET_VAL 0
#define USB_DEVICE_USB0_CTL_PAD_CONTROL__SCHM_RMASK 0x1
#define USB_DEVICE_USB0_CTL_PAD_CONTROL__SCHM_MASK  0x100
#define USB_DEVICE_USB0_CTL_PAD_CONTROL__SCHM_FIELD 8,8


/*
 * USB0 DATA PAD Control.
 * Provides control over USB0 data PADs
 */
#define USB_DEVICE_USB0_DAT_PAD_CONTROL 0x0520

#define USB_DEVICE_USB0_DAT_PAD_CONTROL__STRENGTH_SHIFT 0
#define USB_DEVICE_USB0_DAT_PAD_CONTROL__STRENGTH_WIDTH 3
#define USB_DEVICE_USB0_DAT_PAD_CONTROL__STRENGTH_RESET_VAL 6
#define USB_DEVICE_USB0_DAT_PAD_CONTROL__STRENGTH_RMASK 0x7
#define USB_DEVICE_USB0_DAT_PAD_CONTROL__STRENGTH_MASK  0x7
#define USB_DEVICE_USB0_DAT_PAD_CONTROL__STRENGTH_FIELD 0,2

#define USB_DEVICE_USB0_DAT_PAD_CONTROL__SUS_SHIFT 3
#define USB_DEVICE_USB0_DAT_PAD_CONTROL__SUS_WIDTH 1
#define USB_DEVICE_USB0_DAT_PAD_CONTROL__SUS_RESET_VAL 0
#define USB_DEVICE_USB0_DAT_PAD_CONTROL__SUS_RMASK 0x1
#define USB_DEVICE_USB0_DAT_PAD_CONTROL__SUS_MASK  0x8
#define USB_DEVICE_USB0_DAT_PAD_CONTROL__SUS_FIELD 3,3

#define USB_DEVICE_USB0_DAT_PAD_CONTROL__SL_SHIFT 4
#define USB_DEVICE_USB0_DAT_PAD_CONTROL__SL_WIDTH 2
#define USB_DEVICE_USB0_DAT_PAD_CONTROL__SL_RESET_VAL 0
#define USB_DEVICE_USB0_DAT_PAD_CONTROL__SL_RMASK 0x3
#define USB_DEVICE_USB0_DAT_PAD_CONTROL__SL_MASK  0x30
#define USB_DEVICE_USB0_DAT_PAD_CONTROL__SL_FIELD 4,5

#define USB_DEVICE_USB0_DAT_PAD_CONTROL__PU_SHIFT 6
#define USB_DEVICE_USB0_DAT_PAD_CONTROL__PU_WIDTH 1
#define USB_DEVICE_USB0_DAT_PAD_CONTROL__PU_RESET_VAL 0
#define USB_DEVICE_USB0_DAT_PAD_CONTROL__PU_RMASK 0x1
#define USB_DEVICE_USB0_DAT_PAD_CONTROL__PU_MASK  0x40
#define USB_DEVICE_USB0_DAT_PAD_CONTROL__PU_FIELD 6,6

#define USB_DEVICE_USB0_DAT_PAD_CONTROL__PD_SHIFT 7
#define USB_DEVICE_USB0_DAT_PAD_CONTROL__PD_WIDTH 1
#define USB_DEVICE_USB0_DAT_PAD_CONTROL__PD_RESET_VAL 0
#define USB_DEVICE_USB0_DAT_PAD_CONTROL__PD_RMASK 0x1
#define USB_DEVICE_USB0_DAT_PAD_CONTROL__PD_MASK  0x80
#define USB_DEVICE_USB0_DAT_PAD_CONTROL__PD_FIELD 7,7

#define USB_DEVICE_USB0_DAT_PAD_CONTROL__SCHM_SHIFT 8
#define USB_DEVICE_USB0_DAT_PAD_CONTROL__SCHM_WIDTH 1
#define USB_DEVICE_USB0_DAT_PAD_CONTROL__SCHM_RESET_VAL 0
#define USB_DEVICE_USB0_DAT_PAD_CONTROL__SCHM_RMASK 0x1
#define USB_DEVICE_USB0_DAT_PAD_CONTROL__SCHM_MASK  0x100
#define USB_DEVICE_USB0_DAT_PAD_CONTROL__SCHM_FIELD 8,8


/*
 * USB1 CLOCK PAD Control.
 * Provides control over USB1 clock PAD
 */
#define USB_DEVICE_USB1_CLK_PAD_CONTROL 0x0530

#define USB_DEVICE_USB1_CLK_PAD_CONTROL__STRENGTH_SHIFT 0
#define USB_DEVICE_USB1_CLK_PAD_CONTROL__STRENGTH_WIDTH 3
#define USB_DEVICE_USB1_CLK_PAD_CONTROL__STRENGTH_RESET_VAL 3
#define USB_DEVICE_USB1_CLK_PAD_CONTROL__STRENGTH_RMASK 0x7
#define USB_DEVICE_USB1_CLK_PAD_CONTROL__STRENGTH_MASK  0x7
#define USB_DEVICE_USB1_CLK_PAD_CONTROL__STRENGTH_FIELD 0,2

#define USB_DEVICE_USB1_CLK_PAD_CONTROL__SUS_SHIFT 3
#define USB_DEVICE_USB1_CLK_PAD_CONTROL__SUS_WIDTH 1
#define USB_DEVICE_USB1_CLK_PAD_CONTROL__SUS_RESET_VAL 0
#define USB_DEVICE_USB1_CLK_PAD_CONTROL__SUS_RMASK 0x1
#define USB_DEVICE_USB1_CLK_PAD_CONTROL__SUS_MASK  0x8
#define USB_DEVICE_USB1_CLK_PAD_CONTROL__SUS_FIELD 3,3

#define USB_DEVICE_USB1_CLK_PAD_CONTROL__SL_SHIFT 4
#define USB_DEVICE_USB1_CLK_PAD_CONTROL__SL_WIDTH 2
#define USB_DEVICE_USB1_CLK_PAD_CONTROL__SL_RESET_VAL 0
#define USB_DEVICE_USB1_CLK_PAD_CONTROL__SL_RMASK 0x3
#define USB_DEVICE_USB1_CLK_PAD_CONTROL__SL_MASK  0x30
#define USB_DEVICE_USB1_CLK_PAD_CONTROL__SL_FIELD 4,5

#define USB_DEVICE_USB1_CLK_PAD_CONTROL__PU_SHIFT 6
#define USB_DEVICE_USB1_CLK_PAD_CONTROL__PU_WIDTH 1
#define USB_DEVICE_USB1_CLK_PAD_CONTROL__PU_RESET_VAL 0
#define USB_DEVICE_USB1_CLK_PAD_CONTROL__PU_RMASK 0x1
#define USB_DEVICE_USB1_CLK_PAD_CONTROL__PU_MASK  0x40
#define USB_DEVICE_USB1_CLK_PAD_CONTROL__PU_FIELD 6,6

#define USB_DEVICE_USB1_CLK_PAD_CONTROL__PD_SHIFT 7
#define USB_DEVICE_USB1_CLK_PAD_CONTROL__PD_WIDTH 1
#define USB_DEVICE_USB1_CLK_PAD_CONTROL__PD_RESET_VAL 0
#define USB_DEVICE_USB1_CLK_PAD_CONTROL__PD_RMASK 0x1
#define USB_DEVICE_USB1_CLK_PAD_CONTROL__PD_MASK  0x80
#define USB_DEVICE_USB1_CLK_PAD_CONTROL__PD_FIELD 7,7

#define USB_DEVICE_USB1_CLK_PAD_CONTROL__SCHM_SHIFT 8
#define USB_DEVICE_USB1_CLK_PAD_CONTROL__SCHM_WIDTH 1
#define USB_DEVICE_USB1_CLK_PAD_CONTROL__SCHM_RESET_VAL 0
#define USB_DEVICE_USB1_CLK_PAD_CONTROL__SCHM_RMASK 0x1
#define USB_DEVICE_USB1_CLK_PAD_CONTROL__SCHM_MASK  0x100
#define USB_DEVICE_USB1_CLK_PAD_CONTROL__SCHM_FIELD 8,8


/*
 * USB PHY1 Clock Count.
 * Provides relative clock frequency between usb domain and phy1 clock domain.
 */
#define USB_DEVICE_USB1_CLOCK_COUNT 0x0510

#define USB_DEVICE_USB1_CLOCK_COUNT__RUN_SHIFT 0
#define USB_DEVICE_USB1_CLOCK_COUNT__RUN_WIDTH 1
#define USB_DEVICE_USB1_CLOCK_COUNT__RUN_RESET_VAL 0
#define USB_DEVICE_USB1_CLOCK_COUNT__RUN_RMASK 0x1
#define USB_DEVICE_USB1_CLOCK_COUNT__RUN_MASK  0x1
#define USB_DEVICE_USB1_CLOCK_COUNT__RUN_FIELD 0,0

#define USB_DEVICE_USB1_CLOCK_COUNT__COUNT_SHIFT 1
#define USB_DEVICE_USB1_CLOCK_COUNT__COUNT_WIDTH 15
#define USB_DEVICE_USB1_CLOCK_COUNT__COUNT_RESET_VAL 0
#define USB_DEVICE_USB1_CLOCK_COUNT__COUNT_RMASK 0x7fff
#define USB_DEVICE_USB1_CLOCK_COUNT__COUNT_MASK  0xfffe
#define USB_DEVICE_USB1_CLOCK_COUNT__COUNT_FIELD 1,15


/*
 * USB1 Control PAD Control.
 * Provides control over USB1 control PADs
 */
#define USB_DEVICE_USB1_CTL_PAD_CONTROL 0x0540

#define USB_DEVICE_USB1_CTL_PAD_CONTROL__STRENGTH_SHIFT 0
#define USB_DEVICE_USB1_CTL_PAD_CONTROL__STRENGTH_WIDTH 3
#define USB_DEVICE_USB1_CTL_PAD_CONTROL__STRENGTH_RESET_VAL 3
#define USB_DEVICE_USB1_CTL_PAD_CONTROL__STRENGTH_RMASK 0x7
#define USB_DEVICE_USB1_CTL_PAD_CONTROL__STRENGTH_MASK  0x7
#define USB_DEVICE_USB1_CTL_PAD_CONTROL__STRENGTH_FIELD 0,2

#define USB_DEVICE_USB1_CTL_PAD_CONTROL__SUS_SHIFT 3
#define USB_DEVICE_USB1_CTL_PAD_CONTROL__SUS_WIDTH 1
#define USB_DEVICE_USB1_CTL_PAD_CONTROL__SUS_RESET_VAL 0
#define USB_DEVICE_USB1_CTL_PAD_CONTROL__SUS_RMASK 0x1
#define USB_DEVICE_USB1_CTL_PAD_CONTROL__SUS_MASK  0x8
#define USB_DEVICE_USB1_CTL_PAD_CONTROL__SUS_FIELD 3,3

#define USB_DEVICE_USB1_CTL_PAD_CONTROL__SL_SHIFT 4
#define USB_DEVICE_USB1_CTL_PAD_CONTROL__SL_WIDTH 2
#define USB_DEVICE_USB1_CTL_PAD_CONTROL__SL_RESET_VAL 0
#define USB_DEVICE_USB1_CTL_PAD_CONTROL__SL_RMASK 0x3
#define USB_DEVICE_USB1_CTL_PAD_CONTROL__SL_MASK  0x30
#define USB_DEVICE_USB1_CTL_PAD_CONTROL__SL_FIELD 4,5

#define USB_DEVICE_USB1_CTL_PAD_CONTROL__PU_SHIFT 6
#define USB_DEVICE_USB1_CTL_PAD_CONTROL__PU_WIDTH 1
#define USB_DEVICE_USB1_CTL_PAD_CONTROL__PU_RESET_VAL 0
#define USB_DEVICE_USB1_CTL_PAD_CONTROL__PU_RMASK 0x1
#define USB_DEVICE_USB1_CTL_PAD_CONTROL__PU_MASK  0x40
#define USB_DEVICE_USB1_CTL_PAD_CONTROL__PU_FIELD 6,6

#define USB_DEVICE_USB1_CTL_PAD_CONTROL__PD_SHIFT 7
#define USB_DEVICE_USB1_CTL_PAD_CONTROL__PD_WIDTH 1
#define USB_DEVICE_USB1_CTL_PAD_CONTROL__PD_RESET_VAL 0
#define USB_DEVICE_USB1_CTL_PAD_CONTROL__PD_RMASK 0x1
#define USB_DEVICE_USB1_CTL_PAD_CONTROL__PD_MASK  0x80
#define USB_DEVICE_USB1_CTL_PAD_CONTROL__PD_FIELD 7,7

#define USB_DEVICE_USB1_CTL_PAD_CONTROL__SCHM_SHIFT 8
#define USB_DEVICE_USB1_CTL_PAD_CONTROL__SCHM_WIDTH 1
#define USB_DEVICE_USB1_CTL_PAD_CONTROL__SCHM_RESET_VAL 0
#define USB_DEVICE_USB1_CTL_PAD_CONTROL__SCHM_RMASK 0x1
#define USB_DEVICE_USB1_CTL_PAD_CONTROL__SCHM_MASK  0x100
#define USB_DEVICE_USB1_CTL_PAD_CONTROL__SCHM_FIELD 8,8


/*
 * USB1 DATA PAD Control.
 * Provides control over USB1 data PADs
 */
#define USB_DEVICE_USB1_DAT_PAD_CONTROL 0x0538

#define USB_DEVICE_USB1_DAT_PAD_CONTROL__STRENGTH_SHIFT 0
#define USB_DEVICE_USB1_DAT_PAD_CONTROL__STRENGTH_WIDTH 3
#define USB_DEVICE_USB1_DAT_PAD_CONTROL__STRENGTH_RESET_VAL 3
#define USB_DEVICE_USB1_DAT_PAD_CONTROL__STRENGTH_RMASK 0x7
#define USB_DEVICE_USB1_DAT_PAD_CONTROL__STRENGTH_MASK  0x7
#define USB_DEVICE_USB1_DAT_PAD_CONTROL__STRENGTH_FIELD 0,2

#define USB_DEVICE_USB1_DAT_PAD_CONTROL__SUS_SHIFT 3
#define USB_DEVICE_USB1_DAT_PAD_CONTROL__SUS_WIDTH 1
#define USB_DEVICE_USB1_DAT_PAD_CONTROL__SUS_RESET_VAL 0
#define USB_DEVICE_USB1_DAT_PAD_CONTROL__SUS_RMASK 0x1
#define USB_DEVICE_USB1_DAT_PAD_CONTROL__SUS_MASK  0x8
#define USB_DEVICE_USB1_DAT_PAD_CONTROL__SUS_FIELD 3,3

#define USB_DEVICE_USB1_DAT_PAD_CONTROL__SL_SHIFT 4
#define USB_DEVICE_USB1_DAT_PAD_CONTROL__SL_WIDTH 2
#define USB_DEVICE_USB1_DAT_PAD_CONTROL__SL_RESET_VAL 0
#define USB_DEVICE_USB1_DAT_PAD_CONTROL__SL_RMASK 0x3
#define USB_DEVICE_USB1_DAT_PAD_CONTROL__SL_MASK  0x30
#define USB_DEVICE_USB1_DAT_PAD_CONTROL__SL_FIELD 4,5

#define USB_DEVICE_USB1_DAT_PAD_CONTROL__PU_SHIFT 6
#define USB_DEVICE_USB1_DAT_PAD_CONTROL__PU_WIDTH 1
#define USB_DEVICE_USB1_DAT_PAD_CONTROL__PU_RESET_VAL 0
#define USB_DEVICE_USB1_DAT_PAD_CONTROL__PU_RMASK 0x1
#define USB_DEVICE_USB1_DAT_PAD_CONTROL__PU_MASK  0x40
#define USB_DEVICE_USB1_DAT_PAD_CONTROL__PU_FIELD 6,6

#define USB_DEVICE_USB1_DAT_PAD_CONTROL__PD_SHIFT 7
#define USB_DEVICE_USB1_DAT_PAD_CONTROL__PD_WIDTH 1
#define USB_DEVICE_USB1_DAT_PAD_CONTROL__PD_RESET_VAL 0
#define USB_DEVICE_USB1_DAT_PAD_CONTROL__PD_RMASK 0x1
#define USB_DEVICE_USB1_DAT_PAD_CONTROL__PD_MASK  0x80
#define USB_DEVICE_USB1_DAT_PAD_CONTROL__PD_FIELD 7,7

#define USB_DEVICE_USB1_DAT_PAD_CONTROL__SCHM_SHIFT 8
#define USB_DEVICE_USB1_DAT_PAD_CONTROL__SCHM_WIDTH 1
#define USB_DEVICE_USB1_DAT_PAD_CONTROL__SCHM_RESET_VAL 0
#define USB_DEVICE_USB1_DAT_PAD_CONTROL__SCHM_RMASK 0x1
#define USB_DEVICE_USB1_DAT_PAD_CONTROL__SCHM_MASK  0x100
#define USB_DEVICE_USB1_DAT_PAD_CONTROL__SCHM_FIELD 8,8


/*
 * USB Port0 Select.
 * USB PORT 0 configuration
 */
#define USB_DEVICE_USB_PORT0_SELECT 0x0200

#define USB_DEVICE_USB_PORT0_SELECT__STRAP_PIN_DISABLE_SHIFT 0
#define USB_DEVICE_USB_PORT0_SELECT__STRAP_PIN_DISABLE_WIDTH 1
#define USB_DEVICE_USB_PORT0_SELECT__STRAP_PIN_DISABLE_RESET_VAL 0
#define USB_DEVICE_USB_PORT0_SELECT__STRAP_PIN_DISABLE_RMASK 0x1
#define USB_DEVICE_USB_PORT0_SELECT__STRAP_PIN_DISABLE_MASK  0x1
#define USB_DEVICE_USB_PORT0_SELECT__STRAP_PIN_DISABLE_FIELD 0,0

#define USB_DEVICE_USB_PORT0_SELECT__HOST_ENABLE_SHIFT 1
#define USB_DEVICE_USB_PORT0_SELECT__HOST_ENABLE_WIDTH 1
#define USB_DEVICE_USB_PORT0_SELECT__HOST_ENABLE_RESET_VAL 0
#define USB_DEVICE_USB_PORT0_SELECT__HOST_ENABLE_RMASK 0x1
#define USB_DEVICE_USB_PORT0_SELECT__HOST_ENABLE_MASK  0x2
#define USB_DEVICE_USB_PORT0_SELECT__HOST_ENABLE_FIELD 1,1



#endif /* !defined(__ARCH_USB_DEVICE_DEF_H__) */
